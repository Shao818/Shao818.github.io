<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>倾向得分匹配法（PSM）</title>
      <link href="posts/2474087705/"/>
      <url>posts/2474087705/</url>
      
        <content type="html"><![CDATA[<h1 id="倾向得分匹配法的实现pscore">倾向得分匹配法的实现：<code>pscore</code></h1><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">cd C:\Mirror\StataLearn\StataDatause nswpsid.dta,clear*browse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>C:\Mirror\StataLearn\StataData</code></pre><p>​</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">*我手头的数据变量名全部为大写，便于观察，我统一修改为小写rename _all,lower<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">reg re78 treat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>      Source |       SS           df       MS      Number of obs   =     2,675-------------+----------------------------------   F(1, 2673)      =    173.41       Model |  3.9811e+10         1  3.9811e+10   Prob &gt; F        =    0.0000    Residual |  6.1365e+11     2,673   229573201   R-squared       =    0.0609-------------+----------------------------------   Adj R-squared   =    0.0606       Total |  6.5346e+11     2,674   244375675   Root MSE        =     15152------------------------------------------------------------------------------        re78 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------       treat |  -15204.78   1154.614   -13.17   0.000     -17468.8   -12940.75       _cons |   21553.92   303.6414    70.98   0.000     20958.53    22149.32------------------------------------------------------------------------------</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">reg re78 treat age educ black hisp marr re74 re75 agesq educsq nodegree re74sq re75sq u74black u74hisp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>      Source |       SS           df       MS      Number of obs   =     2,675-------------+----------------------------------   F(15, 2659)     =    254.55       Model |  3.8521e+11        15  2.5681e+10   Prob &gt; F        =    0.0000    Residual |  2.6825e+11     2,659   100884505   R-squared       =    0.5895-------------+----------------------------------   Adj R-squared   =    0.5872       Total |  6.5346e+11     2,674   244375675   Root MSE        =     10044------------------------------------------------------------------------------        re78 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------       treat |   275.1949   1110.779     0.25   0.804    -1902.882    2453.272         age |   75.09001   157.2443     0.48   0.633    -233.2436    383.4236        educ |  -315.5722   364.6524    -0.87   0.387    -1030.603    399.4589       black |  -786.4703   503.0553    -1.56   0.118     -1772.89    199.9489        hisp |   2508.966   1188.907     2.11   0.035     177.6904    4840.241        marr |   1140.549   591.6965     1.93   0.054    -19.68268    2300.781        re74 |   .2943587   .0533481     5.52   0.000     .1897508    .3989666        re75 |   .6239079   .0487918    12.79   0.000     .5282341    .7195816       agesq |  -2.329855   2.135465    -1.09   0.275    -6.517196    1.857485      educsq |   38.24418   14.92522     2.56   0.010      8.97797    67.51039    nodegree |   401.6618   652.1677     0.62   0.538    -877.1456    1680.469      re74sq |  -2.05e-07   8.88e-07    -0.23   0.818    -1.95e-06    1.54e-06      re75sq |  -1.07e-06   7.79e-07    -1.37   0.171    -2.59e-06    4.61e-07    u74black |   2348.742   1191.527     1.97   0.049     12.32794    4685.157     u74hisp |  -1640.353   2891.265    -0.57   0.571     -7309.71    4029.004       _cons |   1928.646   3582.802     0.54   0.590    -5096.715    8954.008------------------------------------------------------------------------------</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**global breps 1000*设定重复抽样全局宏1000次global vars age agesq educ educsq black hisp marr re74 re75 re74sq u74 u75 u74hisp nodegree  *设定一个全局宏vars，代表后面的变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pscore treat $vars, pscore(myscore) comsup blockid(myblock) numblo(10) level(0.005) logit*设置block，设置显著性水平0.005，采用logit估计。一般而言，logit和probit都是比较常用的估计方法。*这个模型也叫作选择模型。*我们应该先检验打分的平衡性。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​</p><pre><code>**************************************************** Algorithm to estimate the propensity score **************************************************** </code></pre><p>​</p><pre><code>The treatment is treat      treat |      Freq.     Percent        Cum.------------+-----------------------------------          0 |      2,490       93.08       93.08          1 |        185        6.92      100.00------------+-----------------------------------      Total |      2,675      100.00</code></pre><p>​<br>​</p><pre><code>Estimation of the propensity score Iteration 0:   log likelihood = -672.64954Iteration 1:   log likelihood = -551.87026Iteration 2:   log likelihood = -355.56578Iteration 3:   log likelihood = -234.78051Iteration 4:   log likelihood =  -208.2965Iteration 5:   log likelihood = -199.26423Iteration 6:   log likelihood = -197.26114Iteration 7:   log likelihood =  -197.1054Iteration 8:   log likelihood = -197.10179Iteration 9:   log likelihood = -197.10175Logistic regression                               Number of obs   =       2675                                                  LR chi2(14)     =     951.10                                                  Prob &gt; chi2     =     0.0000Log likelihood = -197.10175                       Pseudo R2       =     0.7070------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .2628422    .120206     2.19   0.029     .0272428    .4984416       agesq |  -.0053794   .0018341    -2.93   0.003    -.0089742   -.0017846        educ |   .7149774   .3418173     2.09   0.036     .0450278    1.384927      educsq |  -.0426178   .0179039    -2.38   0.017    -.0777088   -.0075269       black |   2.519383    .370358     6.80   0.000     1.793495    3.245272        hisp |   3.087327   .7340486     4.21   0.000     1.648618    4.526036        marr |  -1.780857    .301802    -5.90   0.000    -2.372378   -1.189336        re74 |  -.0000448   .0000425    -1.05   0.292     -.000128    .0000385        re75 |  -.0002678   .0000485    -5.52   0.000    -.0003628   -.0001727      re74sq |   1.99e-09   7.75e-10     2.57   0.010     4.72e-10    3.51e-09         u74 |   3.100056   .5187391     5.98   0.000     2.083346    4.116766         u75 |  -1.273525   .4644557    -2.74   0.006    -2.183842   -.3632088     u74hisp |  -1.925803    1.07186    -1.80   0.072     -4.02661    .1750032    nodegree |   .1891046   .4257533     0.44   0.657    -.6453564    1.023566       _cons |  -7.407524   2.445692    -3.03   0.002    -12.20099   -2.614056------------------------------------------------------------------------------Note: 65 failures and 0 successes completely determined.</code></pre><p>​<br>​</p><pre><code>Note: the common support option has been selectedThe region of common support is [.00036433, .98576756]</code></pre><p>​<br>​</p><pre><code>Description of the estimated propensity score in region of common support                  Estimated propensity score-------------------------------------------------------------      Percentiles      Smallest 1%     .0003871       .0003643 5%     .0004805       .000366910%     .0006343       .0003702       Obs               1,27125%     .0016393       .0003714       Sum of Wgt.       1,27150%     .0090427                      Mean           .1447205                        Largest       Std. Dev.      .280951175%     .0897599       .980304390%      .656286       .9830988       Variance       .078933595%     .9392306       .9855413       Skewness       2.04999999%     .9640553       .9857676       Kurtosis       5.748631</code></pre><p>​<br>​</p><pre><code>****************************************************** Step 1: Identification of the optimal number of blocks Use option detail if you want more detailed output ****************************************************** </code></pre><p>​</p><pre><code>The final number of blocks is 10This number of blocks ensures that the mean propensity scoreis not different for treated and controls in each blocks</code></pre><p>​<br>​</p><pre><code>********************************************************** Step 2: Test of balancing property of the propensity score Use option detail if you want more detailed output ********************************************************** Variable re74 is not balanced in block 8Variable re74sq is not balanced in block 8Variable u74 is not balanced in block 8The balancing property is not satisfied Try a different specification of the propensity score   Inferior |  of block |         treatof pscore  |         0          1 |     Total-----------+----------------------+----------         0 |       960          9 |       969         .1 |        56         10 |        66         .2 |        15          7 |        22         .3 |        18          7 |        25         .4 |        15         12 |        27         .5 |         7         12 |        19         .6 |         5         21 |        26         .7 |         2         12 |        14         .8 |         2         14 |        16         .9 |         6         81 |        87 -----------+----------------------+----------     Total |     1,086        185 |     1,271 Note: the common support option has been selected</code></pre><p>​</p><pre><code>******************************************* End of the algorithm to estimate the pscore ******************************************* </code></pre><h3 id="方法一近邻匹配nearest-neighbor-matching">方法一：近邻匹配（nearest neighbor matching）</h3><ul><li>含义：最邻近匹配法是最常用的一种匹配方法，它把控制组中找到的与处理组个体倾向得分差异最小的个体，作为自己的比较对象 。</li><li>优点：按处理个体找控制个体，所有处理个体都会配对成功，处理组的信息得以充分使用。</li><li>缺点：由于不舍弃任何一个处理组，很可能有些配对组的倾向得分差距很大，也将其配对，导致配对质量不高，而处理效应ATT的结果中也会包含这一差距，使得ATT精确度下降。</li></ul><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**set seed 12345*（产生随机数种子）attnd re78 treat $vars,comsup boot reps($breps) dots logit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​</p><pre><code> The program is searching the nearest neighbor of each treated unit.  This operation may take a while.</code></pre><p>​<br>​</p><pre><code>ATT estimation with Nearest Neighbor Matching method (random draw version)Analytical standard errors---------------------------------------------------------n. treat.   n. contr.         ATT    Std. Err.          t---------------------------------------------------------      185          60    1285.782     3895.044      0.330---------------------------------------------------------Note: the numbers of treated and controls refer to actualnearest neighbour matches</code></pre><p>​<br>​<br>​<br>​</p><pre><code>Bootstrapping of standard errors command:      attnd re78 treat age agesq educ educsq black hisp marr re74 re75 r&gt; e74sq u74 u75 u74hisp nodegree , pscore() logit comsupstatistic:    attnd      = r(attnd)................................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................note: label truncated to 80 charactersBootstrap statistics                              Number of obs    =      2675                                                  Replications     =      1000------------------------------------------------------------------------------Variable     |  Reps  Observed      Bias  Std. Err. [95% Conf. Interval]-------------+----------------------------------------------------------------       attnd |  1000  1285.782  301.0502  1268.737  -1203.913   3775.477   (N)             |                                      -1013.798   3885.525   (P)             |                                      -2072.365   3301.271  (BC)------------------------------------------------------------------------------Note:  N   = normal       P   = percentile       BC  = bias-corrected</code></pre><p>​<br>​</p><pre><code>ATT estimation with Nearest Neighbor Matching method(random draw version)Bootstrapped standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185          60    1285.782    1268.737       1.013---------------------------------------------------------Note: the numbers of treated and controls refer to actualnearest neighbour matches</code></pre><h3 id="方法二半径匹配radius-matching">方法二：半径匹配（radius matching）</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">*半径匹配法是事先设定半径，找到所有设定半径范围内的单位圆中的控制样本，半径取值为正。随着半径的降低，匹配的要求越来越严。set seed 12345attr re78 treat $vars, comsup boot reps($breps) dots logit radius(0.001)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​</p><pre><code> The program is searching for matches of treated units within radius.  This operation may take a while.</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Radius Matching methodAnalytical standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------       51         541   -7808.241    1146.418      -6.811---------------------------------------------------------Note: the numbers of treated and controls refer to actualmatches within radius</code></pre><p>​<br>​<br>​<br>​</p><pre><code>Bootstrapping of standard errors command:      attr re78 treat age agesq educ educsq black hisp marr re74 re75 re&gt; 74sq u74 u75 u74hisp nodegree , pscore() logit comsup radius(.001)statistic:    attr       = r(attr)................................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................note: label truncated to 80 charactersBootstrap statistics                              Number of obs    =      2675                                                  Replications     =      1000------------------------------------------------------------------------------Variable     |  Reps  Observed      Bias  Std. Err. [95% Conf. Interval]-------------+----------------------------------------------------------------        attr |  1000 -7808.242  1681.651  3063.974   -13820.8  -1795.679   (N)             |                                       -11035.8   509.8419   (P)             |                                      -12358.52   -2307.59  (BC)------------------------------------------------------------------------------Note:  N   = normal       P   = percentile       BC  = bias-corrected</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Radius Matching methodBootstrapped standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------       51         541   -7808.242    3063.974      -2.548---------------------------------------------------------Note: the numbers of treated and controls refer to actualmatches within radius</code></pre><h3 id="方法三分层匹配stratification-matching">方法三：分层匹配（stratification matching）</h3><ul><li>分层匹配法是根据估计的倾向得分将全部样本分块，使得每块的平均倾向得分在处理组和控制组中相等。</li><li>优点：Cochrane,Chambers（1965）指出五个区就可以消除95%的与协变量相关的偏差。这个方法考虑到了样本的分层问题或聚类问题。 就是假定：每一层内的个体样本具有相关性，而各层之间的样本不具有相关性。</li><li>缺点：如果在每个区内找不到对照个体，那么这类个体的信息，会丢弃不用。总体配对的数量减少。</li></ul><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**set seed 12345atts re78 treat $vars, pscore(myscore) blockid(myblock) comsup boot reps($breps) dots<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​<br>​</p><pre><code>ATT estimation with the Stratification methodAnalytical standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185        1086    1436.141     878.679       1.634---------------------------------------------------------</code></pre><p>​<br>​<br>​<br>​</p><pre><code>Bootstrapping of standard errors command:      atts re78 treat age agesq educ educsq black hisp marr re74 re75 re&gt; 74sq u74 u75 u74hisp nodegree , pscore(myscore) blockid(myblock) comsupstatistic:    atts       = r(atts)................................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................note: label truncated to 80 charactersBootstrap statistics                              Number of obs    =      2675                                                  Replications     =      1000------------------------------------------------------------------------------Variable     |  Reps  Observed      Bias  Std. Err. [95% Conf. Interval]-------------+----------------------------------------------------------------        atts |  1000  1436.141  14.08074  988.5672  -503.7653   3376.048   (N)             |                                      -443.7835   3479.466   (P)             |                                       -436.341   3513.302  (BC)------------------------------------------------------------------------------Note:  N   = normal       P   = percentile       BC  = bias-corrected</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Stratification methodBootstrapped standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185        1086    1436.141     988.567       1.453---------------------------------------------------------</code></pre><h3 id="方法四核匹配法kernel-matching">方法四：核匹配法（kernel matching）</h3><p>核匹配是一种非参数方法，通过构造一个虚拟对象来匹配处理组，构造的原则是对现有的控制变量做权重平均，权重的取值与处理组、控制组PS值差距呈反向相关关系。</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**set seed 12345attk  re78 treat $vars,comsup boot reps($breps) dots logit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​</p><pre><code> The program is searching for matches of each treated unit.  This operation may take a while.</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Kernel Matching method ---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185        1086    1342.016           .           .---------------------------------------------------------Note: Analytical standard errors cannot be computed. Usethe bootstrap option to get bootstrapped standard errors.</code></pre><p>​<br>​<br>​<br>​</p><pre><code>Bootstrapping of standard errors command:      attk re78 treat age agesq educ educsq black hisp marr re74 re75 re&gt; 74sq u74 u75 u74hisp nodegree , pscore() logit comsup bwidth(.06)statistic:    attk       = r(attk)................................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................note: label truncated to 80 charactersBootstrap statistics                              Number of obs    =      2675                                                  Replications     =      1000------------------------------------------------------------------------------Variable     |  Reps  Observed      Bias  Std. Err. [95% Conf. Interval]-------------+----------------------------------------------------------------        attk |  1000  1342.016  19.94675  1023.717  -666.8665   3350.899   (N)             |                                      -550.7159    3380.17   (P)             |                                      -543.5536   3382.363  (BC)------------------------------------------------------------------------------Note:  N   = normal       P   = percentile       BC  = bias-corrected</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Kernel Matching methodBootstrapped standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185        1086    1342.016    1023.717       1.311---------------------------------------------------------</code></pre><h3 id="方法五马氏距离">方法五：马氏距离</h3><p>由于在倾向得分匹配第一阶段估计倾向得分时存在不确定性，Abadie and Imbens的相关研究又重新回到更简单的马氏距离，进行有放回且允许并列的k近邻匹配，针对非精确匹配一般存在偏差，提出了偏差校正的方法，通过回归的方法估计偏差，然后得到偏差校正匹配估计量。</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**nnmatch re78 treat $vars, m(4) tc(att) population  bias(bias) robust(4)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>Matching estimator: Population Average Treatment Effect for the TreatedWeighting matrix: inverse variance          Number of obs          =      2675                                            Number of matches  (m) =         4                                            Number of matches,                                               robust std. err. (h) =         4------------------------------------------------------------------------------        re78 |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------        PATT |   2324.278   831.4603     2.80   0.005     694.6459     3953.91------------------------------------------------------------------------------Matching variables:  age agesq educ educsq black hisp marr re74 re75 re74sq        u74 u75 u74hisp nodegreeBias-adj variables:  age agesq educ educsq black hisp marr re74 re75 re74sq        u74 u75 u74hisp nodegree</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计量经济学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计量经济学 </tag>
            
            <tag> PSM </tag>
            
            <tag> 倾向得分匹配法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倾向得分匹配法（PSM）</title>
      <link href="posts/2474087706/"/>
      <url>posts/2474087706/</url>
      
        <content type="html"><![CDATA[<h1 id="倾向得分匹配法的实现psmatch2">倾向得分匹配法的实现：<code>psmatch2</code></h1><p>其实呢，psmatch2和pscore除了句法结构稍有不同之外，估计的结果等是完全相同的。</p><p>我大致列一下命令，感兴趣的朋友可以自行尝试。</p><h3 id="基本命令">基本命令</h3><p></p><pre class="line-numbers language-none"><code class="language-none">psmatch2 depvar [indepvars] [if exp] [in range] [, outcome(varlist) pscore(varname)                     neighbor(integer) radius caliper(real) mahalanobis(varlist) ai(integer) population                     altvariance kernel llr kerneltype(type) bwidth(real) spline nknots(integer) common                     trim(real) noreplacement descending odds index logit ties quietly w(matrix) ate]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p></p><ul><li><code>neighbor(integer)</code> number of neighbors used to calculate the matched outcome.Defaults to 1. Default matching method is single nearest-neighbour (without caliper).<br></li><li><code>noreplacement</code> perform 1-to-1 matching without replacement. Nearest neigbor propensity score matching only.<br></li><li><code>descending</code> perform 1-to-1 matching without replacement in descending order. Nearest neighbor propensity score matching only.<br></li><li><code>ties</code> not only match nearest neighbor but also other controls with identical (tied) pscores.<br></li><li><code>radius</code> perform radius matching within the specified radius given by caliper.<br></li><li><code>caliper(real)</code> value for maximum distance of controls. Use to perform nearest neighbor(s) within caliper, radius matching and Mahalanobis 1-to-1 matching.</li><li><code>kernel</code> perform kernel matching.</li><li>kerneltype(kernel_type) specifies the type of kernel:<ul><li><code>normal</code> the gaussian kernel.</li><li><code>biweight</code> the biweight kernel.</li><li><code>epan</code> the epanechnikov kernel (Default).</li><li><code>uniform</code> the uniform kernel.<br></li></ul></li><li><code>llr</code> llr use local linear regression matching instead of kernel matching.</li><li><code>bwidth(real)</code> the bandwidth for kernel and local linear regression matching. Default bandwidth is 0.06, except when doing local linear regression with the Epanechnikov kernel when the default bandwidth is the rule-of-thumb bandwidth of lpoly.</li><li><code>mahalanobis(varlist)</code> perform Mahalanobis-metric matching on varlist.</li></ul><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use nswpsid,clearrename _all,lowerglobal breps 1000global vars age agesq educ educsq black hisp marr re74 re75 re74sq u74 u75 u74hisp nodegree  psmatch2  treat $vars ,out(re78)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​<br>​<br>​</p><pre><code>Probit regression                               Number of obs     =      2,675                                                LR chi2(13)       =     940.49                                                Prob &gt; chi2       =     0.0000Log likelihood = -202.40579                     Pseudo R2         =     0.6991------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .1543439   .0644103     2.40   0.017     .0281021    .2805857       agesq |  -.0030911   .0009855    -3.14   0.002    -.0050227   -.0011595        educ |   .3889617   .1795042     2.17   0.030     .0371398    .7407835      educsq |  -.0226529   .0092936    -2.44   0.015    -.0408681   -.0044377       black |   1.345799   .1882886     7.15   0.000     .9767603    1.714838        hisp |   1.586357   .3700556     4.29   0.000     .8610618    2.311653        marr |  -.9527278    .154817    -6.15   0.000    -1.256163   -.6492921        re74 |  -.0000227   .0000212    -1.07   0.285    -.0000643    .0000189        re75 |  -.0001119   .0000205    -5.47   0.000     -.000152   -.0000718      re74sq |   9.77e-10   3.51e-10     2.78   0.005     2.89e-10    1.67e-09         u74 |    1.64806   .2656635     6.20   0.000     1.127369    2.168751         u75 |   -.542294   .2432332    -2.23   0.026    -1.019022   -.0655657     u74hisp |  -.9231337   .5719261    -1.61   0.107    -2.044088    .1978208    nodegree |   .1278371   .2203571     0.58   0.562    -.3040549     .559729       _cons |  -4.431708   1.310215    -3.38   0.001    -6.999682   -1.863734------------------------------------------------------------------------------Note: 507 failures and 0 successes completely determined.--------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6349.14537   21553.9213  -15204.7759   1154.61435 &gt;   -13.17                        ATT | 6349.14537   4600.46309   1748.68228   1825.51521 &gt;     0.96----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated.           | psmatch2: psmatch2: |   Common Treatment |  supportassignment | On suppor |     Total-----------+-----------+---------- Untreated |     2,490 |     2,490    Treated |       185 |       185 -----------+-----------+----------     Total |     2,675 |     2,675 </code></pre><h3 id="近邻匹配">近邻匹配</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2  treat $vars,out(re78) neighbor(2) ate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Probit regression                               Number of obs     =      2,675                                                LR chi2(13)       =     940.49                                                Prob &gt; chi2       =     0.0000Log likelihood = -202.40579                     Pseudo R2         =     0.6991------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .1543439   .0644103     2.40   0.017     .0281021    .2805857       agesq |  -.0030911   .0009855    -3.14   0.002    -.0050227   -.0011595        educ |   .3889617   .1795042     2.17   0.030     .0371398    .7407835      educsq |  -.0226529   .0092936    -2.44   0.015    -.0408681   -.0044377       black |   1.345799   .1882886     7.15   0.000     .9767603    1.714838        hisp |   1.586357   .3700556     4.29   0.000     .8610618    2.311653        marr |  -.9527278    .154817    -6.15   0.000    -1.256163   -.6492921        re74 |  -.0000227   .0000212    -1.07   0.285    -.0000643    .0000189        re75 |  -.0001119   .0000205    -5.47   0.000     -.000152   -.0000718      re74sq |   9.77e-10   3.51e-10     2.78   0.005     2.89e-10    1.67e-09         u74 |    1.64806   .2656635     6.20   0.000     1.127369    2.168751         u75 |   -.542294   .2432332    -2.23   0.026    -1.019022   -.0655657     u74hisp |  -.9231337   .5719261    -1.61   0.107    -2.044088    .1978208    nodegree |   .1278371   .2203571     0.58   0.562    -.3040549     .559729       _cons |  -4.431708   1.310215    -3.38   0.001    -6.999682   -1.863734------------------------------------------------------------------------------Note: 507 failures and 0 successes completely determined.--------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6349.14537   21553.9213  -15204.7759   1154.61435 &gt;   -13.17                        ATT | 6349.14537   4570.95733   1778.18805   1626.12983 &gt;     1.09                        ATU | 21553.9213   5483.05914  -16070.8622            . &gt;        .                        ATE |                          -14836.4419            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated.           | psmatch2: psmatch2: |   Common Treatment |  supportassignment | On suppor |     Total-----------+-----------+---------- Untreated |     2,490 |     2,490    Treated |       185 |       185 -----------+-----------+----------     Total |     2,675 |     2,675 </code></pre><h3 id="半径匹配">半径匹配</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2  treat $vars,out(re78)  ate radius caliper(0.01)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Probit regression                               Number of obs     =      2,675                                                LR chi2(13)       =     940.49                                                Prob &gt; chi2       =     0.0000Log likelihood = -202.40579                     Pseudo R2         =     0.6991------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .1543439   .0644103     2.40   0.017     .0281021    .2805857       agesq |  -.0030911   .0009855    -3.14   0.002    -.0050227   -.0011595        educ |   .3889617   .1795042     2.17   0.030     .0371398    .7407835      educsq |  -.0226529   .0092936    -2.44   0.015    -.0408681   -.0044377       black |   1.345799   .1882886     7.15   0.000     .9767603    1.714838        hisp |   1.586357   .3700556     4.29   0.000     .8610618    2.311653        marr |  -.9527278    .154817    -6.15   0.000    -1.256163   -.6492921        re74 |  -.0000227   .0000212    -1.07   0.285    -.0000643    .0000189        re75 |  -.0001119   .0000205    -5.47   0.000     -.000152   -.0000718      re74sq |   9.77e-10   3.51e-10     2.78   0.005     2.89e-10    1.67e-09         u74 |    1.64806   .2656635     6.20   0.000     1.127369    2.168751         u75 |   -.542294   .2432332    -2.23   0.026    -1.019022   -.0655657     u74hisp |  -.9231337   .5719261    -1.61   0.107    -2.044088    .1978208    nodegree |   .1278371   .2203571     0.58   0.562    -.3040549     .559729       _cons |  -4.431708   1.310215    -3.38   0.001    -6.999682   -1.863734------------------------------------------------------------------------------Note: 507 failures and 0 successes completely determined.--------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6349.14537   21553.9213  -15204.7759   1154.61435 &gt;   -13.17                        ATT | 5797.07774   4992.15701   804.920727   2941.28189 &gt;     0.27                        ATU | 22014.9702    4457.3058  -17557.6644            . &gt;        .                        ATE |                          -16580.5462            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated. psmatch2: |   psmatch2: Common Treatment |        supportassignment | Off suppo  On suppor |     Total-----------+----------------------+---------- Untreated |        88      2,402 |     2,490    Treated |        50        135 |       185 -----------+----------------------+----------     Total |       138      2,537 |     2,675 </code></pre><h3 id="核匹配">核匹配</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2  treat $vars,out(re78)  ate kernel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Probit regression                               Number of obs     =      2,675                                                LR chi2(13)       =     940.49                                                Prob &gt; chi2       =     0.0000Log likelihood = -202.40579                     Pseudo R2         =     0.6991------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .1543439   .0644103     2.40   0.017     .0281021    .2805857       agesq |  -.0030911   .0009855    -3.14   0.002    -.0050227   -.0011595        educ |   .3889617   .1795042     2.17   0.030     .0371398    .7407835      educsq |  -.0226529   .0092936    -2.44   0.015    -.0408681   -.0044377       black |   1.345799   .1882886     7.15   0.000     .9767603    1.714838        hisp |   1.586357   .3700556     4.29   0.000     .8610618    2.311653        marr |  -.9527278    .154817    -6.15   0.000    -1.256163   -.6492921        re74 |  -.0000227   .0000212    -1.07   0.285    -.0000643    .0000189        re75 |  -.0001119   .0000205    -5.47   0.000     -.000152   -.0000718      re74sq |   9.77e-10   3.51e-10     2.78   0.005     2.89e-10    1.67e-09         u74 |    1.64806   .2656635     6.20   0.000     1.127369    2.168751         u75 |   -.542294   .2432332    -2.23   0.026    -1.019022   -.0655657     u74hisp |  -.9231337   .5719261    -1.61   0.107    -2.044088    .1978208    nodegree |   .1278371   .2203571     0.58   0.562    -.3040549     .559729       _cons |  -4.431708   1.310215    -3.38   0.001    -6.999682   -1.863734------------------------------------------------------------------------------Note: 507 failures and 0 successes completely determined.--------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6349.14537   21553.9213  -15204.7759   1154.61435 &gt;   -13.17                        ATT | 6349.14537   5437.46536   911.680015   3074.54428 &gt;     0.30                        ATU | 21553.9213   11330.8223   -10223.099            . &gt;        .                        ATE |                          -9453.03015            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated.           | psmatch2: psmatch2: |   Common Treatment |  supportassignment | On suppor |     Total-----------+-----------+---------- Untreated |     2,490 |     2,490    Treated |       185 |       185 -----------+-----------+----------     Total |     2,675 |     2,675 </code></pre><h3 id="对自变量进行平衡性检验">对自变量进行平衡性检验</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pstest $vars, both graph<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>--------------------------------------------------------------------------------&gt; --------                Unmatched |       Mean               %reduct |     t-test    |  &gt; V(T)/Variable          Matched | Treated Control    %bias  |bias| |    t    p&gt;|t| |  &gt; V(C)--------------------------+----------------------------------+---------------+--&gt; --------age                    U  | 25.816   34.851   -100.9         | -11.57  0.000 |  &gt; 0.47*                       M  | 25.816   25.114      7.8    92.2 |   1.04  0.297 |  &gt; 1.58*                          |                                  |               |agesq                  U  | 717.39   1323.5    -97.1         | -10.59  0.000 |  &gt; 0.31*                       M  | 717.39   662.88      8.7    91.0 |   1.31  0.190 |  &gt; 1.40*                          |                                  |               |educ                   U  | 10.346   12.117    -68.1         |  -7.69  0.000 |  &gt; 0.43*                       M  | 10.346   10.734    -14.9    78.1 |  -1.91  0.057 |  &gt; 1.13                          |                                  |               |educsq                 U  | 111.06   156.32    -78.5         |  -8.52  0.000 |  &gt; 0.30*                       M  | 111.06   118.77    -13.4    83.0 |  -1.88  0.061 |  &gt; 0.98                          |                                  |               |black                  U  | .84324    .2506    148.0         |  18.13  0.000 |  &gt;    .                       M  | .84324   .84831     -1.3    99.1 |  -0.13  0.893 |  &gt;    .                          |                                  |               |hisp                   U  | .05946   .03253     12.9         |   1.94  0.053 |  &gt;    .                       M  | .05946   .06369     -2.0    84.3 |  -0.17  0.866 |  &gt;    .                          |                                  |               |marr                   U  | .18919   .86627   -184.2         | -25.81  0.000 |  &gt;    .                       M  | .18919   .13374     15.1    91.8 |   1.45  0.148 |  &gt;    .                          |                                  |               |re74                   U  | 2095.6    19429   -171.8         | -17.50  0.000 |  &gt; 0.13*                       M  | 2095.6   2569.4     -4.7    97.3 |  -0.83  0.407 |  &gt; 0.65*                          |                                  |               |re75                   U  | 1532.1    19063   -177.4         | -17.50  0.000 |  &gt; 0.06*                       M  | 1532.1   2518.3    -10.0    94.4 |  -2.14  0.033 |  &gt; 0.36*                          |                                  |               |re74sq                 U  | 2.8e+07   5.6e+08    -85.7         |  -8.30  0.000 |&gt;   0.02*                       M  | 2.8e+07   4.3e+07     -2.4    97.2 |  -0.78  0.437 |&gt;   0.24*                          |                                  |               |u74                    U  | .70811   .08635    164.2         |  27.54  0.000 |  &gt;    .                       M  | .70811   .64162     17.6    89.3 |   1.36  0.173 |  &gt;    .                          |                                  |               |u75                    U  |     .6       .1    122.8         |  20.70  0.000 |  &gt;    .                       M  |     .6   .50136     24.2    80.3 |   1.91  0.057 |  &gt;    .                          |                                  |               |u74hisp                U  | .03243   .00361     21.7         |   5.09  0.000 |  &gt;    .                       M  | .03243   .04352     -8.4    61.5 |  -0.56  0.578 |  &gt;    .                          |                                  |               |nodegree               U  | .70811   .30522     87.9         |  11.49  0.000 |  &gt;    .                       M  | .70811   .65062     12.5    85.7 |   1.18  0.237 |  &gt;    .                          |                                  |               |--------------------------------------------------------------------------------&gt; --------* if variance ratio outside [0.75; 1.34] for U and [0.75; 1.34] for M--------------------------------------------------------------------------------&gt; --- Sample    | Ps R2   LR chi2   p&gt;chi2   MeanBias   MedBias      B      R     %Va&gt; r-----------+--------------------------------------------------------------------&gt; --- Unmatched | 0.699    940.49    0.000    108.7      99.0     298.4*   0.27*   10&gt; 0 Matched   | 0.039     19.82    0.136     10.2       9.4      42.8*   0.52     7&gt; 1--------------------------------------------------------------------------------&gt; ---* if B&gt;25%, R outside [0.5; 2]</code></pre><h3 id="共同支持区间">共同支持区间</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psgraph<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 计量经济学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计量经济学 </tag>
            
            <tag> PSM </tag>
            
            <tag> 倾向得分匹配法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倾向得分匹配法（PSM）</title>
      <link href="posts/2474087707/"/>
      <url>posts/2474087707/</url>
      
        <content type="html"><![CDATA[<h2 id="倾向得分匹配psm中协变量的筛选">倾向得分匹配(PSM)中协变量的筛选</h2><blockquote><p>倾向得分匹配分析 (PSM) 已经在诸多领域得到了应用。虽然 PSM 不能完全解决内生性问题，但却能在很大程度上缓解自我选择问题导致的偏差。在前期文献中，Becker &amp; Ichino (2002, Stata Journal, 2(4):358-377) 对 PSM 的分析过程进行了详细的介绍，Stata 中也有多个命令可以执行 PSM 分析，如 <code>pscore</code>, <code>psmatch2</code>, <code>treatrew</code>(Stata Journal, 14(3): 541-561), <code>gpscore</code> (SJ 8(3):354--373), <code>kmatch</code></p></blockquote><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">net describe st0328,from(http://www.stata-journal.com/software/sj14-1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>--------------------------------------------------------------------------------package st0328 from http://www.stata-journal.com/software/sj14-1--------------------------------------------------------------------------------TITLE      SJ14-1 st0328. Estimation of the generalized...DESCRIPTION/AUTHOR(S)      Estimation of the generalized propensity score        through generalized linear models      by Barbara Guardabascio, Istat, Italian National           Institute of Statistics, Rome, Italy         Marco Ventura, Istat, Italian National           Institute of Statistics, Rome, Italy      Support:  guardabascio@istat.it      After installation, type help glmgpscore and        glmdose      This also requires doseresponse_model.ado; type        {cmd:search doseresponse_model} and follow the links        to install the latest package.INSTALLATION FILES                               (type net install st0328)      st0328/glmdose.ado      st0328/glmgpscore.ado      st0328/glmdose.sthlp      st0328/glmgpscore.sthlpANCILLARY FILES                                  (type net get st0328)      st0328/lotterydataset.dta      st0328/output_flog.dta      st0328/output_proof.dta      st0328/examples.do--------------------------------------------------------------------------------</code></pre><h3 id="平衡性假设">平衡性假设</h3><p>在 PSM 匹配时，用treat变量对控制变量进行Logit回归，得到倾向得分值。倾向得分值最接近的控制组个体即为实验组的配对样本，通过这种方法可以最大程度减少实验组与控制组个体存在的系统性差异，从而减少估计偏误。在进行PSM匹配后的其他估计前比如PSM-DID 估计前，还需进行协变量的平衡性假设检验，即匹配后各变量在实验组和控制组之间是否变得平衡，也就是说实验组和控制组协变量的均值在匹配后是否具有显著差异。如果不存在显著差异，则支持进一步的模型估计。</p><p>在平衡性检验之前，我们先使用<code>psmatch2</code>命令进行PSM匹配，处理变量为train，协变量为age、educ、black，结果变量为re78，采用一对一近邻匹配，具体操作如下：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use ldw_exper.dta,clear<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">findname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>t         educ      hisp      nodegree  re75      u74age       black     married   re74      re78      u75</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2 t  age educ black, out(re78) logit ate neighbor(1) common caliper(.05) ties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Logistic regression                             Number of obs     =        445                                                LR chi2(3)        =       3.51                                                Prob &gt; chi2       =     0.3192Log likelihood = -300.34408                     Pseudo R2         =     0.0058------------------------------------------------------------------------------           t |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .0143112   .0136229     1.05   0.293    -.0123892    .0410116        educ |   .0793213   .0546484     1.45   0.147    -.0277876    .1864302       black |   .0790505   .2625391     0.30   0.763    -.4355167    .5936176       _cons |  -1.580782   .6798444    -2.33   0.020    -2.913252   -.2483115--------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6.34914538   4.55480228   1.79434311   .632853552 &gt;     2.84                        ATT | 6.26522687   4.18443652   2.08079035   .752125106 &gt;     2.77                        ATU | 4.55541071   6.05253804   1.49712733            . &gt;        .                        ATE |                           1.73855158            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated. psmatch2: |   psmatch2: Common Treatment |        supportassignment | Off suppo  On suppor |     Total-----------+----------------------+---------- Untreated |         2        258 |       260    Treated |         3        182 |       185 -----------+----------------------+----------     Total |         5        440 |       445 </code></pre><p>PSM 匹配完成之后，我们需要检验匹配后的样本是否满足平衡性假设，即实验组与控制组的匹配协变量是否没有显著性差异，在这里可以使用<code>pstest</code>命令进行检验，具体如下：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pstest age educ black hisp married , t(t)  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>------------------------------------------------------------------------------                        |       Mean               |     t-test    |  V(T)/Variable                | Treated Control    %bias |    t    p&gt;|t| |  V(C)------------------------+--------------------------+---------------+----------age                     | 25.527   24.714     11.4 |   1.19  0.234 |  1.24educ                    | 10.291   10.401     -6.0 |  -0.59  0.557 |  1.60*black                   | .84066   .87363     -8.9 |  -0.90  0.370 |     .hisp                    | .06044   .09066    -10.9 |  -1.09  0.277 |     .married                 | .18681    .1522      9.2 |   0.88  0.380 |     .------------------------------------------------------------------------------* if variance ratio outside [0.75; 1.34]----------------------------------------------------------------------Ps R2   LR chi2   p&gt;chi2   MeanBias   MedBias      B       R     %Var ----------------------------------------------------------------------0.019      9.70    0.084      9.3       9.2      32.4*    2.23*    50----------------------------------------------------------------------* if B&gt;25%, R outside [0.5; 2]</code></pre><h3 id="选择匹配协变量">选择匹配协变量</h3><p>根据t检验结果发现，以上5个协变量在实验组与控制组之间不存在显著性差异。</p><p>那么，在进行 PSM 分析之前，应当如何选择匹配协变量，使模型实现最佳的拟合效果呢？今天介绍的 psestimate 命令可以通过比较不同模型的极大似然值，帮助我们选择能实现最佳拟合效果的协变量的一阶和二阶形式。</p><p>The <code>psestimate</code> command estimates the propensity score proposed by <a href="https://www.sci-hub.shop/10.3368/jhr.50.2.373">Imbens and Rubin (2015)</a>. The main purpose of the program is to select a linear or quadratic function of covariates to include in the estimation function of the propensity score.</p><h4 id="命令的安装与示例数据导入">命令的安装与示例数据导入</h4><p>在Stata命令窗口执行第一行代码即可完成对 <code>psestimate</code> 命令的下载，然后输入第二行命令下载网上示例数据 nswre74.dta（LaLonde, 1986），并执行第三行命令导入数据。</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">ssc install psestimate, replace //安装命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>checking psestimate consistency and verifying not already installed...all files already exist and are up to date.</code></pre><h4 id="命令的语法">命令的语法</h4><p>该命令的语法如下：</p><pre class="line-numbers language-none"><code class="language-none">psestimate depvar [indepvars] [if] [in] [, options]options：                  totry(indepvars)          notry(varlist)            nolin                    noquad                   clinear(real)            cquadratic(real)         iterate(#)               genpscore(newvar)        genlor(newvar)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>各个主要选项的含义如下：</p><ul><li><code>depvar</code>，必选项，填入处理变量（如 treat），即标记是否参与实验的虚拟变量</li><li><code>indepvars</code>，可选项，指定基准模型中的协变量</li><li><code>totry(indepvars)</code>，可选项，放入供选择的协变量列表，默认为全部</li><li><code>notry(varlist)</code>，可选项，指定不包括的协变量列表，默认为没有</li><li><code>nolin</code>，可选项，指定不进行一阶多项式的选择</li><li><code>noquad</code>，可选项，指定不进行二阶多项式的选择</li><li><code>clinear(real)</code>，可选项，指定一阶协变量似然比检验的门槛值，默认值为 1</li><li><code>cquadratic(real)</code>，可选项，指定二阶协变量似然比检验的门槛值，默认值是 2.71</li><li><code>iterate(#)</code>，可选项，指定在每个 logit 中执行循环的最大值，默认值是 16000</li><li><code>genpscore(newvar)</code>，可选项，由于指定程序自动生成的用于记录倾向得分值的新变量的名称</li><li><code>genlor(newvar)</code>，可选项，生成对数似然比的新变量的名称</li></ul><h3 id="命令操作">命令操作</h3><p> </p><h4 id="命令基本操作">命令基本操作</h4><p>下面本文将基于 <code>psestimate</code> 命令的作者提供的数据集 <strong>nswre74.dta</strong> 来简要说明如何使用 <code>psestimate</code> 这一命令来选择能最好拟合处理变量 (treat) 的协变量的一阶及二阶形式。</p><p>在这里，我们事先选定教育变量 <strong>ed</strong> 作为基准模型中的一个协变量，意味着 Stata 自动将 <strong>ed</strong> 放入基准模型中。另外，我们将指定 <strong>age</strong>、<strong>black</strong>、<strong>hisp</strong>、<strong>nodeg</strong> 四个变量作为待选协变量。代码如下：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use "nswre74.dta", clearpsestimate treat ed, totry(age black hisp nodeg)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​</p><pre><code>Selecting first order covariates... (10)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 ...s..s..Selected first order covariates are: nodeg hispSelecting second order covariates... (21)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 .....s.....Selected second order covariates are: c.nodeg#c.edFinal model is: ed nodeg hisp c.nodeg#c.ed</code></pre><p>根据以上结果，可以确定在倾向得分匹配中，我们应该选取的一阶协变量为 <strong>nodeg</strong>、<strong>hisp</strong>，二阶协变量为 <strong>c.nodeg#c.ed</strong>。综上，根据 <code>psestimate</code> 命令的运算结果，我们应该选取 <strong>ed</strong>、<strong>nodeg</strong>、<strong>hisp</strong>、<strong>c.nodeg#c.ed</strong> 等四个变量作为倾向得分匹配的协变量。</p><h4 id="提升运算速度">提升运算速度</h4><p><code>psestimate</code>命令在运算中会耗费较长时间，而通常来说，该命令在选择协变量的一阶形式时要快于二阶形式的选择，因此，为了加快运算速度，我们可以首先通过加入<code>noquad</code>选项，只对协变量的一阶形式进行筛选，当一阶形式选定后，将其作为解释变量放入基准模型中，然后加入<code>nolin</code> 选项跳过一阶形式筛选步骤，只对协变量的二阶形式进行筛选。具体操作如下。</p><p>首先，加入入<code>noquad</code>选项，只筛选协变量的一阶形式，如下：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use "nswre74.dta", clearpsestimate treat ed, totry(age black hisp nodeg) noquad<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​</p><pre><code>Selecting first order covariates... (10)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 ...s..s..Selected first order covariates are: nodeg hispFinal model is: ed nodeg hisp</code></pre><p>然后，将选定的<strong>ed</strong>、<strong>nodeg</strong>、<strong>hisp</strong>作为解释变量放入基准模型中，加入<code>nolin</code>选项值进行二阶形式的筛选，操作如下：。</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psestimate treat ed nodeg hisp , totry(age black hisp nodeg) nolin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Selecting second order covariates... (21)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 .....s.....Selected second order covariates are: c.nodeg#c.edFinal model is: ed nodeg hisp  c.nodeg#c.ed</code></pre><h3 id="psestimate-的核心思想">psestimate 的核心思想</h3><p> </p><h4 id="协变量一阶形式的选择">协变量一阶形式的选择</h4><p>第一步，该程序首先在基准模型（<code>logit treat ed</code>）基础上通过循环分别加入 <code>totry()</code> 中指定的四个变量 <strong>age</strong>、<strong>black</strong>、<strong>hisp</strong>、<strong>nodeg</strong>，进行四次模型估计，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">logit treat ed agelogit treat ed blacklogit treat ed hisplogit treat ed nodeg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>每次估计完成后，它将得到的新的极大似然值与基准模型比较，选择上述四个模型中对数极大似然值 (Log-Likelihood, 简称 LL 值) 最大的模型中的协变量放入基准模型中，除非上述四个模型的极大似然值都低于 <code>clinear(real)</code> 中指定的门槛值。若此处假设为 <strong>nodeg</strong>，则基准模型扩展为 <code>logit treat ed nodeg</code>, 然后第二步，它将估计如下模型：</p><pre class="line-numbers language-none"><code class="language-none">logit treat ed nodeg agelogit treat ed nodeg blacklogit treat ed nodeg hisp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这一步的协变量筛选原则与第一b步相同。可以看出，当供选择的协变量数量为<span class="math inline">\(C\)</span>时，在确定协变量的一阶形式时，该程序理论上会估计<span class="math inline">\(\sum C\)</span> 个 Logit 模型。本例中有 4 个供选择的协变量，则需要估计 10 次（如下括号中所示），该命令选择的协变量一阶形式结果如下：</p><pre class="line-numbers language-none"><code class="language-none">Selecting first order covariates... (10)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 ...s..s..Selected first order covariates are: nodeg hisp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> </p><h4 id="协变量二阶形式的选择">协变量二阶形式的选择</h4><p>在协变量二阶形式的选择上，主要分为协变量平方项以及协变量间的交乘项。 如果在一阶形式中只选择了 <strong>a</strong> 这一个协变量，则二阶形式的选择只需要检验 <strong>a^2</strong> 这一变量。但是如果有 <strong>a</strong>、<strong>b</strong> 两个一阶协变量被选择，则二阶形式的选择需要检验 <strong>a<sup>2<strong>、</strong>b</sup>2</strong>、<strong>ab</strong> 三个二阶协变量形式。具体到本例，确定的一阶协变量有 <strong>ed</strong>、<strong>nodeg</strong>、<strong>hisp</strong> 三个，则需要检验的二阶协变量有六个，即 <strong>ed<sup>2<strong>、</strong>nodeg</sup>2</strong>、<strong>hisp^2</strong>、<strong>c.ed#c.nodeg</strong>、<strong>c.ed#c.hisp</strong>、<strong>c.nodeg#c.hisp</strong>，筛选过程与选择协变量一阶形式的方法一致。因此本例中共需估计 即 21 次（如下括号中所示），结果如下所示：</p><pre class="line-numbers language-none"><code class="language-none">Selecting second order covariates... (21)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 .....s.....Selected second order covariates are: c.nodeg#c.edFinal model is: ed nodeg hisp c.nodeg#c.ed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> </p><h4 id="流程图展示">流程图展示</h4><p>如下流程图可以更加直观地展现<code>psestimate</code>筛选协变量一阶及二阶形式的过程，为简化分析，我们可供选择的协变量为<strong>a</strong>、<strong>b</strong>两个变量，假设各模型的对数极大似然值存在如下大小关系，LL1&gt;LL2&gt; <code>clinear()</code> &gt;LL3,LL4&gt;LL5&gt;LL6&gt; <code>cquadratic()</code> &gt;LL7&gt;LL8。</p><figure><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/17510288-32214398557f861a.png" alt=""><figcaption>图1.流程图</figcaption></figure><h3 id="psm估计的完整流程示例">PSM估计的完整流程示例</h3><p> </p><h4 id="psestimate-筛选匹配变量的一阶二阶形式">psestimate 筛选匹配变量的一阶、二阶形式</h4><p>第一步，使用<code>psestimate</code>筛选匹配变量</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use "nswre74.dta", clearpsestimate treat ed, totry(age black hisp nodeg) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​</p><pre><code>Selecting first order covariates... (10)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 ...s..s..Selected first order covariates are: nodeg hispSelecting second order covariates... (21)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 .....s.....Selected second order covariates are: c.nodeg#c.edFinal model is: ed nodeg hisp c.nodeg#c.ed</code></pre><p>最终选择的匹配变量为<strong>ed</strong>、<strong>nodeg</strong>、<strong>hisp</strong>、<strong>c.nodeg#c.ed</strong></p><h4 id="psmatch2-基于筛选出的匹配变量进行psm匹配">psmatch2 基于筛选出的匹配变量进行PSM匹配</h4><p>基于上述匹配变量进行PSM匹配：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2 treat ed nodeg hisp c.nodeg#c.ed, logit ate neighbor(1) common caliper(.05) ties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Logistic regression                             Number of obs     =        445                                                LR chi2(4)        =      17.03                                                Prob &gt; chi2       =     0.0019Log likelihood = -293.58317                     Pseudo R2         =     0.0282------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------          ed |   .5093428   .3298117     1.54   0.123    -.1370762    1.155762       nodeg |   6.506319   4.112404     1.58   0.114    -1.553845    14.56648        hisp |  -.5954105   .3754841    -1.59   0.113    -1.331346    .1405248             |c.nodeg#c.ed |  -.6068825   .3375387    -1.80   0.072    -1.268446    .0546813             |       _cons |  -6.021438    4.05441    -1.49   0.138    -13.96794    1.925059------------------------------------------------------------------------------</code></pre><h4 id="pstest-进行平衡性假设检验">pstest 进行平衡性假设检验</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pstest ed nodeg hisp c.nodeg#c.ed, t(treat)  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>------------------------------------------------------------------------------                        |       Mean               |     t-test    |  V(T)/Variable                | Treated Control    %bias |    t    p&gt;|t| |  V(C)------------------------+--------------------------+---------------+----------ed                      |  10.29   10.464     -9.6 |  -0.91  0.363 |  1.28nodeg                   | .71585   .69399      5.3 |   0.46  0.648 |     .hisp                    | .06011   .06011     -0.0 |  -0.00  1.000 |     .c.nodeg#c.ed            | 6.7814    6.694      2.1 |   0.18  0.854 |  0.96------------------------------------------------------------------------------* if variance ratio outside [0.75; 1.34]----------------------------------------------------------------------Ps R2   LR chi2   p&gt;chi2   MeanBias   MedBias      B       R     %Var ----------------------------------------------------------------------0.002      1.09    0.896      4.2       3.7      10.8    1.43       0----------------------------------------------------------------------* if B&gt;25%, R outside [0.5; 2]</code></pre><h4 id="psgraph-绘图直观呈现各匹配变量的平衡性状况">psgraph 绘图直观呈现各匹配变量的平衡性状况</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psgraph<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>图中也可以直观看出，实验组与控制组的倾向得分值分布大致平衡。</p></blockquote><h4 id="参考文献">参考文献</h4><ol type="1"><li>Dehejia, Rajeev H. and Sadek Wahba. 1999. "Causal Effects in Nonexperimental Studies". Journal of the American Statistical Association 94(448): 1053-1062.</li><li>Imbens, Guido W. and Donald B. Rubin. 2015. Causal Inference in Statistics, Social, and Biomedical Sciences. New York: Cambridge University Press.</li><li>Imbens, Guido W. 2015. “Matching Methods in Practice: Three Examples.” Journal of Human Resources 50 (2): 373–419. [<a href="https://www.sci-hub.shop/10.3368/jhr.50.2.373">PDF1]</a>， [<a href="https://pdfs.semanticscholar.org/975a/9905a091498d9878ebcd42cb01eff7e02e8d.pdf?_ga=2.17924345.130556769.1557067739-533034284.1555775018">PDF2-wp]</a></li><li>LaLonde, Robert J. 1986. “Evaluating the Econometric Evaluations of Training Programs with Experimental Data.” The American Economic Review 76 (4): 604–20. [<a href="http://www.uh.edu/~adkugler/Lalonde.pdf">PDF]</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计量经济学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计量经济学 </tag>
            
            <tag> PSM </tag>
            
            <tag> 倾向得分匹配法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倾向得分匹配法（PSM）</title>
      <link href="posts/2474087708/"/>
      <url>posts/2474087708/</url>
      
        <content type="html"><![CDATA[<h2 id="psm-did在stata中的实现过程代码">PSM-DID在Stata中的实现过程代码</h2><h3 id="数据准备">数据准备</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use nlswork.dta,clear<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>(National Longitudinal Survey.  Young Women 14-26 years of age in 1968)</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">xtset idcode year, delta(1)  //设置面板xtdescribe   //描述一下这个面板数据情况<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>       panel variable:  idcode (unbalanced)        time variable:  year, 68 to 88, but with gaps                delta:  1 unit</code></pre><p>​</p><pre><code>  idcode:  1, 2, ..., 5159                                   n =       4711    year:  68, 69, ..., 88                                   T =         15           Delta(year) = 1 unit           Span(year)  = 21 periods           (idcode*year uniquely identifies each observation)Distribution of T_i:   min      5%     25%       50%       75%     95%     max                         1       1       3         5         9      13      15     Freq.  Percent    Cum. |  Pattern ---------------------------+-----------------------      136      2.89    2.89 |  1....................      114      2.42    5.31 |  ....................1       89      1.89    7.20 |  .................1.11       87      1.85    9.04 |  ...................11       86      1.83   10.87 |  111111.1.11.1.11.1.11       61      1.29   12.16 |  ..............11.1.11       56      1.19   13.35 |  11...................       54      1.15   14.50 |  ...............1.1.11       54      1.15   15.64 |  .......1.11.1.11.1.11     3974     84.36  100.00 | (other patterns) ---------------------------+-----------------------     4711    100.00         |  XXXXXX.X.XX.X.XX.X.XX</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">gen age2= age^2gen ttl_exp2=ttl_exp^2gen tenure2=tenure^2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>(24 missing values generated)</code></pre><p>​</p><pre><code>(433 missing values generated)</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">global xlist "grade age age2 ttl_exp ttl_exp2 tenure tenure2 not_smsa south race"sum ln_w $xlist  //统计描述相关变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​<br>​</p><pre><code>    Variable |        Obs        Mean    Std. Dev.       Min        Max-------------+---------------------------------------------------------     ln_wage |     28,534    1.674907    .4780935          0   5.263916       grade |     28,532    12.53259    2.323905          0         18         age |     28,510    29.04511    6.700584         14         46        age2 |     28,510    888.5145    403.6554        196       2116     ttl_exp |     28,534    6.215316    4.652117          0   28.88461-------------+---------------------------------------------------------    ttl_exp2 |     28,534    60.27159    80.33339          0    834.321      tenure |     28,101    3.123836    3.751409          0   25.91667     tenure2 |     28,101    23.83092    54.75053          0   671.6736    not_smsa |     28,526    .2824441    .4501961          0          1       south |     28,526    .4095562    .4917605          0          1-------------+---------------------------------------------------------        race |     28,534    1.303392    .4822773          1          3</code></pre><h3 id="did方法">DID方法</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">gen time = (year &gt;= 77) &amp; !missing(year)  //政策执行时间为1977年gen treated = (idcode &gt;2000)&amp;!missing(idcode) //政策执行地方为idcode大于2000的地方gen did = time*treated  //这就是需要估计的DID，也就所交叉项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">reg ln_w did time treated $xlist //这就是一个OLS回归，也可以用diff命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>      Source |       SS           df       MS      Number of obs   =    28,091-------------+----------------------------------   F(13, 28077)    =   1295.76       Model |  2405.08413        13  185.006471   Prob &gt; F        =    0.0000    Residual |  4008.77975    28,077  .142778066   R-squared       =    0.3750-------------+----------------------------------   Adj R-squared   =    0.3747       Total |  6413.86388    28,090  .228332641   Root MSE        =    .37786------------------------------------------------------------------------------     ln_wage |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------         did |   .0124603   .0094099     1.32   0.185    -.0059836    .0309042        time |  -.0694754   .0097324    -7.14   0.000    -.0885513   -.0503996     treated |  -.0142815   .0078374    -1.82   0.068    -.0296431    .0010801       grade |   .0633445   .0010293    61.54   0.000      .061327     .065362         age |   .0484968   .0036834    13.17   0.000     .0412771    .0557165        age2 |  -.0008259   .0000583   -14.18   0.000    -.0009401   -.0007117     ttl_exp |   .0250849    .002395    10.47   0.000     .0203906    .0297793    ttl_exp2 |   .0002872   .0001266     2.27   0.023      .000039    .0005353      tenure |   .0460783    .001968    23.41   0.000     .0422209    .0499356     tenure2 |  -.0019604   .0001341   -14.62   0.000    -.0022233   -.0016976    not_smsa |  -.1686808   .0051713   -32.62   0.000    -.1788169   -.1585447       south |  -.1017625   .0055672   -18.28   0.000    -.1126745   -.0908504        race |  -.0528909   .0049329   -10.72   0.000    -.0625597   -.0432221       _cons |   .1400083   .0535917     2.61   0.009     .0349661    .2450506------------------------------------------------------------------------------</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">xtreg ln_w did time treated $xlist i.year, fe //也可以这去做，会省略掉一个虚拟变量<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>note: treated omitted because of collinearitynote: grade omitted because of collinearitynote: race omitted because of collinearitynote: 88.year omitted because of collinearityFixed-effects (within) regression               Number of obs     =     28,091Group variable: idcode                          Number of groups  =      4,697R-sq:                                           Obs per group:     within  = 0.1781                                         min =          1     between = 0.3576                                         avg =        6.0     overall = 0.2666                                         max =         15                                                F(23,23371)       =     220.25corr(u_i, Xb)  = 0.1840                         Prob &gt; F          =     0.0000------------------------------------------------------------------------------     ln_wage |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------         did |    .019761    .008746     2.26   0.024     .0026182    .0369037        time |  -.3296955   .2012367    -1.64   0.101    -.7241326    .0647416     treated |          0  (omitted)       grade |          0  (omitted)         age |   .0665613   .0105138     6.33   0.000     .0459536    .0871689        age2 |  -.0009369   .0000616   -15.20   0.000    -.0010577    -.000816     ttl_exp |   .0392161    .003072    12.77   0.000     .0331947    .0452375    ttl_exp2 |  -.0001047   .0001352    -0.77   0.439    -.0003697    .0001603      tenure |   .0338566   .0018579    18.22   0.000     .0302151    .0374981     tenure2 |  -.0018164    .000126   -14.42   0.000    -.0020633   -.0015695    not_smsa |   -.086641   .0095117    -9.11   0.000    -.1052846   -.0679974       south |  -.0597302   .0109246    -5.47   0.000    -.0811431   -.0383173        race |          0  (omitted)             |        year |         69  |   .0423343    .015528     2.73   0.006     .0118984    .0727702         70  |  -.0339863    .022938    -1.48   0.138    -.0789464    .0109737         71  |  -.0299658   .0318704    -0.94   0.347     -.092434    .0325023         72  |  -.0584678   .0412716    -1.42   0.157    -.1393627    .0224272         73  |  -.0961513   .0508379    -1.89   0.059     -.195797    .0034943         75  |  -.1513149   .0698104    -2.17   0.030    -.2881479   -.0144818         77  |   .1558488   .1129486     1.38   0.168    -.0655379    .3772354         78  |   .1417381   .1027217     1.38   0.168    -.0596031    .3430793         80  |   .0826885   .0834407     0.99   0.322    -.0808607    .2462377         82  |   .0268096   .0638067     0.42   0.674    -.0982557     .151875         83  |   .0103961    .054166     0.19   0.848    -.0957727     .116565         85  |    .007777   .0347411     0.22   0.823    -.0603178    .0758717         87  |  -.0223798   .0162763    -1.37   0.169    -.0542825    .0095229         88  |          0  (omitted)             |       _cons |   .5038214   .1945871     2.59   0.010     .1224179    .8852249-------------+----------------------------------------------------------------     sigma_u |   .3532234     sigma_e |   .2898202         rho |  .59764928   (fraction of variance due to u_i)------------------------------------------------------------------------------F test that all u_i=0: F(4696, 23371) = 6.58                 Prob &gt; F = 0.0000</code></pre><h3 id="psm-did方法">PSM-DID方法</h3><h4 id="psm的部分">PSM的部分</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">set seed 0001 //定义种子gen tmp = runiform() //生成随机数sort tmp //把数据库随机整理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2 treated $xlist, out(ln_w) logit ate neighbor(1) common caliper(.05) ties //通过近邻匹配，这里可以要outcome，也可以不要它<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Logistic regression                             Number of obs     =     28,091                                                LR chi2(10)       =   10093.80                                                Prob &gt; chi2       =     0.0000Log likelihood =  -13636.63                     Pseudo R2         =     0.2701------------------------------------------------------------------------------     treated |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------       grade |  -.0342869   .0070082    -4.89   0.000    -.0480227   -.0205511         age |   .1726049   .0227237     7.60   0.000     .1280673    .2171424        age2 |  -.0026816   .0003693    -7.26   0.000    -.0034054   -.0019577     ttl_exp |  -.0681925   .0155242    -4.39   0.000    -.0986193   -.0377657    ttl_exp2 |   .0040423   .0008363     4.83   0.000     .0024031    .0056815      tenure |  -.0138884   .0128354    -1.08   0.279    -.0390453    .0112686     tenure2 |   .0002263   .0008671     0.26   0.794    -.0014733    .0019259    not_smsa |   .4024444   .0355904    11.31   0.000     .3326885    .4722002       south |   2.865226   .0409688    69.94   0.000     2.784928    2.945523        race |   .7655284    .034012    22.51   0.000     .6988662    .8321907       _cons |  -3.400584   .3254663   -10.45   0.000    -4.038487   -2.762682--------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------         ln_wage  Unmatched | 1.62754443   1.75722818  -.129683748   .005816206 &gt;   -22.30                        ATT | 1.62798811   1.70873922  -.080751107   .021132148 &gt;    -3.82                        ATU | 1.75707925   1.75230645  -.004772802            . &gt;        .                        ATE |                          -.051698588            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated. psmatch2: |   psmatch2: Common Treatment |        supportassignment | Off suppo  On suppor |     Total-----------+----------------------+---------- Untreated |         2     10,733 |    10,735    Treated |        20     17,336 |    17,356 -----------+----------------------+----------     Total |        22     28,069 |    28,091 </code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pstest $xlist, both graph  //检验协变量在处理组与控制组之间是否平衡<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>--------------------------------------------------------------------------------&gt; --------                Unmatched |       Mean               %reduct |     t-test    |  &gt; V(T)/Variable          Matched | Treated Control    %bias  |bias| |    t    p&gt;|t| |  &gt; V(C)--------------------------+----------------------------------+---------------+--&gt; --------grade                  U  | 12.341   12.853    -22.3         | -18.01  0.000 |  &gt; 1.18*                       M  | 12.348   12.645    -12.9    42.1 | -12.03  0.000 |  &gt; 1.15*                          |                                  |               |age                    U  | 29.223   28.848      5.6         |   4.56  0.000 |  &gt; 0.94*                       M  | 29.216   30.875    -24.7  -342.5 | -23.65  0.000 |  &gt; 1.05*                          |                                  |               |age2                   U  |  897.8   878.68      4.7         |   3.86  0.000 |  &gt; 0.95*                       M  | 897.33   994.81    -24.1  -409.7 | -22.80  0.000 |  &gt; 1.01                          |                                  |               |ttl_exp                U  | 6.2403   6.2447     -0.1         |  -0.08  0.938 |  &gt; 1.05*                       M  | 6.2334   6.9942    -16.4-17031.2 | -14.80  0.000 |  &gt; 0.92*                          |                                  |               |ttl_exp2               U  | 61.008   60.008      1.2         |   1.01  0.312 |  &gt; 1.03                       M  | 60.849   72.756    -14.8 -1090.6 | -12.91  0.000 |  &gt; 0.79*                          |                                  |               |tenure                 U  | 3.0891   3.1782     -2.4         |  -1.93  0.053 |  &gt; 0.96*                       M  | 3.0899   2.9777      3.0   -25.9 |   2.87  0.004 |  &gt; 1.10*                          |                                  |               |tenure2                U  |  23.41   24.482     -1.9         |  -1.60  0.110 |  &gt; 0.90*                       M  | 23.423   21.518      3.5   -77.7 |   3.41  0.001 |  &gt; 1.14*                          |                                  |               |not_smsa               U  | .32945   .20689     27.9         |  22.36  0.000 |  &gt;    .                       M  | .32897   .32066      1.9    93.2 |   1.65  0.099 |  &gt;    .                          |                                  |               |south                  U  |   .618   .07219    140.2         | 107.35  0.000 |  &gt;    .                       M  | .61756   .61802     -0.1    99.9 |  -0.09  0.930 |  &gt;    .                          |                                  |               |race                   U  | 1.3912   1.1631     50.3         |  39.53  0.000 |  &gt; 1.91*                       M  | 1.3896   1.3763      2.9    94.2 |   2.43  0.015 |  &gt; 1.05*                          |                                  |               |--------------------------------------------------------------------------------&gt; --------* if variance ratio outside [0.97; 1.03] for U and [0.97; 1.03] for M--------------------------------------------------------------------------------&gt; --- Sample    | Ps R2   LR chi2   p&gt;chi2   MeanBias   MedBias      B      R     %Va&gt; r-----------+--------------------------------------------------------------------&gt; --- Unmatched | 0.272  10149.10    0.000     25.7       5.2     145.8*   3.70*    8&gt; 8 Matched   | 0.019    932.83    0.000     10.4       8.2      33.1*   1.16     8&gt; 8--------------------------------------------------------------------------------&gt; ---* if B&gt;25%, R outside [0.5; 2]</code></pre><p><img src="https://gitee.com/shao818/Figure/raw/master/null/Graph111.png"></p><p>psgraph 绘图直观呈现各匹配变量的平衡性状况</p><p><img src="https://gitee.com/shao818/Figure/raw/master/null/Graph4444.png"></p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">gen common=_supportdrop if common == 0  //去掉不满足共同区域假定的观测值*drop _weight ==0  //也有情况是把没有匹配的直接删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>(443 missing values generated)(22 observations deleted)</code></pre><h4 id="did的部分">DID的部分</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">reg ln_w did time treated $xlist <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>      Source |       SS           df       MS      Number of obs   =    28,069-------------+----------------------------------   F(13, 28055)    =   1294.85       Model |  2402.32966        13  184.794589   Prob &gt; F        =    0.0000    Residual |   4003.8761    28,055  .142715241   R-squared       =    0.3750-------------+----------------------------------   Adj R-squared   =    0.3747       Total |  6406.20576    28,068  .228238769   Root MSE        =    .37778------------------------------------------------------------------------------     ln_wage |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------         did |   .0130378   .0094101     1.39   0.166    -.0054064    .0314821        time |   -.069613   .0097317    -7.15   0.000    -.0886876   -.0505384     treated |  -.0145157    .007837    -1.85   0.064    -.0298765    .0008452       grade |   .0635306   .0010326    61.53   0.000     .0615067    .0655545         age |   .0487295   .0036856    13.22   0.000     .0415054    .0559535        age2 |  -.0008306   .0000583   -14.24   0.000    -.0009449   -.0007163     ttl_exp |   .0246821   .0023991    10.29   0.000     .0199798    .0293843    ttl_exp2 |   .0003217   .0001271     2.53   0.011     .0000726    .0005708      tenure |   .0461767   .0019693    23.45   0.000     .0423168    .0500365     tenure2 |  -.0019786   .0001343   -14.73   0.000    -.0022419   -.0017154    not_smsa |  -.1681968   .0051738   -32.51   0.000    -.1783376    -.158056       south |   -.101765   .0055661   -18.28   0.000    -.1126748   -.0908551        race |  -.0534454   .0049452   -10.81   0.000    -.0631381   -.0437526       _cons |   .1361316   .0536086     2.54   0.011     .0310562    .2412069------------------------------------------------------------------------------</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">xtreg ln_w did time treated $xlist i.year, fe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>note: treated omitted because of collinearitynote: grade omitted because of collinearitynote: race omitted because of collinearitynote: 88.year omitted because of collinearityFixed-effects (within) regression               Number of obs     =     28,069Group variable: idcode                          Number of groups  =      4,696R-sq:                                           Obs per group:     within  = 0.1782                                         min =          1     between = 0.3585                                         avg =        6.0     overall = 0.2678                                         max =         15                                                F(23,23350)       =     220.19corr(u_i, Xb)  = 0.1861                         Prob &gt; F          =     0.0000------------------------------------------------------------------------------     ln_wage |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------         did |   .0199922   .0087501     2.28   0.022     .0028414     .037143        time |  -.3259785   .2014472    -1.62   0.106    -.7208281    .0688712     treated |          0  (omitted)       grade |          0  (omitted)         age |   .0664258   .0105214     6.31   0.000     .0458031    .0870485        age2 |  -.0009367   .0000617   -15.18   0.000    -.0010576   -.0008158     ttl_exp |   .0388635   .0030813    12.61   0.000     .0328238    .0449031    ttl_exp2 |  -.0000845   .0001359    -0.62   0.534    -.0003508    .0001819      tenure |   .0339768   .0018608    18.26   0.000     .0303295    .0376241     tenure2 |  -.0018292   .0001263   -14.48   0.000    -.0020768   -.0015817    not_smsa |  -.0865921   .0095179    -9.10   0.000    -.1052478   -.0679365       south |  -.0600416   .0109379    -5.49   0.000    -.0814807   -.0386026        race |          0  (omitted)             |        year |         69  |   .0425357   .0155411     2.74   0.006     .0120741    .0729974         70  |  -.0332855   .0229601    -1.45   0.147    -.0782887    .0117178         71  |  -.0290703    .031901    -0.91   0.362    -.0915985    .0334578         72  |  -.0573452   .0413132    -1.39   0.165    -.1383217    .0236314         73  |  -.0947357   .0508901    -1.86   0.063    -.1944837    .0050123         75  |  -.1496357   .0698826    -2.14   0.032    -.2866102   -.0126612         77  |   .1540973   .1130656     1.36   0.173    -.0675187    .3757134         78  |    .140131   .1028285     1.36   0.173    -.0614196    .3416817         80  |    .081445   .0835287     0.98   0.330    -.0822767    .2451668         82  |   .0260429   .0638735     0.41   0.683    -.0991533     .151239         83  |   .0097373   .0542219     0.18   0.857    -.0965412    .1160159         85  |    .007336   .0347776     0.21   0.833    -.0608304    .0755023         87  |  -.0225526   .0162929    -1.38   0.166    -.0544878    .0093826         88  |          0  (omitted)             |       _cons |   .5068104   .1947252     2.60   0.009     .1251361    .8884847-------------+----------------------------------------------------------------     sigma_u |   .3531224     sigma_e |  .28988636         rho |  .59740195   (fraction of variance due to u_i)------------------------------------------------------------------------------F test that all u_i=0: F(4695, 23350) = 6.56                 Prob &gt; F = 0.0000</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计量经济学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计量经济学 </tag>
            
            <tag> PSM </tag>
            
            <tag> 倾向得分匹配法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倾向得分匹配法（PSM）</title>
      <link href="posts/2474087705/"/>
      <url>posts/2474087705/</url>
      
        <content type="html"><![CDATA[<h1 id="倾向得分匹配法psm">倾向得分匹配法（PSM）</h1><h2 id="stata手动各类匹配方法大全-a理论篇">Stata手动：各类匹配方法大全 A——理论篇</h2><blockquote><p>匹配是研究处理效应的常见工具，本文总结了常见的匹配方法，并在第三部分给出 Stata 模拟以比较不同的匹配方法的优劣。</p></blockquote><h3 id="单变量匹配-uni-variate-match">单变量匹配 uni-variate match</h3><p>单变量匹配的方法有精确匹配、粗糙精确匹配，k-近邻匹配和半径 (卡尺) 匹配。</p><h4 id="精确匹配-exact-match">精确匹配 exact match</h4><p>顾名思义，当且仅当两个观测值的匹配变量相等时匹配成功。</p><h4 id="粗糙精确匹配-coarsened-exact-match">粗糙精确匹配 coarsened exact match</h4><p>粗糙精确匹配用途广泛，通常要求匹配变量是分类变量。比如公司金融中同行业的公司，又比如教育经济学中在同一个班的同学。粗糙精确匹配可以轻松的推广到多变量匹配的情形，如同行业同年度的公司，同班同性别的同学。</p><h4 id="k-近邻匹配-k-nearest-neighbor-match">k-近邻匹配 k-nearest neighbor match</h4><p>k-近邻匹配要求匹配变量是距离，它选取距离最近的 k 个观测值作为对照组。</p><h4 id="radius-caliper-match">radius (caliper) match</h4><p>半径 (卡尺) 匹配要求匹配变量也是距离，它事先设定半径 (上下半径可以不同)，找出设定范围内的全部观测值作为对照组。显然，随着半径的降低，匹配要求也更趋严格。</p><h3 id="多变量匹配-multi-variate-match">多变量匹配 multi-variate match</h3><p>多变量匹配的核心思路是降维 (dimension reduction)，将多变量降维为距离或得分，然后再运用单变量匹配的方法。多变量匹配的方法有欧氏距离、百分等级、马氏距离和倾向得分匹配等。</p><p>为能直观的图示，下文全部示例仅考虑双变量 (平面) 的情形。</p><h4 id="欧氏距离匹配-euclidean-distance-match">欧氏距离匹配 euclidean distance match</h4><p>最简单的测度空间就是欧氏距离空间。你可以轻松的用尺子直接量出点到原点、或任意两点之间的距离。</p><p>平面上任意点<span class="math inline">\(X=\left(X_{1}, X_{2}, \cdots, X_{n}\right)\)</span>到原点的距离公式为：</p><p><span class="math display">\[d_{e}(X)=\sqrt{X_{1}^{2}+X_{2}^{2}+\cdots+X_{n}^{2}}\]</span></p><p>平面上任意两点<span class="math inline">\(X=\left(X_{1}, X_{2}, \cdots, X_{n}\right)\)</span>和<span class="math inline">\(Y=\left(Y_{1}, Y_{2}, \cdots, Y_{n}\right)\)</span>之间的距离公式为： <span class="math display">\[d_{e}(X, Y)=\sqrt{\left(X_{1}-Y_{1}\right)^{2}+\left(X_{2}-Y_{2}\right)^{2}+\cdots+\left(X_{n}-Y_{n}\right)^{2}}\]</span> 在欧式距离空间中，坐标轴之间是相互垂直的，也就意味着随机变量之间的相关系数为零。这是一个非常强的假设，而实际研究中该假设往往不能成立。比如研究一个人的健康时，作为影响因素的身高和体重之间往往是正相关的。</p><p><font color="red"> 在欧式距离空间中，坐标轴上的量纲也是默认相同的，也就意味着随机变量必须有相同的量纲。这同样是一个过于严苛的假设。同样是研究一个人的健康，身高的单位是厘米，体重的单位是公斤，无论如何长度单位和重量单位是不可比的。</font></p><h4 id="马氏距离匹配-mahalanobis-distance-match">马氏距离匹配 mahalanobis distance match</h4><p>为了克服匹配时欧氏距离空间的上述两个缺陷，印度数学家 Mahalanobis 提出了著名的马氏距离空间。马氏距离对多匹配变量的联合分布的位置、形状做了标准化调整，也对多匹配变量之间的相关性做了正交化调整，从而将多匹配变量的联合分布转变为可以用欧氏距离计算的情形。</p><p>马氏距离实现上述功能的关键在于用协方差矩阵的逆矩阵做了调整。我们将在第三部分用 Stata 代码逐步展示它。任意点<span class="math inline">\(\vec{x}\)</span>到质心 (centroid) 的距离公式如下：</p><p><span class="math display">\[d_{m}(\vec{x})=\sqrt{(\vec{x}-\vec{c})^{\prime} \operatorname{Cov}^{-1}(\vec{x}-\vec{c})}\]</span></p><p>任意两点<span class="math inline">\(\vec{x_{1}}\)</span>和<span class="math inline">\(\vec{x_{2}}\)</span>之间的距离公式如下：</p><p><span class="math display">\[d_{m}\left(\vec{x}_{1}, \vec{x}_{2}\right)=\sqrt{\left(\vec{x}_{1}-\vec{x}_{2}\right)^{\prime} \operatorname{Cov}^{-1}\left(\vec{x}_{1}-\vec{x}_{2}\right)}\]</span></p><p>其中<span class="math inline">\(\operatorname{Cov}\)</span>为多维随机变量的样本协方差矩阵，<span class="math inline">\(c\)</span>是质心或样本均值。若样本协方差矩阵是单位矩阵 (各维度之间独立同部分)，马氏距离退化为欧氏距离。</p><p>马氏距离测量相对于质心的距离，质心是一个基准点或中心点，可以认为是多元数据的总体平均值。质心是多元空间中所有变量的均值相交的点。马氏距离越大，数据点离质心越远。</p><h4 id="百分等级匹配-percentile-rank-match">百分等级匹配 percentile rank match</h4><p>在多随机变量的联合分布中，距离近的点在概率分布函数 (PDF) 上往往不一定靠近。我们以如下标准正态分布 (钟形曲线) 为例,说明距离相近并不必然等于概率分布上的靠近。</p><p>不妨设样本容量为10000。处理组观测值点 A 位于距离原点<span class="math inline">\(2\sigma\)</span>处。则<span class="math inline">\(- \sigma\)</span>的点B和<span class="math inline">\(-3 \sigma\)</span>处的点C与点A的距离相等，都等于 。但是点A与点B之间有1359(13.59%) 个观测值，而点A与点C之间仅有214(2.14 )个观测值。显然，尽管点A到点B和点C的距离是相等的，但从概率分布的角度来看在点A前后抽样更容易抽到点C。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201206103307494.png" alt=""><figcaption>钟形曲线</figcaption></figure><p>百分等级是一个相对位置量数。它是指将距离按照从小到大的顺序排列，小于某观测值距离的观测值个数与样本数的百分比，即为该观测值的百分等级。</p><p>不同于百分数 (percentile)，有相同距离的观测值总是有相同的百分等级 (percentile rank)，以消除指定百分等级时的武断性 (arbitrariness)。因此，百分等级的公式如下：</p><p><span class="math display">\[P R=\frac{L+0.5 E}{N}\]</span></p><p>其中，<span class="math inline">\(PR\)</span>是百分等级，<span class="math inline">\(L\)</span>是距离小于该观测值距离的观测值数,<span class="math inline">\(E\)</span>是距离等于该观测值距离的观测值数，<span class="math inline">\(N\)</span>是样本数。例如，样本有100个同学参加考试，你的物理得分是85分，其中有60个人分数低于你，5个人的分数和你相同，则你的百分等级数就等于：</p><p><span class="math display">\[\frac{60+0.5 \times 5}{100}=62.5 \%\]</span></p><p>百分等级匹配就是选择百分等级最接近的观测值作为反事实观测值，显然它是一种非参数方法。基于距离的百分等级不仅克服了距离不能体现随机变量分布函数的特点 (比如距离很远的点也可能有相似的百分等级)，而且将匹配变量之间的差异限制在<span class="math inline">\([0,1]\)</span>区间。然而它仍有自己的局限，就是无法体现个体进入处理组的<strong>选择过程</strong>，或者说并没有利用到底哪些个体进入了处理组这个关键信息。</p><h4 id="倾向得分匹配-propensity-score-match">倾向得分匹配 propensity score match</h4><p><font color="red"> 倾向得分匹配不是基于距离而是基于得分。</font>倾向得分 (propensity score) 是指个体 <span class="math inline">\(i\)</span> 在给定可观测变量<span class="math inline">\(x_{i}\)</span>的情况下进入处理组的条件概率。即<span class="math inline">\(p(x_{i})=Pr(D_{i}=1\mid x=x_{i})\)</span>，或简记为<span class="math inline">\(p_{x}\)</span>。</p><p>对倾向得分的估计可使用参数估计或非参数估计，最流行的方法是<span class="math inline">\(logit\)</span>。Rosenbaum and Rubin (1983) 证明，如果可忽略性假定成立，则在给定倾向得分的情况下，结果变量在事前和事后的取值独立于是否个体进入处理组。</p><p>使用倾向得分匹配需要满足两个假定：1.共同支撑假设；2.平衡性假定。</p><p>共同支撑集是指这样一个集合，不妨设备择组观测值的倾向得分的取值范围为 <span class="math inline">\([p_{min}^{\mu}, p_{max}^{\mu}]\)</span>设处理组观测值得倾向得分取值范围为<span class="math inline">\([p_{min}^{t}, p_{max}^{t}]\)</span>，则共同支撑集内的任意观测值的倾向得分必需大于备择组和处理组的最小倾向得分中较大的那个，也必需小于最大倾向得分中较小的那个。即进入共同支撑集的观测值必需位于如下区间内：</p><p><span class="math display">\[\left[\max \left(p_{\min }^{u}, p_{\min }^{t}\right), \min \left(p_{\max }^{u}, p_{\max }^{t}\right)\right]\]</span></p><p>其中<span class="math inline">\(p_{min}^{\mu}\)</span>是对照组倾向得分的最小值，<span class="math inline">\(p_{max}^{\mu}\)</span>是对照组倾向得分的最大值；<span class="math inline">\(p_{min}^{t}\)</span> 是处理组倾向得分的最小值，<span class="math inline">\(p_{min}^{t}\)</span>是处理组倾向得分的最大值。</p><p>在匹配时，为提供匹配质量，可仅保留倾向得分重叠部分的个体。共同支撑假设要求共同支撑集的取值范围不能太小，则匹配成功的样本可能不具有代表性。</p><p>再说平衡性假定，如果倾向得分估计是准确的，那么协变量 在匹配后的处理组与控制组之间分布较均匀。例如，匹配后处理组的均值 <span class="math inline">\(\bar{x}^{t}\)</span>与对照组的均值<span class="math inline">\(\bar{x}^{\mu}\)</span>应该较接近，也就是所谓的“数据平衡”。</p><p>多接近是接近？均值之间的差异与计量单位有关，你当然可以做组间均值差异或中位数差异检验，也可以使用标准化偏差 (standarized bias) 进行比较，公式如下：</p><p><span class="math display">\[\frac{\bar{x}^{t}-\bar{x}^{u}}{\sqrt{\left(s_{x}^{t}\right)^{2}+\left(s_{x}^{u}\right)^{2} / 2}}\]</span></p><p><font color="red"> 经验法则告诉我们，标准化差距不得超过 10%。如果超过，则应重新估计倾向得分，或改变具体的匹配方法。<font color="red"></font></font></p><font color="red"><font color="red"><p>尽管倾向得分匹配体现了选择过程，但它仍有一些缺陷，比如它只能依可测变量选择，对共同支撑集有要求等。</p><h3 id="代码展示">代码展示</h3><p>我们用简单的二维模拟数据来展示不同多变量匹配方法之间的差异。</p><h4 id="数据生成过程">数据生成过程</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">clearqui  set obs 200qui gen id = _nqui set seed 10000qui gen r0 = rnormal()qui set seed 12345gen r1 = rnormal()qui set seed 65432qui gen r2 = rnormal()qui set seed 10101qui gen re = rnormal()*-选择变量gen x1 = 2 * (r0 + r1)gen x2 = 3 + (r0 + r2)*-选择机制qui gen group = 2 * x1 - 3 * x2 + 10 * re &gt; 0qui label def group 0 "非对照组" 1 "处理组"qui label val group group<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">*-数据分布keep id x1 x2 grouptab groupcorrelate x1 x2twoway (scatter x1 x2 if group == 0, mcolor(black))///   (scatter x1 x2 if group == 1, mcolor(red)), ///   title("数据分布") xlabel(-10(5)10) ///       ylabel(-10(5)10, nogrid) ///       aspect(1) legend(off)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​</p><pre><code>      group |      Freq.     Percent        Cum.------------+-----------------------------------   非对照组 |        157       78.50       78.50     处理组 |         43       21.50      100.00------------+-----------------------------------      Total |        200      100.00(obs=200)             |       x1       x2-------------+------------------          x1 |   1.0000          x2 |   0.5411   1.0000![image-20201206162443676](https://gitee.com/shao818/Figure/raw/master/null/image-20201206162443676.png)</code></pre><div data-align="center">上图中，红色的点为处理组观测值，黑色的点为对照组观测值</div><h4 id="欧氏距离匹配的结果">欧氏距离匹配的结果</h4><p>变量 <em>ec</em> 记录欧氏距离匹配得到的匹配值</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">gen ec = .gen ed = .forvalues i = 1(1)200 {  if group[`i'] == 1 {    forvalues j = 1(1)200 {      if group[`j'] == 0 {        local d = sqrt((x1[`i'] - x1[`j'])^2 + (x2[`i'] - x2[`j'])^2)        if `d' &lt; ed[`i'] {          qui replace ec = `j' in `i'          qui replace ed = `d' in `i'        }      }    }  }}tab groupmisstable sum ec ed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>(200 missing values generated)(200 missing values generated)</code></pre><p>​<br>​</p><pre><code>      group |      Freq.     Percent        Cum.------------+-----------------------------------   非对照组 |        157       78.50       78.50     处理组 |         43       21.50      100.00------------+-----------------------------------      Total |        200      100.00                                                               Obs&lt;.                                                +------------------------------               |                                | Unique      Variable |     Obs=.     Obs&gt;.     Obs&lt;.  | values        Min         Max  -------------+--------------------------------+------------------------------            ec |       157                  43  |     32          3         182            ed |       157                  43  |     43   .0474581     2.99655  -----------------------------------------------------------------------------</code></pre><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201206110317875.png" alt=""><figcaption>欧氏距离匹配的结果</figcaption></figure><h4 id="马氏距离匹配的结果">马氏距离匹配的结果</h4><p>变量 <em>mc</em> 记录马氏距离匹配得到的匹配值</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">corr x1 x2, covmat cov = r(C)mat cov = inv(cov)mat list covscalar a_11 = cov[1, 1]scalar a_22 = cov[2, 2]scalar a_21 = cov[2, 1]gen mc = .gen md = .forvalues i = 1(1)200 {  if group[`i'] == 1 {    forvalues j = 1(1)200 {      if group[`j'] == 0 {        local d = sqrt(a_11*(x1[`i'] - x1[`j'])^2 + a_22*(x2[`i'] - x2[`j'])^2 + 2 * a_21 * (x1[`i'] - x1[`j']))        if `d' &lt; md[`i'] {          qui replace mc = `j' in `i'          qui replace md = `d' in `i'        }      }    }  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>(obs=200)             |       x1       x2-------------+------------------          x1 |  9.13632          x2 |  2.21438  1.83322</code></pre><p>​<br>​<br>​<br>​</p><pre><code>symmetric cov[2,2]            x1          x2x1   .15476227x2  -.18694053   .77129752</code></pre><p>​<br>​<br>​</p><pre><code>(200 missing values generated)(200 missing values generated)</code></pre><p>​</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201206110442743.png" alt=""><figcaption>马氏距离匹配的结果</figcaption></figure><h4 id="倾向得分匹配的结果">倾向得分匹配的结果</h4><p>变量 <em>pc</em> 记录倾向得分匹配得到的匹配值</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">gen pc = .gen pd = .probit group x1 x2predict score, xbreplace score = normal(score)forvalues i = 1(1)200 {  if group[`i'] == 1 {    forvalues j = 1(1)200 {      if group[`j'] == 0 {        local d = abs(score[`i'] - score[`j'])        if `d' &lt; pd[`i'] {          qui replace pc = `j' in `i'          qui replace pd = `d' in `i'        }      }    }  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>(200 missing values generated)(200 missing values generated)</code></pre><p>​</p><pre><code>Iteration 0:   log likelihood = -104.10128  Iteration 1:   log likelihood = -87.202389  Iteration 2:   log likelihood =  -86.81419  Iteration 3:   log likelihood = -86.812732  Iteration 4:   log likelihood = -86.812732  Probit regression                               Number of obs     =        200                                                LR chi2(2)        =      34.58                                                Prob &gt; chi2       =     0.0000Log likelihood = -86.812732                     Pseudo R2         =     0.1661------------------------------------------------------------------------------       group |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------          x1 |   .2616765   .0504464     5.19   0.000     .1628034    .3605496          x2 |  -.4125467   .1041879    -3.96   0.000    -.6167512   -.2083422       _cons |   .2191261   .2985862     0.73   0.463    -.3660921    .8043443------------------------------------------------------------------------------</code></pre><p>​</p><pre><code>(200 real changes made)</code></pre><p>​</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201206110656185.png" alt=""><figcaption>倾向得分匹配的结果</figcaption></figure><h3 id="参考文献和资料">参考文献和资料</h3><ul><li>Mahalanobis Distance: Simple Definition, Examples link</li><li>Mahalanobis, P. C. (1936). On the generalized distance in statistics. National Institute of Science of India. pdf</li><li>Percentiles, Percentile Rank &amp; Percentile Range: Definition &amp; Examples link</li><li>Rosenbaum, P. R., &amp; Rubin, D. B. (1983). The central role of the propensity score in observational studies for causal effects. <em>Biometrika</em>, <em>70</em>(1), 41-55. pdf</li></ul><h2 id="倾向得分匹配法的实现pscore">倾向得分匹配法的实现：<code>pscore</code></h2><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">cd C:\Mirror\StataLearn\StataDatause nswpsid.dta,clear*browse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>C:\Mirror\StataLearn\StataData</code></pre><p>​</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">*我手头的数据变量名全部为大写，便于观察，我统一修改为小写rename _all,lower<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">reg re78 treat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>      Source |       SS           df       MS      Number of obs   =     2,675-------------+----------------------------------   F(1, 2673)      =    173.41       Model |  3.9811e+10         1  3.9811e+10   Prob &gt; F        =    0.0000    Residual |  6.1365e+11     2,673   229573201   R-squared       =    0.0609-------------+----------------------------------   Adj R-squared   =    0.0606       Total |  6.5346e+11     2,674   244375675   Root MSE        =     15152------------------------------------------------------------------------------        re78 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------       treat |  -15204.78   1154.614   -13.17   0.000     -17468.8   -12940.75       _cons |   21553.92   303.6414    70.98   0.000     20958.53    22149.32------------------------------------------------------------------------------</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">reg re78 treat age educ black hisp marr re74 re75 agesq educsq nodegree re74sq re75sq u74black u74hisp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>      Source |       SS           df       MS      Number of obs   =     2,675-------------+----------------------------------   F(15, 2659)     =    254.55       Model |  3.8521e+11        15  2.5681e+10   Prob &gt; F        =    0.0000    Residual |  2.6825e+11     2,659   100884505   R-squared       =    0.5895-------------+----------------------------------   Adj R-squared   =    0.5872       Total |  6.5346e+11     2,674   244375675   Root MSE        =     10044------------------------------------------------------------------------------        re78 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------       treat |   275.1949   1110.779     0.25   0.804    -1902.882    2453.272         age |   75.09001   157.2443     0.48   0.633    -233.2436    383.4236        educ |  -315.5722   364.6524    -0.87   0.387    -1030.603    399.4589       black |  -786.4703   503.0553    -1.56   0.118     -1772.89    199.9489        hisp |   2508.966   1188.907     2.11   0.035     177.6904    4840.241        marr |   1140.549   591.6965     1.93   0.054    -19.68268    2300.781        re74 |   .2943587   .0533481     5.52   0.000     .1897508    .3989666        re75 |   .6239079   .0487918    12.79   0.000     .5282341    .7195816       agesq |  -2.329855   2.135465    -1.09   0.275    -6.517196    1.857485      educsq |   38.24418   14.92522     2.56   0.010      8.97797    67.51039    nodegree |   401.6618   652.1677     0.62   0.538    -877.1456    1680.469      re74sq |  -2.05e-07   8.88e-07    -0.23   0.818    -1.95e-06    1.54e-06      re75sq |  -1.07e-06   7.79e-07    -1.37   0.171    -2.59e-06    4.61e-07    u74black |   2348.742   1191.527     1.97   0.049     12.32794    4685.157     u74hisp |  -1640.353   2891.265    -0.57   0.571     -7309.71    4029.004       _cons |   1928.646   3582.802     0.54   0.590    -5096.715    8954.008------------------------------------------------------------------------------</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**global breps 1000*设定重复抽样全局宏1000次global vars age agesq educ educsq black hisp marr re74 re75 re74sq u74 u75 u74hisp nodegree  *设定一个全局宏vars，代表后面的变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pscore treat $vars, pscore(myscore) comsup blockid(myblock) numblo(10) level(0.005) logit*设置block，设置显著性水平0.005，采用logit估计。一般而言，logit和probit都是比较常用的估计方法。*这个模型也叫作选择模型。*我们应该先检验打分的平衡性。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​</p><pre><code>**************************************************** Algorithm to estimate the propensity score **************************************************** </code></pre><p>​</p><pre><code>The treatment is treat      treat |      Freq.     Percent        Cum.------------+-----------------------------------          0 |      2,490       93.08       93.08          1 |        185        6.92      100.00------------+-----------------------------------      Total |      2,675      100.00</code></pre><p>​<br>​</p><pre><code>Estimation of the propensity score Iteration 0:   log likelihood = -672.64954Iteration 1:   log likelihood = -551.87026Iteration 2:   log likelihood = -355.56578Iteration 3:   log likelihood = -234.78051Iteration 4:   log likelihood =  -208.2965Iteration 5:   log likelihood = -199.26423Iteration 6:   log likelihood = -197.26114Iteration 7:   log likelihood =  -197.1054Iteration 8:   log likelihood = -197.10179Iteration 9:   log likelihood = -197.10175Logistic regression                               Number of obs   =       2675                                                  LR chi2(14)     =     951.10                                                  Prob &gt; chi2     =     0.0000Log likelihood = -197.10175                       Pseudo R2       =     0.7070------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .2628422    .120206     2.19   0.029     .0272428    .4984416       agesq |  -.0053794   .0018341    -2.93   0.003    -.0089742   -.0017846        educ |   .7149774   .3418173     2.09   0.036     .0450278    1.384927      educsq |  -.0426178   .0179039    -2.38   0.017    -.0777088   -.0075269       black |   2.519383    .370358     6.80   0.000     1.793495    3.245272        hisp |   3.087327   .7340486     4.21   0.000     1.648618    4.526036        marr |  -1.780857    .301802    -5.90   0.000    -2.372378   -1.189336        re74 |  -.0000448   .0000425    -1.05   0.292     -.000128    .0000385        re75 |  -.0002678   .0000485    -5.52   0.000    -.0003628   -.0001727      re74sq |   1.99e-09   7.75e-10     2.57   0.010     4.72e-10    3.51e-09         u74 |   3.100056   .5187391     5.98   0.000     2.083346    4.116766         u75 |  -1.273525   .4644557    -2.74   0.006    -2.183842   -.3632088     u74hisp |  -1.925803    1.07186    -1.80   0.072     -4.02661    .1750032    nodegree |   .1891046   .4257533     0.44   0.657    -.6453564    1.023566       _cons |  -7.407524   2.445692    -3.03   0.002    -12.20099   -2.614056------------------------------------------------------------------------------Note: 65 failures and 0 successes completely determined.</code></pre><p>​<br>​</p><pre><code>Note: the common support option has been selectedThe region of common support is [.00036433, .98576756]</code></pre><p>​<br>​</p><pre><code>Description of the estimated propensity score in region of common support                  Estimated propensity score-------------------------------------------------------------      Percentiles      Smallest 1%     .0003871       .0003643 5%     .0004805       .000366910%     .0006343       .0003702       Obs               1,27125%     .0016393       .0003714       Sum of Wgt.       1,27150%     .0090427                      Mean           .1447205                        Largest       Std. Dev.      .280951175%     .0897599       .980304390%      .656286       .9830988       Variance       .078933595%     .9392306       .9855413       Skewness       2.04999999%     .9640553       .9857676       Kurtosis       5.748631</code></pre><p>​<br>​</p><pre><code>****************************************************** Step 1: Identification of the optimal number of blocks Use option detail if you want more detailed output ****************************************************** </code></pre><p>​</p><pre><code>The final number of blocks is 10This number of blocks ensures that the mean propensity scoreis not different for treated and controls in each blocks</code></pre><p>​<br>​</p><pre><code>********************************************************** Step 2: Test of balancing property of the propensity score Use option detail if you want more detailed output ********************************************************** Variable re74 is not balanced in block 8Variable re74sq is not balanced in block 8Variable u74 is not balanced in block 8The balancing property is not satisfied Try a different specification of the propensity score   Inferior |  of block |         treatof pscore  |         0          1 |     Total-----------+----------------------+----------         0 |       960          9 |       969         .1 |        56         10 |        66         .2 |        15          7 |        22         .3 |        18          7 |        25         .4 |        15         12 |        27         .5 |         7         12 |        19         .6 |         5         21 |        26         .7 |         2         12 |        14         .8 |         2         14 |        16         .9 |         6         81 |        87 -----------+----------------------+----------     Total |     1,086        185 |     1,271 Note: the common support option has been selected</code></pre><p>​</p><pre><code>******************************************* End of the algorithm to estimate the pscore ******************************************* </code></pre><h3 id="方法一近邻匹配nearest-neighbor-matching">方法一：近邻匹配（nearest neighbor matching）</h3><ul><li>含义：最邻近匹配法是最常用的一种匹配方法，它把控制组中找到的与处理组个体倾向得分差异最小的个体，作为自己的比较对象 。</li><li>优点：按处理个体找控制个体，所有处理个体都会配对成功，处理组的信息得以充分使用。</li><li>缺点：由于不舍弃任何一个处理组，很可能有些配对组的倾向得分差距很大，也将其配对，导致配对质量不高，而处理效应ATT的结果中也会包含这一差距，使得ATT精确度下降。</li></ul><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**set seed 12345*（产生随机数种子）attnd re78 treat $vars,comsup boot reps($breps) dots logit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​</p><pre><code> The program is searching the nearest neighbor of each treated unit.  This operation may take a while.</code></pre><p>​<br>​</p><pre><code>ATT estimation with Nearest Neighbor Matching method (random draw version)Analytical standard errors---------------------------------------------------------n. treat.   n. contr.         ATT    Std. Err.          t---------------------------------------------------------      185          60    1285.782     3895.044      0.330---------------------------------------------------------Note: the numbers of treated and controls refer to actualnearest neighbour matches</code></pre><p>​<br>​<br>​<br>​</p><pre><code>Bootstrapping of standard errors command:      attnd re78 treat age agesq educ educsq black hisp marr re74 re75 r&gt; e74sq u74 u75 u74hisp nodegree , pscore() logit comsupstatistic:    attnd      = r(attnd)................................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................note: label truncated to 80 charactersBootstrap statistics                              Number of obs    =      2675                                                  Replications     =      1000------------------------------------------------------------------------------Variable     |  Reps  Observed      Bias  Std. Err. [95% Conf. Interval]-------------+----------------------------------------------------------------       attnd |  1000  1285.782  301.0502  1268.737  -1203.913   3775.477   (N)             |                                      -1013.798   3885.525   (P)             |                                      -2072.365   3301.271  (BC)------------------------------------------------------------------------------Note:  N   = normal       P   = percentile       BC  = bias-corrected</code></pre><p>​<br>​</p><pre><code>ATT estimation with Nearest Neighbor Matching method(random draw version)Bootstrapped standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185          60    1285.782    1268.737       1.013---------------------------------------------------------Note: the numbers of treated and controls refer to actualnearest neighbour matches</code></pre><h3 id="方法二半径匹配radius-matching">方法二：半径匹配（radius matching）</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">*半径匹配法是事先设定半径，找到所有设定半径范围内的单位圆中的控制样本，半径取值为正。随着半径的降低，匹配的要求越来越严。set seed 12345attr re78 treat $vars, comsup boot reps($breps) dots logit radius(0.001)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​</p><pre><code> The program is searching for matches of treated units within radius.  This operation may take a while.</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Radius Matching methodAnalytical standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------       51         541   -7808.241    1146.418      -6.811---------------------------------------------------------Note: the numbers of treated and controls refer to actualmatches within radius</code></pre><p>​<br>​<br>​<br>​</p><pre><code>Bootstrapping of standard errors command:      attr re78 treat age agesq educ educsq black hisp marr re74 re75 re&gt; 74sq u74 u75 u74hisp nodegree , pscore() logit comsup radius(.001)statistic:    attr       = r(attr)................................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................note: label truncated to 80 charactersBootstrap statistics                              Number of obs    =      2675                                                  Replications     =      1000------------------------------------------------------------------------------Variable     |  Reps  Observed      Bias  Std. Err. [95% Conf. Interval]-------------+----------------------------------------------------------------        attr |  1000 -7808.242  1681.651  3063.974   -13820.8  -1795.679   (N)             |                                       -11035.8   509.8419   (P)             |                                      -12358.52   -2307.59  (BC)------------------------------------------------------------------------------Note:  N   = normal       P   = percentile       BC  = bias-corrected</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Radius Matching methodBootstrapped standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------       51         541   -7808.242    3063.974      -2.548---------------------------------------------------------Note: the numbers of treated and controls refer to actualmatches within radius</code></pre><h3 id="方法三分层匹配stratification-matching">方法三：分层匹配（stratification matching）</h3><ul><li>分层匹配法是根据估计的倾向得分将全部样本分块，使得每块的平均倾向得分在处理组和控制组中相等。</li><li>优点：Cochrane,Chambers（1965）指出五个区就可以消除95%的与协变量相关的偏差。这个方法考虑到了样本的分层问题或聚类问题。 就是假定：每一层内的个体样本具有相关性，而各层之间的样本不具有相关性。</li><li>缺点：如果在每个区内找不到对照个体，那么这类个体的信息，会丢弃不用。总体配对的数量减少。</li></ul><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**set seed 12345atts re78 treat $vars, pscore(myscore) blockid(myblock) comsup boot reps($breps) dots<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​<br>​</p><pre><code>ATT estimation with the Stratification methodAnalytical standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185        1086    1436.141     878.679       1.634---------------------------------------------------------</code></pre><p>​<br>​<br>​<br>​</p><pre><code>Bootstrapping of standard errors command:      atts re78 treat age agesq educ educsq black hisp marr re74 re75 re&gt; 74sq u74 u75 u74hisp nodegree , pscore(myscore) blockid(myblock) comsupstatistic:    atts       = r(atts)................................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................note: label truncated to 80 charactersBootstrap statistics                              Number of obs    =      2675                                                  Replications     =      1000------------------------------------------------------------------------------Variable     |  Reps  Observed      Bias  Std. Err. [95% Conf. Interval]-------------+----------------------------------------------------------------        atts |  1000  1436.141  14.08074  988.5672  -503.7653   3376.048   (N)             |                                      -443.7835   3479.466   (P)             |                                       -436.341   3513.302  (BC)------------------------------------------------------------------------------Note:  N   = normal       P   = percentile       BC  = bias-corrected</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Stratification methodBootstrapped standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185        1086    1436.141     988.567       1.453---------------------------------------------------------</code></pre><h3 id="方法四核匹配法kernel-matching">方法四：核匹配法（kernel matching）</h3><p>核匹配是一种非参数方法，通过构造一个虚拟对象来匹配处理组，构造的原则是对现有的控制变量做权重平均，权重的取值与处理组、控制组PS值差距呈反向相关关系。</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**set seed 12345attk  re78 treat $vars,comsup boot reps($breps) dots logit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​</p><pre><code> The program is searching for matches of each treated unit.  This operation may take a while.</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Kernel Matching method ---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185        1086    1342.016           .           .---------------------------------------------------------Note: Analytical standard errors cannot be computed. Usethe bootstrap option to get bootstrapped standard errors.</code></pre><p>​<br>​<br>​<br>​</p><pre><code>Bootstrapping of standard errors command:      attk re78 treat age agesq educ educsq black hisp marr re74 re75 re&gt; 74sq u74 u75 u74hisp nodegree , pscore() logit comsup bwidth(.06)statistic:    attk       = r(attk)................................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................................&gt; ..............................................................note: label truncated to 80 charactersBootstrap statistics                              Number of obs    =      2675                                                  Replications     =      1000------------------------------------------------------------------------------Variable     |  Reps  Observed      Bias  Std. Err. [95% Conf. Interval]-------------+----------------------------------------------------------------        attk |  1000  1342.016  19.94675  1023.717  -666.8665   3350.899   (N)             |                                      -550.7159    3380.17   (P)             |                                      -543.5536   3382.363  (BC)------------------------------------------------------------------------------Note:  N   = normal       P   = percentile       BC  = bias-corrected</code></pre><p>​<br>​</p><pre><code>ATT estimation with the Kernel Matching methodBootstrapped standard errors---------------------------------------------------------n. treat.   n. contr.         ATT   Std. Err.           t---------------------------------------------------------      185        1086    1342.016    1023.717       1.311---------------------------------------------------------</code></pre><h3 id="方法五马氏距离">方法五：马氏距离</h3><p>由于在倾向得分匹配第一阶段估计倾向得分时存在不确定性，Abadie and Imbens的相关研究又重新回到更简单的马氏距离，进行有放回且允许并列的k近邻匹配，针对非精确匹配一般存在偏差，提出了偏差校正的方法，通过回归的方法估计偏差，然后得到偏差校正匹配估计量。</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">**--基本命令--**nnmatch re78 treat $vars, m(4) tc(att) population  bias(bias) robust(4)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>Matching estimator: Population Average Treatment Effect for the TreatedWeighting matrix: inverse variance          Number of obs          =      2675                                            Number of matches  (m) =         4                                            Number of matches,                                               robust std. err. (h) =         4------------------------------------------------------------------------------        re78 |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------        PATT |   2324.278   831.4603     2.80   0.005     694.6459     3953.91------------------------------------------------------------------------------Matching variables:  age agesq educ educsq black hisp marr re74 re75 re74sq        u74 u75 u74hisp nodegreeBias-adj variables:  age agesq educ educsq black hisp marr re74 re75 re74sq        u74 u75 u74hisp nodegree</code></pre><h2 id="倾向得分匹配法的实现psmatch2">倾向得分匹配法的实现：<code>psmatch2</code></h2><p>其实呢，psmatch2和pscore除了句法结构稍有不同之外，估计的结果等是完全相同的。</p><p>我大致列一下命令，感兴趣的朋友可以自行尝试。</p><h3 id="基本命令">基本命令</h3><p></p><pre class="line-numbers language-none"><code class="language-none">psmatch2 depvar [indepvars] [if exp] [in range] [, outcome(varlist) pscore(varname)                     neighbor(integer) radius caliper(real) mahalanobis(varlist) ai(integer) population                     altvariance kernel llr kerneltype(type) bwidth(real) spline nknots(integer) common                     trim(real) noreplacement descending odds index logit ties quietly w(matrix) ate]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p></p><ul><li><code>neighbor(integer)</code> number of neighbors used to calculate the matched outcome.Defaults to 1. Default matching method is single nearest-neighbour (without caliper).<br></li><li><code>noreplacement</code> perform 1-to-1 matching without replacement. Nearest neigbor propensity score matching only.<br></li><li><code>descending</code> perform 1-to-1 matching without replacement in descending order. Nearest neighbor propensity score matching only.<br></li><li><code>ties</code> not only match nearest neighbor but also other controls with identical (tied) pscores.<br></li><li><code>radius</code> perform radius matching within the specified radius given by caliper.<br></li><li><code>caliper(real)</code> value for maximum distance of controls. Use to perform nearest neighbor(s) within caliper, radius matching and Mahalanobis 1-to-1 matching.</li><li><code>kernel</code> perform kernel matching.</li><li>kerneltype(kernel_type) specifies the type of kernel:<ul><li><code>normal</code> the gaussian kernel.</li><li><code>biweight</code> the biweight kernel.</li><li><code>epan</code> the epanechnikov kernel (Default).</li><li><code>uniform</code> the uniform kernel.<br></li></ul></li><li><code>llr</code> llr use local linear regression matching instead of kernel matching.</li><li><code>bwidth(real)</code> the bandwidth for kernel and local linear regression matching. Default bandwidth is 0.06, except when doing local linear regression with the Epanechnikov kernel when the default bandwidth is the rule-of-thumb bandwidth of lpoly.</li><li><code>mahalanobis(varlist)</code> perform Mahalanobis-metric matching on varlist.</li></ul><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use nswpsid,clearrename _all,lowerglobal breps 1000global vars age agesq educ educsq black hisp marr re74 re75 re74sq u74 u75 u74hisp nodegree  psmatch2  treat $vars ,out(re78)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​<br>​<br>​<br>​<br>​</p><pre><code>Probit regression                               Number of obs     =      2,675                                                LR chi2(13)       =     940.49                                                Prob &gt; chi2       =     0.0000Log likelihood = -202.40579                     Pseudo R2         =     0.6991------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .1543439   .0644103     2.40   0.017     .0281021    .2805857       agesq |  -.0030911   .0009855    -3.14   0.002    -.0050227   -.0011595        educ |   .3889617   .1795042     2.17   0.030     .0371398    .7407835      educsq |  -.0226529   .0092936    -2.44   0.015    -.0408681   -.0044377       black |   1.345799   .1882886     7.15   0.000     .9767603    1.714838        hisp |   1.586357   .3700556     4.29   0.000     .8610618    2.311653        marr |  -.9527278    .154817    -6.15   0.000    -1.256163   -.6492921        re74 |  -.0000227   .0000212    -1.07   0.285    -.0000643    .0000189        re75 |  -.0001119   .0000205    -5.47   0.000     -.000152   -.0000718      re74sq |   9.77e-10   3.51e-10     2.78   0.005     2.89e-10    1.67e-09         u74 |    1.64806   .2656635     6.20   0.000     1.127369    2.168751         u75 |   -.542294   .2432332    -2.23   0.026    -1.019022   -.0655657     u74hisp |  -.9231337   .5719261    -1.61   0.107    -2.044088    .1978208    nodegree |   .1278371   .2203571     0.58   0.562    -.3040549     .559729       _cons |  -4.431708   1.310215    -3.38   0.001    -6.999682   -1.863734------------------------------------------------------------------------------Note: 507 failures and 0 successes completely determined.--------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6349.14537   21553.9213  -15204.7759   1154.61435 &gt;   -13.17                        ATT | 6349.14537   4600.46309   1748.68228   1825.51521 &gt;     0.96----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated.           | psmatch2: psmatch2: |   Common Treatment |  supportassignment | On suppor |     Total-----------+-----------+---------- Untreated |     2,490 |     2,490    Treated |       185 |       185 -----------+-----------+----------     Total |     2,675 |     2,675 </code></pre><h3 id="近邻匹配">近邻匹配</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2  treat $vars,out(re78) neighbor(2) ate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Probit regression                               Number of obs     =      2,675                                                LR chi2(13)       =     940.49                                                Prob &gt; chi2       =     0.0000Log likelihood = -202.40579                     Pseudo R2         =     0.6991------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .1543439   .0644103     2.40   0.017     .0281021    .2805857       agesq |  -.0030911   .0009855    -3.14   0.002    -.0050227   -.0011595        educ |   .3889617   .1795042     2.17   0.030     .0371398    .7407835      educsq |  -.0226529   .0092936    -2.44   0.015    -.0408681   -.0044377       black |   1.345799   .1882886     7.15   0.000     .9767603    1.714838        hisp |   1.586357   .3700556     4.29   0.000     .8610618    2.311653        marr |  -.9527278    .154817    -6.15   0.000    -1.256163   -.6492921        re74 |  -.0000227   .0000212    -1.07   0.285    -.0000643    .0000189        re75 |  -.0001119   .0000205    -5.47   0.000     -.000152   -.0000718      re74sq |   9.77e-10   3.51e-10     2.78   0.005     2.89e-10    1.67e-09         u74 |    1.64806   .2656635     6.20   0.000     1.127369    2.168751         u75 |   -.542294   .2432332    -2.23   0.026    -1.019022   -.0655657     u74hisp |  -.9231337   .5719261    -1.61   0.107    -2.044088    .1978208    nodegree |   .1278371   .2203571     0.58   0.562    -.3040549     .559729       _cons |  -4.431708   1.310215    -3.38   0.001    -6.999682   -1.863734------------------------------------------------------------------------------Note: 507 failures and 0 successes completely determined.--------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6349.14537   21553.9213  -15204.7759   1154.61435 &gt;   -13.17                        ATT | 6349.14537   4570.95733   1778.18805   1626.12983 &gt;     1.09                        ATU | 21553.9213   5483.05914  -16070.8622            . &gt;        .                        ATE |                          -14836.4419            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated.           | psmatch2: psmatch2: |   Common Treatment |  supportassignment | On suppor |     Total-----------+-----------+---------- Untreated |     2,490 |     2,490    Treated |       185 |       185 -----------+-----------+----------     Total |     2,675 |     2,675 </code></pre><h3 id="半径匹配">半径匹配</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2  treat $vars,out(re78)  ate radius caliper(0.01)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Probit regression                               Number of obs     =      2,675                                                LR chi2(13)       =     940.49                                                Prob &gt; chi2       =     0.0000Log likelihood = -202.40579                     Pseudo R2         =     0.6991------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .1543439   .0644103     2.40   0.017     .0281021    .2805857       agesq |  -.0030911   .0009855    -3.14   0.002    -.0050227   -.0011595        educ |   .3889617   .1795042     2.17   0.030     .0371398    .7407835      educsq |  -.0226529   .0092936    -2.44   0.015    -.0408681   -.0044377       black |   1.345799   .1882886     7.15   0.000     .9767603    1.714838        hisp |   1.586357   .3700556     4.29   0.000     .8610618    2.311653        marr |  -.9527278    .154817    -6.15   0.000    -1.256163   -.6492921        re74 |  -.0000227   .0000212    -1.07   0.285    -.0000643    .0000189        re75 |  -.0001119   .0000205    -5.47   0.000     -.000152   -.0000718      re74sq |   9.77e-10   3.51e-10     2.78   0.005     2.89e-10    1.67e-09         u74 |    1.64806   .2656635     6.20   0.000     1.127369    2.168751         u75 |   -.542294   .2432332    -2.23   0.026    -1.019022   -.0655657     u74hisp |  -.9231337   .5719261    -1.61   0.107    -2.044088    .1978208    nodegree |   .1278371   .2203571     0.58   0.562    -.3040549     .559729       _cons |  -4.431708   1.310215    -3.38   0.001    -6.999682   -1.863734------------------------------------------------------------------------------Note: 507 failures and 0 successes completely determined.--------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6349.14537   21553.9213  -15204.7759   1154.61435 &gt;   -13.17                        ATT | 5797.07774   4992.15701   804.920727   2941.28189 &gt;     0.27                        ATU | 22014.9702    4457.3058  -17557.6644            . &gt;        .                        ATE |                          -16580.5462            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated. psmatch2: |   psmatch2: Common Treatment |        supportassignment | Off suppo  On suppor |     Total-----------+----------------------+---------- Untreated |        88      2,402 |     2,490    Treated |        50        135 |       185 -----------+----------------------+----------     Total |       138      2,537 |     2,675 </code></pre><h3 id="核匹配">核匹配</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2  treat $vars,out(re78)  ate kernel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Probit regression                               Number of obs     =      2,675                                                LR chi2(13)       =     940.49                                                Prob &gt; chi2       =     0.0000Log likelihood = -202.40579                     Pseudo R2         =     0.6991------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .1543439   .0644103     2.40   0.017     .0281021    .2805857       agesq |  -.0030911   .0009855    -3.14   0.002    -.0050227   -.0011595        educ |   .3889617   .1795042     2.17   0.030     .0371398    .7407835      educsq |  -.0226529   .0092936    -2.44   0.015    -.0408681   -.0044377       black |   1.345799   .1882886     7.15   0.000     .9767603    1.714838        hisp |   1.586357   .3700556     4.29   0.000     .8610618    2.311653        marr |  -.9527278    .154817    -6.15   0.000    -1.256163   -.6492921        re74 |  -.0000227   .0000212    -1.07   0.285    -.0000643    .0000189        re75 |  -.0001119   .0000205    -5.47   0.000     -.000152   -.0000718      re74sq |   9.77e-10   3.51e-10     2.78   0.005     2.89e-10    1.67e-09         u74 |    1.64806   .2656635     6.20   0.000     1.127369    2.168751         u75 |   -.542294   .2432332    -2.23   0.026    -1.019022   -.0655657     u74hisp |  -.9231337   .5719261    -1.61   0.107    -2.044088    .1978208    nodegree |   .1278371   .2203571     0.58   0.562    -.3040549     .559729       _cons |  -4.431708   1.310215    -3.38   0.001    -6.999682   -1.863734------------------------------------------------------------------------------Note: 507 failures and 0 successes completely determined.--------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6349.14537   21553.9213  -15204.7759   1154.61435 &gt;   -13.17                        ATT | 6349.14537   5437.46536   911.680015   3074.54428 &gt;     0.30                        ATU | 21553.9213   11330.8223   -10223.099            . &gt;        .                        ATE |                          -9453.03015            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated.           | psmatch2: psmatch2: |   Common Treatment |  supportassignment | On suppor |     Total-----------+-----------+---------- Untreated |     2,490 |     2,490    Treated |       185 |       185 -----------+-----------+----------     Total |     2,675 |     2,675 </code></pre><h3 id="对自变量进行平衡性检验">对自变量进行平衡性检验</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pstest $vars, both graph<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>--------------------------------------------------------------------------------&gt; --------                Unmatched |       Mean               %reduct |     t-test    |  &gt; V(T)/Variable          Matched | Treated Control    %bias  |bias| |    t    p&gt;|t| |  &gt; V(C)--------------------------+----------------------------------+---------------+--&gt; --------age                    U  | 25.816   34.851   -100.9         | -11.57  0.000 |  &gt; 0.47*                       M  | 25.816   25.114      7.8    92.2 |   1.04  0.297 |  &gt; 1.58*                          |                                  |               |agesq                  U  | 717.39   1323.5    -97.1         | -10.59  0.000 |  &gt; 0.31*                       M  | 717.39   662.88      8.7    91.0 |   1.31  0.190 |  &gt; 1.40*                          |                                  |               |educ                   U  | 10.346   12.117    -68.1         |  -7.69  0.000 |  &gt; 0.43*                       M  | 10.346   10.734    -14.9    78.1 |  -1.91  0.057 |  &gt; 1.13                          |                                  |               |educsq                 U  | 111.06   156.32    -78.5         |  -8.52  0.000 |  &gt; 0.30*                       M  | 111.06   118.77    -13.4    83.0 |  -1.88  0.061 |  &gt; 0.98                          |                                  |               |black                  U  | .84324    .2506    148.0         |  18.13  0.000 |  &gt;    .                       M  | .84324   .84831     -1.3    99.1 |  -0.13  0.893 |  &gt;    .                          |                                  |               |hisp                   U  | .05946   .03253     12.9         |   1.94  0.053 |  &gt;    .                       M  | .05946   .06369     -2.0    84.3 |  -0.17  0.866 |  &gt;    .                          |                                  |               |marr                   U  | .18919   .86627   -184.2         | -25.81  0.000 |  &gt;    .                       M  | .18919   .13374     15.1    91.8 |   1.45  0.148 |  &gt;    .                          |                                  |               |re74                   U  | 2095.6    19429   -171.8         | -17.50  0.000 |  &gt; 0.13*                       M  | 2095.6   2569.4     -4.7    97.3 |  -0.83  0.407 |  &gt; 0.65*                          |                                  |               |re75                   U  | 1532.1    19063   -177.4         | -17.50  0.000 |  &gt; 0.06*                       M  | 1532.1   2518.3    -10.0    94.4 |  -2.14  0.033 |  &gt; 0.36*                          |                                  |               |re74sq                 U  | 2.8e+07   5.6e+08    -85.7         |  -8.30  0.000 |&gt;   0.02*                       M  | 2.8e+07   4.3e+07     -2.4    97.2 |  -0.78  0.437 |&gt;   0.24*                          |                                  |               |u74                    U  | .70811   .08635    164.2         |  27.54  0.000 |  &gt;    .                       M  | .70811   .64162     17.6    89.3 |   1.36  0.173 |  &gt;    .                          |                                  |               |u75                    U  |     .6       .1    122.8         |  20.70  0.000 |  &gt;    .                       M  |     .6   .50136     24.2    80.3 |   1.91  0.057 |  &gt;    .                          |                                  |               |u74hisp                U  | .03243   .00361     21.7         |   5.09  0.000 |  &gt;    .                       M  | .03243   .04352     -8.4    61.5 |  -0.56  0.578 |  &gt;    .                          |                                  |               |nodegree               U  | .70811   .30522     87.9         |  11.49  0.000 |  &gt;    .                       M  | .70811   .65062     12.5    85.7 |   1.18  0.237 |  &gt;    .                          |                                  |               |--------------------------------------------------------------------------------&gt; --------* if variance ratio outside [0.75; 1.34] for U and [0.75; 1.34] for M--------------------------------------------------------------------------------&gt; --- Sample    | Ps R2   LR chi2   p&gt;chi2   MeanBias   MedBias      B      R     %Va&gt; r-----------+--------------------------------------------------------------------&gt; --- Unmatched | 0.699    940.49    0.000    108.7      99.0     298.4*   0.27*   10&gt; 0 Matched   | 0.039     19.82    0.136     10.2       9.4      42.8*   0.52     7&gt; 1--------------------------------------------------------------------------------&gt; ---* if B&gt;25%, R outside [0.5; 2]</code></pre><h3 id="共同支持区间">共同支持区间</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psgraph<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="倾向得分匹配psm中协变量的筛选">倾向得分匹配(PSM)中协变量的筛选</h2><blockquote><p>倾向得分匹配分析 (PSM) 已经在诸多领域得到了应用。虽然 PSM 不能完全解决内生性问题，但却能在很大程度上缓解自我选择问题导致的偏差。在前期文献中，Becker &amp; Ichino (2002, Stata Journal, 2(4):358-377) 对 PSM 的分析过程进行了详细的介绍，Stata 中也有多个命令可以执行 PSM 分析，如 <code>pscore</code>, <code>psmatch2</code>, <code>treatrew</code>(Stata Journal, 14(3): 541-561), <code>gpscore</code> (SJ 8(3):354--373), <code>kmatch</code></p></blockquote><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">net describe st0328,from(http://www.stata-journal.com/software/sj14-1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>--------------------------------------------------------------------------------package st0328 from http://www.stata-journal.com/software/sj14-1--------------------------------------------------------------------------------TITLE      SJ14-1 st0328. Estimation of the generalized...DESCRIPTION/AUTHOR(S)      Estimation of the generalized propensity score        through generalized linear models      by Barbara Guardabascio, Istat, Italian National           Institute of Statistics, Rome, Italy         Marco Ventura, Istat, Italian National           Institute of Statistics, Rome, Italy      Support:  guardabascio@istat.it      After installation, type help glmgpscore and        glmdose      This also requires doseresponse_model.ado; type        {cmd:search doseresponse_model} and follow the links        to install the latest package.INSTALLATION FILES                               (type net install st0328)      st0328/glmdose.ado      st0328/glmgpscore.ado      st0328/glmdose.sthlp      st0328/glmgpscore.sthlpANCILLARY FILES                                  (type net get st0328)      st0328/lotterydataset.dta      st0328/output_flog.dta      st0328/output_proof.dta      st0328/examples.do--------------------------------------------------------------------------------</code></pre><h3 id="平衡性假设">平衡性假设</h3><p>在 PSM 匹配时，用treat变量对控制变量进行Logit回归，得到倾向得分值。倾向得分值最接近的控制组个体即为实验组的配对样本，通过这种方法可以最大程度减少实验组与控制组个体存在的系统性差异，从而减少估计偏误。在进行PSM匹配后的其他估计前比如PSM-DID 估计前，还需进行协变量的平衡性假设检验，即匹配后各变量在实验组和控制组之间是否变得平衡，也就是说实验组和控制组协变量的均值在匹配后是否具有显著差异。如果不存在显著差异，则支持进一步的模型估计。</p><p>在平衡性检验之前，我们先使用<code>psmatch2</code>命令进行PSM匹配，处理变量为train，协变量为age、educ、black，结果变量为re78，采用一对一近邻匹配，具体操作如下：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use ldw_exper.dta,clear<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">findname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>t         educ      hisp      nodegree  re75      u74age       black     married   re74      re78      u75</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2 t  age educ black, out(re78) logit ate neighbor(1) common caliper(.05) ties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Logistic regression                             Number of obs     =        445                                                LR chi2(3)        =       3.51                                                Prob &gt; chi2       =     0.3192Log likelihood = -300.34408                     Pseudo R2         =     0.0058------------------------------------------------------------------------------           t |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------         age |   .0143112   .0136229     1.05   0.293    -.0123892    .0410116        educ |   .0793213   .0546484     1.45   0.147    -.0277876    .1864302       black |   .0790505   .2625391     0.30   0.763    -.4355167    .5936176       _cons |  -1.580782   .6798444    -2.33   0.020    -2.913252   -.2483115--------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------            re78  Unmatched | 6.34914538   4.55480228   1.79434311   .632853552 &gt;     2.84                        ATT | 6.26522687   4.18443652   2.08079035   .752125106 &gt;     2.77                        ATU | 4.55541071   6.05253804   1.49712733            . &gt;        .                        ATE |                           1.73855158            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated. psmatch2: |   psmatch2: Common Treatment |        supportassignment | Off suppo  On suppor |     Total-----------+----------------------+---------- Untreated |         2        258 |       260    Treated |         3        182 |       185 -----------+----------------------+----------     Total |         5        440 |       445 </code></pre><p>PSM 匹配完成之后，我们需要检验匹配后的样本是否满足平衡性假设，即实验组与控制组的匹配协变量是否没有显著性差异，在这里可以使用<code>pstest</code>命令进行检验，具体如下：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pstest age educ black hisp married , t(t)  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>------------------------------------------------------------------------------                        |       Mean               |     t-test    |  V(T)/Variable                | Treated Control    %bias |    t    p&gt;|t| |  V(C)------------------------+--------------------------+---------------+----------age                     | 25.527   24.714     11.4 |   1.19  0.234 |  1.24educ                    | 10.291   10.401     -6.0 |  -0.59  0.557 |  1.60*black                   | .84066   .87363     -8.9 |  -0.90  0.370 |     .hisp                    | .06044   .09066    -10.9 |  -1.09  0.277 |     .married                 | .18681    .1522      9.2 |   0.88  0.380 |     .------------------------------------------------------------------------------* if variance ratio outside [0.75; 1.34]----------------------------------------------------------------------Ps R2   LR chi2   p&gt;chi2   MeanBias   MedBias      B       R     %Var ----------------------------------------------------------------------0.019      9.70    0.084      9.3       9.2      32.4*    2.23*    50----------------------------------------------------------------------* if B&gt;25%, R outside [0.5; 2]</code></pre><h3 id="选择匹配协变量">选择匹配协变量</h3><p>根据t检验结果发现，以上5个协变量在实验组与控制组之间不存在显著性差异。</p><p>那么，在进行 PSM 分析之前，应当如何选择匹配协变量，使模型实现最佳的拟合效果呢？今天介绍的 psestimate 命令可以通过比较不同模型的极大似然值，帮助我们选择能实现最佳拟合效果的协变量的一阶和二阶形式。</p><p>The <code>psestimate</code> command estimates the propensity score proposed by <a href="https://www.sci-hub.shop/10.3368/jhr.50.2.373">Imbens and Rubin (2015)</a>. The main purpose of the program is to select a linear or quadratic function of covariates to include in the estimation function of the propensity score.</p><h4 id="命令的安装与示例数据导入">命令的安装与示例数据导入</h4><p>在Stata命令窗口执行第一行代码即可完成对 <code>psestimate</code> 命令的下载，然后输入第二行命令下载网上示例数据 nswre74.dta（LaLonde, 1986），并执行第三行命令导入数据。</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">ssc install psestimate, replace //安装命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>checking psestimate consistency and verifying not already installed...all files already exist and are up to date.</code></pre><h4 id="命令的语法">命令的语法</h4><p>该命令的语法如下：</p><pre class="line-numbers language-none"><code class="language-none">psestimate depvar [indepvars] [if] [in] [, options]options：                  totry(indepvars)          notry(varlist)            nolin                    noquad                   clinear(real)            cquadratic(real)         iterate(#)               genpscore(newvar)        genlor(newvar)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>各个主要选项的含义如下：</p><ul><li><code>depvar</code>，必选项，填入处理变量（如 treat），即标记是否参与实验的虚拟变量</li><li><code>indepvars</code>，可选项，指定基准模型中的协变量</li><li><code>totry(indepvars)</code>，可选项，放入供选择的协变量列表，默认为全部</li><li><code>notry(varlist)</code>，可选项，指定不包括的协变量列表，默认为没有</li><li><code>nolin</code>，可选项，指定不进行一阶多项式的选择</li><li><code>noquad</code>，可选项，指定不进行二阶多项式的选择</li><li><code>clinear(real)</code>，可选项，指定一阶协变量似然比检验的门槛值，默认值为 1</li><li><code>cquadratic(real)</code>，可选项，指定二阶协变量似然比检验的门槛值，默认值是 2.71</li><li><code>iterate(#)</code>，可选项，指定在每个 logit 中执行循环的最大值，默认值是 16000</li><li><code>genpscore(newvar)</code>，可选项，由于指定程序自动生成的用于记录倾向得分值的新变量的名称</li><li><code>genlor(newvar)</code>，可选项，生成对数似然比的新变量的名称</li></ul><h3 id="命令操作">命令操作</h3><p> </p><h4 id="命令基本操作">命令基本操作</h4><p>下面本文将基于 <code>psestimate</code> 命令的作者提供的数据集 <strong>nswre74.dta</strong> 来简要说明如何使用 <code>psestimate</code> 这一命令来选择能最好拟合处理变量 (treat) 的协变量的一阶及二阶形式。</p><p>在这里，我们事先选定教育变量 <strong>ed</strong> 作为基准模型中的一个协变量，意味着 Stata 自动将 <strong>ed</strong> 放入基准模型中。另外，我们将指定 <strong>age</strong>、<strong>black</strong>、<strong>hisp</strong>、<strong>nodeg</strong> 四个变量作为待选协变量。代码如下：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use "nswre74.dta", clearpsestimate treat ed, totry(age black hisp nodeg)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​</p><pre><code>Selecting first order covariates... (10)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 ...s..s..Selected first order covariates are: nodeg hispSelecting second order covariates... (21)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 .....s.....Selected second order covariates are: c.nodeg#c.edFinal model is: ed nodeg hisp c.nodeg#c.ed</code></pre><p>根据以上结果，可以确定在倾向得分匹配中，我们应该选取的一阶协变量为 <strong>nodeg</strong>、<strong>hisp</strong>，二阶协变量为 <strong>c.nodeg#c.ed</strong>。综上，根据 <code>psestimate</code> 命令的运算结果，我们应该选取 <strong>ed</strong>、<strong>nodeg</strong>、<strong>hisp</strong>、<strong>c.nodeg#c.ed</strong> 等四个变量作为倾向得分匹配的协变量。</p><h4 id="提升运算速度">提升运算速度</h4><p><code>psestimate</code>命令在运算中会耗费较长时间，而通常来说，该命令在选择协变量的一阶形式时要快于二阶形式的选择，因此，为了加快运算速度，我们可以首先通过加入<code>noquad</code>选项，只对协变量的一阶形式进行筛选，当一阶形式选定后，将其作为解释变量放入基准模型中，然后加入<code>nolin</code> 选项跳过一阶形式筛选步骤，只对协变量的二阶形式进行筛选。具体操作如下。</p><p>首先，加入入<code>noquad</code>选项，只筛选协变量的一阶形式，如下：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use "nswre74.dta", clearpsestimate treat ed, totry(age black hisp nodeg) noquad<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​</p><pre><code>Selecting first order covariates... (10)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 ...s..s..Selected first order covariates are: nodeg hispFinal model is: ed nodeg hisp</code></pre><p>然后，将选定的<strong>ed</strong>、<strong>nodeg</strong>、<strong>hisp</strong>作为解释变量放入基准模型中，加入<code>nolin</code>选项值进行二阶形式的筛选，操作如下：。</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psestimate treat ed nodeg hisp , totry(age black hisp nodeg) nolin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Selecting second order covariates... (21)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 .....s.....Selected second order covariates are: c.nodeg#c.edFinal model is: ed nodeg hisp  c.nodeg#c.ed</code></pre><h3 id="psestimate-的核心思想">psestimate 的核心思想</h3><p> </p><h4 id="协变量一阶形式的选择">协变量一阶形式的选择</h4><p>第一步，该程序首先在基准模型（<code>logit treat ed</code>）基础上通过循环分别加入 <code>totry()</code> 中指定的四个变量 <strong>age</strong>、<strong>black</strong>、<strong>hisp</strong>、<strong>nodeg</strong>，进行四次模型估计，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">logit treat ed agelogit treat ed blacklogit treat ed hisplogit treat ed nodeg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>每次估计完成后，它将得到的新的极大似然值与基准模型比较，选择上述四个模型中对数极大似然值 (Log-Likelihood, 简称 LL 值) 最大的模型中的协变量放入基准模型中，除非上述四个模型的极大似然值都低于 <code>clinear(real)</code> 中指定的门槛值。若此处假设为 <strong>nodeg</strong>，则基准模型扩展为 <code>logit treat ed nodeg</code>, 然后第二步，它将估计如下模型：</p><pre class="line-numbers language-none"><code class="language-none">logit treat ed nodeg agelogit treat ed nodeg blacklogit treat ed nodeg hisp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这一步的协变量筛选原则与第一b步相同。可以看出，当供选择的协变量数量为<span class="math inline">\(C\)</span>时，在确定协变量的一阶形式时，该程序理论上会估计<span class="math inline">\(\sum C\)</span> 个 Logit 模型。本例中有 4 个供选择的协变量，则需要估计 10 次（如下括号中所示），该命令选择的协变量一阶形式结果如下：</p><pre class="line-numbers language-none"><code class="language-none">Selecting first order covariates... (10)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 ...s..s..Selected first order covariates are: nodeg hisp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> </p><h4 id="协变量二阶形式的选择">协变量二阶形式的选择</h4><p>在协变量二阶形式的选择上，主要分为协变量平方项以及协变量间的交乘项。 如果在一阶形式中只选择了 <strong>a</strong> 这一个协变量，则二阶形式的选择只需要检验 <strong>a^2</strong> 这一变量。但是如果有 <strong>a</strong>、<strong>b</strong> 两个一阶协变量被选择，则二阶形式的选择需要检验 <strong>a<sup>2<strong>、</strong>b</sup>2</strong>、<strong>ab</strong> 三个二阶协变量形式。具体到本例，确定的一阶协变量有 <strong>ed</strong>、<strong>nodeg</strong>、<strong>hisp</strong> 三个，则需要检验的二阶协变量有六个，即 <strong>ed<sup>2<strong>、</strong>nodeg</sup>2</strong>、<strong>hisp^2</strong>、<strong>c.ed#c.nodeg</strong>、<strong>c.ed#c.hisp</strong>、<strong>c.nodeg#c.hisp</strong>，筛选过程与选择协变量一阶形式的方法一致。因此本例中共需估计 即 21 次（如下括号中所示），结果如下所示：</p><pre class="line-numbers language-none"><code class="language-none">Selecting second order covariates... (21)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 .....s.....Selected second order covariates are: c.nodeg#c.edFinal model is: ed nodeg hisp c.nodeg#c.ed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> </p><h4 id="流程图展示">流程图展示</h4><p>如下流程图可以更加直观地展现<code>psestimate</code>筛选协变量一阶及二阶形式的过程，为简化分析，我们可供选择的协变量为<strong>a</strong>、<strong>b</strong>两个变量，假设各模型的对数极大似然值存在如下大小关系，LL1&gt;LL2&gt; <code>clinear()</code> &gt;LL3,LL4&gt;LL5&gt;LL6&gt; <code>cquadratic()</code> &gt;LL7&gt;LL8。</p><figure><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/17510288-32214398557f861a.png" alt=""><figcaption>图1.流程图</figcaption></figure><h3 id="psm估计的完整流程示例">PSM估计的完整流程示例</h3><p> </p><h4 id="psestimate-筛选匹配变量的一阶二阶形式">psestimate 筛选匹配变量的一阶、二阶形式</h4><p>第一步，使用<code>psestimate</code>筛选匹配变量</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use "nswre74.dta", clearpsestimate treat ed, totry(age black hisp nodeg) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​</p><pre><code>Selecting first order covariates... (10)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 ...s..s..Selected first order covariates are: nodeg hispSelecting second order covariates... (21)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 .....s.....Selected second order covariates are: c.nodeg#c.edFinal model is: ed nodeg hisp c.nodeg#c.ed</code></pre><p>最终选择的匹配变量为<strong>ed</strong>、<strong>nodeg</strong>、<strong>hisp</strong>、<strong>c.nodeg#c.ed</strong></p><h4 id="psmatch2-基于筛选出的匹配变量进行psm匹配">psmatch2 基于筛选出的匹配变量进行PSM匹配</h4><p>基于上述匹配变量进行PSM匹配：</p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2 treat ed nodeg hisp c.nodeg#c.ed, logit ate neighbor(1) common caliper(.05) ties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Logistic regression                             Number of obs     =        445                                                LR chi2(4)        =      17.03                                                Prob &gt; chi2       =     0.0019Log likelihood = -293.58317                     Pseudo R2         =     0.0282------------------------------------------------------------------------------       treat |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------          ed |   .5093428   .3298117     1.54   0.123    -.1370762    1.155762       nodeg |   6.506319   4.112404     1.58   0.114    -1.553845    14.56648        hisp |  -.5954105   .3754841    -1.59   0.113    -1.331346    .1405248             |c.nodeg#c.ed |  -.6068825   .3375387    -1.80   0.072    -1.268446    .0546813             |       _cons |  -6.021438    4.05441    -1.49   0.138    -13.96794    1.925059------------------------------------------------------------------------------</code></pre><h4 id="pstest-进行平衡性假设检验">pstest 进行平衡性假设检验</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pstest ed nodeg hisp c.nodeg#c.ed, t(treat)  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>------------------------------------------------------------------------------                        |       Mean               |     t-test    |  V(T)/Variable                | Treated Control    %bias |    t    p&gt;|t| |  V(C)------------------------+--------------------------+---------------+----------ed                      |  10.29   10.464     -9.6 |  -0.91  0.363 |  1.28nodeg                   | .71585   .69399      5.3 |   0.46  0.648 |     .hisp                    | .06011   .06011     -0.0 |  -0.00  1.000 |     .c.nodeg#c.ed            | 6.7814    6.694      2.1 |   0.18  0.854 |  0.96------------------------------------------------------------------------------* if variance ratio outside [0.75; 1.34]----------------------------------------------------------------------Ps R2   LR chi2   p&gt;chi2   MeanBias   MedBias      B       R     %Var ----------------------------------------------------------------------0.002      1.09    0.896      4.2       3.7      10.8    1.43       0----------------------------------------------------------------------* if B&gt;25%, R outside [0.5; 2]</code></pre><h4 id="psgraph-绘图直观呈现各匹配变量的平衡性状况">psgraph 绘图直观呈现各匹配变量的平衡性状况</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psgraph<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>图中也可以直观看出，实验组与控制组的倾向得分值分布大致平衡。</p></blockquote><h4 id="参考文献">参考文献</h4><ol type="1"><li>Dehejia, Rajeev H. and Sadek Wahba. 1999. "Causal Effects in Nonexperimental Studies". Journal of the American Statistical Association 94(448): 1053-1062.</li><li>Imbens, Guido W. and Donald B. Rubin. 2015. Causal Inference in Statistics, Social, and Biomedical Sciences. New York: Cambridge University Press.</li><li>Imbens, Guido W. 2015. “Matching Methods in Practice: Three Examples.” Journal of Human Resources 50 (2): 373–419. [<a href="https://www.sci-hub.shop/10.3368/jhr.50.2.373">PDF1]</a>， [<a href="https://pdfs.semanticscholar.org/975a/9905a091498d9878ebcd42cb01eff7e02e8d.pdf?_ga=2.17924345.130556769.1557067739-533034284.1555775018">PDF2-wp]</a></li><li>LaLonde, Robert J. 1986. “Evaluating the Econometric Evaluations of Training Programs with Experimental Data.” The American Economic Review 76 (4): 604–20. [<a href="http://www.uh.edu/~adkugler/Lalonde.pdf">PDF]</a></li></ol><h2 id="psm-did在stata中的实现过程代码">PSM-DID在Stata中的实现过程代码</h2><h3 id="数据准备">数据准备</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">use nlswork.dta,clear<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>(National Longitudinal Survey.  Young Women 14-26 years of age in 1968)</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">xtset idcode year, delta(1)  //设置面板xtdescribe   //描述一下这个面板数据情况<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>       panel variable:  idcode (unbalanced)        time variable:  year, 68 to 88, but with gaps                delta:  1 unit</code></pre><p>​</p><pre><code>  idcode:  1, 2, ..., 5159                                   n =       4711    year:  68, 69, ..., 88                                   T =         15           Delta(year) = 1 unit           Span(year)  = 21 periods           (idcode*year uniquely identifies each observation)Distribution of T_i:   min      5%     25%       50%       75%     95%     max                         1       1       3         5         9      13      15     Freq.  Percent    Cum. |  Pattern ---------------------------+-----------------------      136      2.89    2.89 |  1....................      114      2.42    5.31 |  ....................1       89      1.89    7.20 |  .................1.11       87      1.85    9.04 |  ...................11       86      1.83   10.87 |  111111.1.11.1.11.1.11       61      1.29   12.16 |  ..............11.1.11       56      1.19   13.35 |  11...................       54      1.15   14.50 |  ...............1.1.11       54      1.15   15.64 |  .......1.11.1.11.1.11     3974     84.36  100.00 | (other patterns) ---------------------------+-----------------------     4711    100.00         |  XXXXXX.X.XX.X.XX.X.XX</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">gen age2= age^2gen ttl_exp2=ttl_exp^2gen tenure2=tenure^2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>(24 missing values generated)</code></pre><p>​</p><pre><code>(433 missing values generated)</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">global xlist "grade age age2 ttl_exp ttl_exp2 tenure tenure2 not_smsa south race"sum ln_w $xlist  //统计描述相关变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​<br>​</p><pre><code>    Variable |        Obs        Mean    Std. Dev.       Min        Max-------------+---------------------------------------------------------     ln_wage |     28,534    1.674907    .4780935          0   5.263916       grade |     28,532    12.53259    2.323905          0         18         age |     28,510    29.04511    6.700584         14         46        age2 |     28,510    888.5145    403.6554        196       2116     ttl_exp |     28,534    6.215316    4.652117          0   28.88461-------------+---------------------------------------------------------    ttl_exp2 |     28,534    60.27159    80.33339          0    834.321      tenure |     28,101    3.123836    3.751409          0   25.91667     tenure2 |     28,101    23.83092    54.75053          0   671.6736    not_smsa |     28,526    .2824441    .4501961          0          1       south |     28,526    .4095562    .4917605          0          1-------------+---------------------------------------------------------        race |     28,534    1.303392    .4822773          1          3</code></pre><h3 id="did方法">DID方法</h3><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">gen time = (year &gt;= 77) &amp; !missing(year)  //政策执行时间为1977年gen treated = (idcode &gt;2000)&amp;!missing(idcode) //政策执行地方为idcode大于2000的地方gen did = time*treated  //这就是需要估计的DID，也就所交叉项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">reg ln_w did time treated $xlist //这就是一个OLS回归，也可以用diff命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>      Source |       SS           df       MS      Number of obs   =    28,091-------------+----------------------------------   F(13, 28077)    =   1295.76       Model |  2405.08413        13  185.006471   Prob &gt; F        =    0.0000    Residual |  4008.77975    28,077  .142778066   R-squared       =    0.3750-------------+----------------------------------   Adj R-squared   =    0.3747       Total |  6413.86388    28,090  .228332641   Root MSE        =    .37786------------------------------------------------------------------------------     ln_wage |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------         did |   .0124603   .0094099     1.32   0.185    -.0059836    .0309042        time |  -.0694754   .0097324    -7.14   0.000    -.0885513   -.0503996     treated |  -.0142815   .0078374    -1.82   0.068    -.0296431    .0010801       grade |   .0633445   .0010293    61.54   0.000      .061327     .065362         age |   .0484968   .0036834    13.17   0.000     .0412771    .0557165        age2 |  -.0008259   .0000583   -14.18   0.000    -.0009401   -.0007117     ttl_exp |   .0250849    .002395    10.47   0.000     .0203906    .0297793    ttl_exp2 |   .0002872   .0001266     2.27   0.023      .000039    .0005353      tenure |   .0460783    .001968    23.41   0.000     .0422209    .0499356     tenure2 |  -.0019604   .0001341   -14.62   0.000    -.0022233   -.0016976    not_smsa |  -.1686808   .0051713   -32.62   0.000    -.1788169   -.1585447       south |  -.1017625   .0055672   -18.28   0.000    -.1126745   -.0908504        race |  -.0528909   .0049329   -10.72   0.000    -.0625597   -.0432221       _cons |   .1400083   .0535917     2.61   0.009     .0349661    .2450506------------------------------------------------------------------------------</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">xtreg ln_w did time treated $xlist i.year, fe //也可以这去做，会省略掉一个虚拟变量<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>note: treated omitted because of collinearitynote: grade omitted because of collinearitynote: race omitted because of collinearitynote: 88.year omitted because of collinearityFixed-effects (within) regression               Number of obs     =     28,091Group variable: idcode                          Number of groups  =      4,697R-sq:                                           Obs per group:     within  = 0.1781                                         min =          1     between = 0.3576                                         avg =        6.0     overall = 0.2666                                         max =         15                                                F(23,23371)       =     220.25corr(u_i, Xb)  = 0.1840                         Prob &gt; F          =     0.0000------------------------------------------------------------------------------     ln_wage |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------         did |    .019761    .008746     2.26   0.024     .0026182    .0369037        time |  -.3296955   .2012367    -1.64   0.101    -.7241326    .0647416     treated |          0  (omitted)       grade |          0  (omitted)         age |   .0665613   .0105138     6.33   0.000     .0459536    .0871689        age2 |  -.0009369   .0000616   -15.20   0.000    -.0010577    -.000816     ttl_exp |   .0392161    .003072    12.77   0.000     .0331947    .0452375    ttl_exp2 |  -.0001047   .0001352    -0.77   0.439    -.0003697    .0001603      tenure |   .0338566   .0018579    18.22   0.000     .0302151    .0374981     tenure2 |  -.0018164    .000126   -14.42   0.000    -.0020633   -.0015695    not_smsa |   -.086641   .0095117    -9.11   0.000    -.1052846   -.0679974       south |  -.0597302   .0109246    -5.47   0.000    -.0811431   -.0383173        race |          0  (omitted)             |        year |         69  |   .0423343    .015528     2.73   0.006     .0118984    .0727702         70  |  -.0339863    .022938    -1.48   0.138    -.0789464    .0109737         71  |  -.0299658   .0318704    -0.94   0.347     -.092434    .0325023         72  |  -.0584678   .0412716    -1.42   0.157    -.1393627    .0224272         73  |  -.0961513   .0508379    -1.89   0.059     -.195797    .0034943         75  |  -.1513149   .0698104    -2.17   0.030    -.2881479   -.0144818         77  |   .1558488   .1129486     1.38   0.168    -.0655379    .3772354         78  |   .1417381   .1027217     1.38   0.168    -.0596031    .3430793         80  |   .0826885   .0834407     0.99   0.322    -.0808607    .2462377         82  |   .0268096   .0638067     0.42   0.674    -.0982557     .151875         83  |   .0103961    .054166     0.19   0.848    -.0957727     .116565         85  |    .007777   .0347411     0.22   0.823    -.0603178    .0758717         87  |  -.0223798   .0162763    -1.37   0.169    -.0542825    .0095229         88  |          0  (omitted)             |       _cons |   .5038214   .1945871     2.59   0.010     .1224179    .8852249-------------+----------------------------------------------------------------     sigma_u |   .3532234     sigma_e |   .2898202         rho |  .59764928   (fraction of variance due to u_i)------------------------------------------------------------------------------F test that all u_i=0: F(4696, 23371) = 6.58                 Prob &gt; F = 0.0000</code></pre><h3 id="psm-did方法">PSM-DID方法</h3><h4 id="psm的部分">PSM的部分</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">set seed 0001 //定义种子gen tmp = runiform() //生成随机数sort tmp //把数据库随机整理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">psmatch2 treated $xlist, out(ln_w) logit ate neighbor(1) common caliper(.05) ties //通过近邻匹配，这里可以要outcome，也可以不要它<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>Logistic regression                             Number of obs     =     28,091                                                LR chi2(10)       =   10093.80                                                Prob &gt; chi2       =     0.0000Log likelihood =  -13636.63                     Pseudo R2         =     0.2701------------------------------------------------------------------------------     treated |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]-------------+----------------------------------------------------------------       grade |  -.0342869   .0070082    -4.89   0.000    -.0480227   -.0205511         age |   .1726049   .0227237     7.60   0.000     .1280673    .2171424        age2 |  -.0026816   .0003693    -7.26   0.000    -.0034054   -.0019577     ttl_exp |  -.0681925   .0155242    -4.39   0.000    -.0986193   -.0377657    ttl_exp2 |   .0040423   .0008363     4.83   0.000     .0024031    .0056815      tenure |  -.0138884   .0128354    -1.08   0.279    -.0390453    .0112686     tenure2 |   .0002263   .0008671     0.26   0.794    -.0014733    .0019259    not_smsa |   .4024444   .0355904    11.31   0.000     .3326885    .4722002       south |   2.865226   .0409688    69.94   0.000     2.784928    2.945523        race |   .7655284    .034012    22.51   0.000     .6988662    .8321907       _cons |  -3.400584   .3254663   -10.45   0.000    -4.038487   -2.762682--------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; --------        Variable     Sample |    Treated     Controls   Difference         S.E. &gt;   T-stat----------------------------+---------------------------------------------------&gt; --------         ln_wage  Unmatched | 1.62754443   1.75722818  -.129683748   .005816206 &gt;   -22.30                        ATT | 1.62798811   1.70873922  -.080751107   .021132148 &gt;    -3.82                        ATU | 1.75707925   1.75230645  -.004772802            . &gt;        .                        ATE |                          -.051698588            . &gt;        .----------------------------+---------------------------------------------------&gt; --------Note: S.E. does not take into account that the propensity score is estimated. psmatch2: |   psmatch2: Common Treatment |        supportassignment | Off suppo  On suppor |     Total-----------+----------------------+---------- Untreated |         2     10,733 |    10,735    Treated |        20     17,336 |    17,356 -----------+----------------------+----------     Total |        22     28,069 |    28,091 </code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">pstest $xlist, both graph  //检验协变量在处理组与控制组之间是否平衡<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>--------------------------------------------------------------------------------&gt; --------                Unmatched |       Mean               %reduct |     t-test    |  &gt; V(T)/Variable          Matched | Treated Control    %bias  |bias| |    t    p&gt;|t| |  &gt; V(C)--------------------------+----------------------------------+---------------+--&gt; --------grade                  U  | 12.341   12.853    -22.3         | -18.01  0.000 |  &gt; 1.18*                       M  | 12.348   12.645    -12.9    42.1 | -12.03  0.000 |  &gt; 1.15*                          |                                  |               |age                    U  | 29.223   28.848      5.6         |   4.56  0.000 |  &gt; 0.94*                       M  | 29.216   30.875    -24.7  -342.5 | -23.65  0.000 |  &gt; 1.05*                          |                                  |               |age2                   U  |  897.8   878.68      4.7         |   3.86  0.000 |  &gt; 0.95*                       M  | 897.33   994.81    -24.1  -409.7 | -22.80  0.000 |  &gt; 1.01                          |                                  |               |ttl_exp                U  | 6.2403   6.2447     -0.1         |  -0.08  0.938 |  &gt; 1.05*                       M  | 6.2334   6.9942    -16.4-17031.2 | -14.80  0.000 |  &gt; 0.92*                          |                                  |               |ttl_exp2               U  | 61.008   60.008      1.2         |   1.01  0.312 |  &gt; 1.03                       M  | 60.849   72.756    -14.8 -1090.6 | -12.91  0.000 |  &gt; 0.79*                          |                                  |               |tenure                 U  | 3.0891   3.1782     -2.4         |  -1.93  0.053 |  &gt; 0.96*                       M  | 3.0899   2.9777      3.0   -25.9 |   2.87  0.004 |  &gt; 1.10*                          |                                  |               |tenure2                U  |  23.41   24.482     -1.9         |  -1.60  0.110 |  &gt; 0.90*                       M  | 23.423   21.518      3.5   -77.7 |   3.41  0.001 |  &gt; 1.14*                          |                                  |               |not_smsa               U  | .32945   .20689     27.9         |  22.36  0.000 |  &gt;    .                       M  | .32897   .32066      1.9    93.2 |   1.65  0.099 |  &gt;    .                          |                                  |               |south                  U  |   .618   .07219    140.2         | 107.35  0.000 |  &gt;    .                       M  | .61756   .61802     -0.1    99.9 |  -0.09  0.930 |  &gt;    .                          |                                  |               |race                   U  | 1.3912   1.1631     50.3         |  39.53  0.000 |  &gt; 1.91*                       M  | 1.3896   1.3763      2.9    94.2 |   2.43  0.015 |  &gt; 1.05*                          |                                  |               |--------------------------------------------------------------------------------&gt; --------* if variance ratio outside [0.97; 1.03] for U and [0.97; 1.03] for M--------------------------------------------------------------------------------&gt; --- Sample    | Ps R2   LR chi2   p&gt;chi2   MeanBias   MedBias      B      R     %Va&gt; r-----------+--------------------------------------------------------------------&gt; --- Unmatched | 0.272  10149.10    0.000     25.7       5.2     145.8*   3.70*    8&gt; 8 Matched   | 0.019    932.83    0.000     10.4       8.2      33.1*   1.16     8&gt; 8--------------------------------------------------------------------------------&gt; ---* if B&gt;25%, R outside [0.5; 2]</code></pre><p><img src="https://gitee.com/shao818/Figure/raw/master/null/Graph111.png"></p><p>psgraph 绘图直观呈现各匹配变量的平衡性状况</p><p><img src="https://gitee.com/shao818/Figure/raw/master/null/Graph4444.png"></p><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">gen common=_supportdrop if common == 0  //去掉不满足共同区域假定的观测值*drop _weight ==0  //也有情况是把没有匹配的直接删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>(443 missing values generated)(22 observations deleted)</code></pre><h4 id="did的部分">DID的部分</h4><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">reg ln_w did time treated $xlist <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>      Source |       SS           df       MS      Number of obs   =    28,069-------------+----------------------------------   F(13, 28055)    =   1294.85       Model |  2402.32966        13  184.794589   Prob &gt; F        =    0.0000    Residual |   4003.8761    28,055  .142715241   R-squared       =    0.3750-------------+----------------------------------   Adj R-squared   =    0.3747       Total |  6406.20576    28,068  .228238769   Root MSE        =    .37778------------------------------------------------------------------------------     ln_wage |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------         did |   .0130378   .0094101     1.39   0.166    -.0054064    .0314821        time |   -.069613   .0097317    -7.15   0.000    -.0886876   -.0505384     treated |  -.0145157    .007837    -1.85   0.064    -.0298765    .0008452       grade |   .0635306   .0010326    61.53   0.000     .0615067    .0655545         age |   .0487295   .0036856    13.22   0.000     .0415054    .0559535        age2 |  -.0008306   .0000583   -14.24   0.000    -.0009449   -.0007163     ttl_exp |   .0246821   .0023991    10.29   0.000     .0199798    .0293843    ttl_exp2 |   .0003217   .0001271     2.53   0.011     .0000726    .0005708      tenure |   .0461767   .0019693    23.45   0.000     .0423168    .0500365     tenure2 |  -.0019786   .0001343   -14.73   0.000    -.0022419   -.0017154    not_smsa |  -.1681968   .0051738   -32.51   0.000    -.1783376    -.158056       south |   -.101765   .0055661   -18.28   0.000    -.1126748   -.0908551        race |  -.0534454   .0049452   -10.81   0.000    -.0631381   -.0437526       _cons |   .1361316   .0536086     2.54   0.011     .0310562    .2412069------------------------------------------------------------------------------</code></pre><pre class="line-numbers language-stata" data-language="stata"><code class="language-stata">xtreg ln_w did time treated $xlist i.year, fe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>note: treated omitted because of collinearitynote: grade omitted because of collinearitynote: race omitted because of collinearitynote: 88.year omitted because of collinearityFixed-effects (within) regression               Number of obs     =     28,069Group variable: idcode                          Number of groups  =      4,696R-sq:                                           Obs per group:     within  = 0.1782                                         min =          1     between = 0.3585                                         avg =        6.0     overall = 0.2678                                         max =         15                                                F(23,23350)       =     220.19corr(u_i, Xb)  = 0.1861                         Prob &gt; F          =     0.0000------------------------------------------------------------------------------     ln_wage |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]-------------+----------------------------------------------------------------         did |   .0199922   .0087501     2.28   0.022     .0028414     .037143        time |  -.3259785   .2014472    -1.62   0.106    -.7208281    .0688712     treated |          0  (omitted)       grade |          0  (omitted)         age |   .0664258   .0105214     6.31   0.000     .0458031    .0870485        age2 |  -.0009367   .0000617   -15.18   0.000    -.0010576   -.0008158     ttl_exp |   .0388635   .0030813    12.61   0.000     .0328238    .0449031    ttl_exp2 |  -.0000845   .0001359    -0.62   0.534    -.0003508    .0001819      tenure |   .0339768   .0018608    18.26   0.000     .0303295    .0376241     tenure2 |  -.0018292   .0001263   -14.48   0.000    -.0020768   -.0015817    not_smsa |  -.0865921   .0095179    -9.10   0.000    -.1052478   -.0679365       south |  -.0600416   .0109379    -5.49   0.000    -.0814807   -.0386026        race |          0  (omitted)             |        year |         69  |   .0425357   .0155411     2.74   0.006     .0120741    .0729974         70  |  -.0332855   .0229601    -1.45   0.147    -.0782887    .0117178         71  |  -.0290703    .031901    -0.91   0.362    -.0915985    .0334578         72  |  -.0573452   .0413132    -1.39   0.165    -.1383217    .0236314         73  |  -.0947357   .0508901    -1.86   0.063    -.1944837    .0050123         75  |  -.1496357   .0698826    -2.14   0.032    -.2866102   -.0126612         77  |   .1540973   .1130656     1.36   0.173    -.0675187    .3757134         78  |    .140131   .1028285     1.36   0.173    -.0614196    .3416817         80  |    .081445   .0835287     0.98   0.330    -.0822767    .2451668         82  |   .0260429   .0638735     0.41   0.683    -.0991533     .151239         83  |   .0097373   .0542219     0.18   0.857    -.0965412    .1160159         85  |    .007336   .0347776     0.21   0.833    -.0608304    .0755023         87  |  -.0225526   .0162929    -1.38   0.166    -.0544878    .0093826         88  |          0  (omitted)             |       _cons |   .5068104   .1947252     2.60   0.009     .1251361    .8884847-------------+----------------------------------------------------------------     sigma_u |   .3531224     sigma_e |  .28988636         rho |  .59740195   (fraction of variance due to u_i)------------------------------------------------------------------------------F test that all u_i=0: F(4695, 23350) = 6.56                 Prob &gt; F = 0.0000</code></pre></font></font>]]></content>
      
      
      <categories>
          
          <category> 计量经济学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计量经济学 </tag>
            
            <tag> PSM </tag>
            
            <tag> 倾向得分匹配法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据科学</title>
      <link href="posts/734154334/"/>
      <url>posts/734154334/</url>
      
        <content type="html"><![CDATA[<h1 id="数据科学2">数据科学2</h1><h2 id="列表list">列表（list）</h2><p>列表，可以包含不同类型的对象，甚至可以包括其他列表。列表的灵活性使得它 非常有用。</p><p>例如，用 R 拟合一个线性回归模型，其返回结果就是一个列表，其中包含了线性 回归的详细结果，如线性回归系数（数值向量）、残差（数值向量）、QR 分解 （包含一个矩阵和其他对象的列表）等。因为这些结果全都被打包到一个列表 中，就可以很方便地提取所需信息，而无需每次调用不同的函数。</p><h3 id="创建列表">创建列表</h3><p>可以用函数<code>list()</code>创建列表。不同类型的对象可以被装进同一个列表中。 例如，创建了一个列表，包含 3 个成分：一个单元素的数值向量、一个两元素的 逻辑向量和一个长度为 3 的字符向量：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l0 <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>l0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## [[1]]## [1] 1## ## [[2]]## [1]  TRUE FALSE## ## [[3]]## [1] "a" "b" "c"</code></pre><p>可以在创建列表时，为列表的每个成分指定名称：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1 <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">,</span> z <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>l1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## $x## [1] 1## ## $y## [1]  TRUE FALSE## ## $z## [1] "a" "b" "c"</code></pre><p>也可以创建列表后再对列表成分命名或修改命名：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">names<span class="token punctuation">(</span>l1<span class="token punctuation">)</span> <span class="token operator">&lt;-</span> <span class="token keyword">NULL</span> <span class="token comment"># 移除列表成分的名字</span>names<span class="token punctuation">(</span>l1<span class="token punctuation">)</span> <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span><span class="token string">"B"</span><span class="token punctuation">,</span><span class="token string">"C"</span><span class="token punctuation">)</span>l1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>## $A## [1] 1## ## $B## [1]  TRUE FALSE## ## $C## [1] "a" "b" "c"</code></pre><h3 id="从列表中提取成分下的元素">从列表中提取成分下的元素</h3><p>提取列表中成分下的元素，最常用的方法是用<code>$</code>，通过成分名称来提取该成分下 的元素（内容）：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token operator">$</span>B<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## [1]  TRUE FALSE</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token operator">$</span>m <span class="token comment"># 访问不存在的成分m, 将会返回NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## NULL</code></pre><p>也可以用 [[n]] 来提取列表第 n 个成分的元素，n 也可以换成成分的名字：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment"># 同l1[["B"]]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## [1]  TRUE FALSE</code></pre><p>使用 [[]] 提取列表中某个成分的元素更加灵活，因为可以用变量传递想要提取其 元素的成分名字（用于函数调用)：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">member <span class="token operator">&lt;-</span> <span class="token string">"B"</span> <span class="token comment">#想要取出的成分名字</span>l1<span class="token punctuation">[</span><span class="token punctuation">[</span>member<span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## [1]  TRUE FALSE</code></pre><h3 id="构建列表子集">构建列表子集</h3><p>经常也需要从列表中提取多个成分的元素，由这些成分组成的列表构成了原列表 的一个子集。</p><p>就像构建向量和矩阵的子集一样，构建一个列表子集是用<code>[]</code>，可以取出列表中的 一些成分，然后放到一个新的列表中。<br><code>[]</code>中可以用字符向量表示成分名称，用数值向量表示成分位置，或用逻辑向量指 定是否选择，来取出列表成分。</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token punctuation">[</span><span class="token string">"A"</span><span class="token punctuation">]</span> <span class="token comment"># 同l1[1]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## $A## [1] 1</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token punctuation">[</span>c<span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># 同l1[c(1, 2)]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## $A## [1] 1## ## $B## [1]  TRUE FALSE</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token punctuation">[</span>c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## $A## [1] 1## ## $C## [1] "a" "b" "c"</code></pre><p>注意： 用<code>[]</code>提取若干成分时，返回列表的子集，还是一个列表；用<code>[[ ]]</code> 提取单个成分的元素，返回的是对应成分的元素。总之，<code>[]</code>提取对象的子集，类型仍是该对象；[[]] 提取对象的内容（下一级元素）。</p><h3 id="对列表的成分赋值">对列表的成分赋值</h3><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1 <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">,</span> z <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>l1<span class="token operator">$</span>x <span class="token operator">&lt;-</span> <span class="token number">0</span> <span class="token punctuation">;</span>l1<span class="token comment"># 将列表的成分x赋值为0;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## $x## [1] 0## ## $y## [1]  TRUE FALSE## ## $z## [1] "a" "b" "c"</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token operator">$</span>m <span class="token operator">&lt;-</span> <span class="token number">4</span>l1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## $x## [1] 0## ## $y## [1]  TRUE FALSE## ## $z## [1] "a" "b" "c"## ## $m## [1] 4</code></pre><p>也可以同时给多个列表成分赋值：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token punctuation">[</span>c<span class="token punctuation">(</span><span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token string">"new value for y"</span><span class="token punctuation">,</span> z <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>l1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## $x## [1] 0## ## $y## [1] "new value for y"## ## $z## [1] 1 2## ## $m## [1] 4</code></pre><p>若要移除列表中的某些成分，只需赋值为 NULL：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1<span class="token punctuation">[</span>c<span class="token punctuation">(</span><span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token string">"m"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&lt;-</span> <span class="token keyword">NULL</span>l1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## $x## [1] 0## ## $y## [1] "new value for y"</code></pre><h3 id="列表函数">列表函数</h3><p>用函数 <code>as.list()</code> 可将向量转换成列表：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l3 <span class="token operator">&lt;-</span> as.list<span class="token punctuation">(</span>c<span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>l3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## $a## [1] 1## ## $b## [1] 2## ## $c## [1] 3</code></pre><p>用函数<code>unlist()</code>，可将一个列表强制转换成一个向量。该函数基本上对所有列表 成分进行转换，并把它们存储在一个类型兼容的向量中：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">unlist<span class="token punctuation">(</span>l3<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## a b c ## 1 2 3</code></pre><p>若对一个混合了数值和文本的列表进行去列表化（<code>unlist</code>），则每个成分都会被 转换为其所能转换成的最近类型（<code>closest type</code>）：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">l4 <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">)</span>unlist<span class="token punctuation">(</span>l4<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>##       a       b       c ##     "1"     "2" "hello"</code></pre><p>注： 这里的<code>l4$a</code> 和<code>l4$b</code>都是数值，可以被转换为字符向量；但是，<code>l4$c</code> 是字符向量，无法被转换为数值。因此，能够兼容这些元素的最近类型就是字符向量。</p><p>函数 summary() 可以查看列表的汇总信息：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">summary<span class="token punctuation">(</span>l0<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>##      Length Class  Mode     ## [1,] 1      -none- numeric  ## [2,] 2      -none- logical  ## [3,] 3      -none- character</code></pre><h2 id="数据框数据表">数据框（数据表）</h2><p>R语言中做统计分析的样本数据，都是按数据框类型操作的。</p><p>数据框是指有若干行和列的数据集，它与矩阵类似，但并不要求所有列都是相同 的类型；本质上讲，数据框就是一个列表，它的每个成分都是一个向量，并且长 度相同，以表格的形式展现。总之，数据框是由列向量组成、有着矩阵形式的列 表。</p><p>数据框与最常见的数据表是一致的：每一列代表一个变量属性，每一行代表一条 样本数据：</p><p>R 中自带的数据框是 <code>data.frame</code>，建议改用更现代的数据框：<code>tibble</code> Hadley 在 <code>tibble</code> 包中引入一种 <code>tibble</code> 数据框，以代替 <code>data.frame</code>；而且 <code>tidyverse</code> 包都是基于 <code>tibble</code> 数据框。 <code>tibble</code> 比 <code>data.frame</code> 的优势： - <code>tibble()</code> 比 <code>data.frame()</code> 做的更少：不改变输入变量的类型（不会默认将字 符串转化为因子！），不会改变变量名，不会创建行名； - <code>tibble</code> 对象的列名可以是 <code>R</code> 中的“非法名”：非字母开头、包含空格，但定义 和使用变量时都需要用倒引号 <code>括起来； -</code>tibble<code>在输出时不自动显示所有行，避免大数据框时显示很多内容； 用</code>[]<code>选取列子集时，即使仅取一列，返回结果仍是</code>tibble`，而不是向量。</p><h3 id="创建数据框">创建数据框</h3><h4 id="用-tibble-根据若干列向量创建-tibble">用 <code>tibble()</code> 根据若干列向量创建 <code>tibble</code></h4><pre class="line-numbers language-r" data-language="r"><code class="language-r">library<span class="token punctuation">(</span>tibble<span class="token punctuation">)</span>persons <span class="token operator">&lt;-</span> tibble<span class="token punctuation">(</span> Name <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Ken"</span><span class="token punctuation">,</span> <span class="token string">"Ashley"</span><span class="token punctuation">,</span> <span class="token string">"Jennifer"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Gender <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Male"</span><span class="token punctuation">,</span> <span class="token string">"Female"</span><span class="token punctuation">,</span> <span class="token string">"Female"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Age <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Major <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Finance"</span><span class="token punctuation">,</span> <span class="token string">"Statistics"</span><span class="token punctuation">,</span> <span class="token string">"Computer Science"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>persons<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>## # A tibble: 3 x 4##   Name     Gender   Age Major           ##   &lt;chr&gt;    &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;           ## 1 Ken      Male      24 Finance         ## 2 Ashley   Female    25 Statistics      ## 3 Jennifer Female    23 Computer Science</code></pre><h4 id="用-tribble按行录入数据式创建-tibble">用 <code>tribble()</code>按行录入数据式创建 <code>tibble</code></h4><pre class="line-numbers language-r" data-language="r"><code class="language-r">tribble<span class="token punctuation">(</span> <span class="token operator">~</span>Name<span class="token punctuation">,</span> <span class="token operator">~</span>Gender<span class="token punctuation">,</span> <span class="token operator">~</span>Age<span class="token punctuation">,</span> <span class="token operator">~</span>Major<span class="token punctuation">,</span> <span class="token string">"Ken"</span><span class="token punctuation">,</span> <span class="token string">"Male"</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token string">"Finance"</span><span class="token punctuation">,</span> <span class="token string">"Ashley"</span><span class="token punctuation">,</span> <span class="token string">"Female"</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string">"Statistics"</span><span class="token punctuation">,</span> <span class="token string">"Jennifer"</span><span class="token punctuation">,</span> <span class="token string">"Female"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">"Computer Science"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>## # A tibble: 3 x 4##   Name     Gender   Age Major           ##   &lt;chr&gt;    &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;           ## 1 Ken      Male      24 Finance         ## 2 Ashley   Female    25 Statistics      ## 3 Jennifer Female    23 Computer Science</code></pre><h4 id="用-as_tibble-将-data.frame-list-matrix-转换为-tibble">用 <code>as_tibble()</code> 将 <code>data.frame</code>, <code>list</code>, <code>matrix</code> 转换为 <code>tibble</code></h4><pre class="line-numbers language-r" data-language="r"><code class="language-r">as_tibble<span class="token punctuation">(</span>iris<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 150 x 5##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species##           &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  ##  1          5.1         3.5          1.4         0.2 setosa ##  2          4.9         3            1.4         0.2 setosa ##  3          4.7         3.2          1.3         0.2 setosa ##  4          4.6         3.1          1.5         0.2 setosa ##  5          5           3.6          1.4         0.2 setosa ##  6          5.4         3.9          1.7         0.4 setosa ##  7          4.6         3.4          1.4         0.3 setosa ##  8          5           3.4          1.5         0.2 setosa ##  9          4.4         2.9          1.4         0.2 setosa ## 10          4.9         3.1          1.5         0.1 setosa ## # ... with 140 more rows</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">l1 <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>x <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>as_tibble<span class="token punctuation">(</span>l1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## # A tibble: 3 x 2##       x y    ##   &lt;dbl&gt; &lt;chr&gt;## 1     1 a    ## 2     2 b    ## 3     3 c</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">m1 <span class="token operator">&lt;-</span> matrix<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nrow <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>as_tibble<span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## Warning: The `x` argument of `as_tibble.matrix()` must have column names if `.name_repair` is omitted as of tibble 2.0.0.## Using compatibility `.name_repair`.## This warning is displayed once every 8 hours.## Call `lifecycle::last_warnings()` to see where this warning was generated.## # A tibble: 3 x 3##      V1    V2    V3##   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;## 1     1     4     7## 2     2     5     8## 3     3     6     9</code></pre><p>数据框既是列表的特例，也是矩阵的推广，因此访问这两类对象的方式都适用于 数据框。例如与矩阵类似，对数据框的行列重新命名：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1 <span class="token operator">&lt;-</span> tibble<span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span> x <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  y <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>colnames<span class="token punctuation">(</span>df1<span class="token punctuation">)</span> <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"level"</span><span class="token punctuation">,</span> <span class="token string">"score"</span><span class="token punctuation">)</span>df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 3##      id level score##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;## 1     1     0   0.5## 2     2     2   0.2## 3     3     1   0.1## 4     4    -1   0.5</code></pre><p>另外，可用 <code>names()</code> 查看或修改数据框的列名</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">names<span class="token punctuation">(</span>df1<span class="token punctuation">)</span> <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">)</span>df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 3##       x     y     z##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;## 1     1     0   0.5## 2     2     2   0.2## 3     3     1   0.1## 4     4    -1   0.5</code></pre><h3 id="提取数据框的元素子集">提取数据框的元素、子集</h3><p>数据框是由列向量组成、有着矩阵形式的列表，所以可以用两种操作方式来访问 数据框的元素和子集。</p><h4 id="以列表方式提取数据框的元素子集">以列表方式提取数据框的元素、子集</h4><p>若把数据框看作是由向量组成的列表，则可以沿用列表的操作方式来提取元素或 构建子集。例如，可以用 <code>$</code> 按列名来提取某一列的值，或者用 <code>[[]]</code> 按照位置提 取。</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token operator">$</span>x <span class="token comment"># 同df1[[1]]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## [1] 1 2 3 4</code></pre><p>以列表形式构建子集完全适用于数据框，同时也会生成一个新的数据框。提取子 集的操作符<code>[]</code>允许用数值向量表示列的位置，用字符向量表示列名，或用逻辑向 量指定是否选择。</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># 同df1["x"]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 4 x 1##       x##   &lt;int&gt;## 1     1## 2     2## 3     3## 4     4</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># 同df1[c("x", "y")]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 4 x 2##       x     y##   &lt;int&gt; &lt;dbl&gt;## 1     1     0## 2     2     2## 3     3     1## 4     4    -1</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span>c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 4 x 2##       x     z##   &lt;int&gt; &lt;dbl&gt;## 1     1   0.5## 2     2   0.2## 3     3   0.1## 4     4   0.5</code></pre><h4 id="以矩阵方式提取数据框的元素子集">以矩阵方式提取数据框的元素、子集</h4><p>以列表形式操作并不支持行选择。以矩阵形式操作更加灵活，若将数据框看作矩 阵，其二维形式的存取器可以很容易地获取一个子集的元素，同时支持列选择和 行选择。 换句话说，可以使用<code>[i, j]</code>指定行或列来提取数据框子集，<code>[ , ]</code>内可以是数值向 量、字符向量或者逻辑向量。</p><p>选择列：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 4 x 1##       x##   &lt;int&gt;## 1     1## 2     2## 3     3## 4     4</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># 同df1[, 1:2]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 4 x 2##       x     y##   &lt;int&gt; &lt;dbl&gt;## 1     1     0## 2     2     2## 3     3     1## 4     4    -1</code></pre><p>选择行：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 3 x 3##       x     y     z##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;## 1     1     0   0.5## 2     2     2   0.2## 3     3     1   0.1</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span>c<span class="token punctuation">(</span><span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## Warning: The `i` argument of ``[.tbl_df`()` must use valid row names as of tibble 3.0.0.## Use `NA` as row index to obtain a row full of `NA` values.## This warning is displayed once every 8 hours.## Call `lifecycle::last_warnings()` to see where this warning was generated.## # A tibble: 2 x 3##       x     y     z##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;## 1    NA    NA    NA## 2    NA    NA    NA</code></pre><p>同时选择行和列：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 3 x 1##       y##   &lt;dbl&gt;## 1     0## 2     2## 3     1</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 3 x 2##       x     z##   &lt;int&gt; &lt;dbl&gt;## 1     1   0.5## 2     2   0.2## 3     3   0.1</code></pre><p>根据条件筛选数据 例如用 z &gt;= 0.5 筛选 df1 的行，并选择 x 和 y 两列：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token operator">$</span>z <span class="token operator">&gt;=</span> <span class="token number">0.5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## [1]  TRUE FALSE FALSE  TRUE</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span>df1<span class="token operator">$</span>z <span class="token operator">&gt;=</span> <span class="token number">0.5</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## # A tibble: 2 x 2##       x     y##   &lt;int&gt; &lt;dbl&gt;## 1     1     0## 2     4    -1</code></pre><p>按行名属于集合 {a, d, e} 来筛选 df1 的行，并选择 x 和 y 两列：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">ind <span class="token operator">&lt;-</span> names<span class="token punctuation">(</span>df1<span class="token punctuation">)</span> <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span>df1<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> ind<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## # A tibble: 2 x 2##       x     z##   &lt;int&gt; &lt;dbl&gt;## 1     1   0.5## 2     2   0.2</code></pre><h3 id="给数据框赋值">给数据框赋值</h3><p>给数据框赋值，就是选择要赋值的位置，再准备好同样大小且格式匹配的数据， 赋值给那些位置即可，所以同样有列表方式和矩阵方式。 #### 以列表方式给数据框赋值 用 <code>$</code> 或 <code>[[ ]]</code> 对数据框的 1 列赋值</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token operator">$</span>z <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">)</span> <span class="token comment"># 同d1[["z"]] &lt;- c(0.4, 0.5, 0.2, 0.8)</span>df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 3##       x     y     z##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;## 1     1     0   0.6## 2     2     2   0.3## 3     3     1   0.2## 4     4    -1   0.4</code></pre><p>利用现有列，创建 (计算) 新列：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token operator">$</span>w <span class="token operator">&lt;-</span> df1<span class="token operator">$</span>y <span class="token operator">+</span> df1<span class="token operator">$</span>z df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 4##       x     y     z     w##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;## 1     1     0   0.6   0.6## 2     2     2   0.3   2.3## 3     3     1   0.2   1.2## 4     4    -1   0.4  -0.6</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token operator">$</span>w <span class="token operator">&lt;-</span> as.character<span class="token punctuation">(</span>df1<span class="token operator">$</span>w<span class="token punctuation">)</span> <span class="token comment"># 转换列的类型</span>df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 4##       x     y     z w    ##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;## 1     1     0   0.6 0.6  ## 2     2     2   0.3 2.3  ## 3     3     1   0.2 1.2  ## 4     4    -1   0.4 -0.6</code></pre><p>用 <code>[]</code> 可以对数据框的 1 列或多列进行赋值：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token string">"z"</span><span class="token punctuation">]</span> <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">)</span>df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 4##       x     y     z w    ##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;## 1     1     0   0.8 0.6  ## 2     2     2   0.5 2.3  ## 3     3     1   0.2 1.2  ## 4     4    -1   0.4 -0.6</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span>c<span class="token punctuation">(</span><span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>level <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  score <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 4##       x     y     z w    ##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;## 1     1     1   0.1 0.6  ## 2     2     2   0.2 2.3  ## 3     3     1   0.3 1.2  ## 4     4     0   0.4 -0.6</code></pre><h4 id="以矩阵方式给数据框赋值">以矩阵方式给数据框赋值</h4><p>以列表方式对数据框进行赋值时，也是只能访问列。若需要更加灵活地进行赋值 操作，可以以矩阵方式进行。</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">]</span> <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 4##       x     y     z w    ##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;## 1     1    -1   0.1 0.6  ## 2     2     0   0.2 2.3  ## 3     3     1   0.3 1.2  ## 4     4     0   0.4 -0.6</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">df1<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>level <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  score <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 4##       x     y     z w    ##   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;## 1     1     0   0.9 0.6  ## 2     2     0   1   2.3  ## 3     3     1   0.3 1.2  ## 4     4     0   0.4 -0.6</code></pre><p>###一些有用函数 #### <code>str()</code> 该函数作用在 R 对象上，显示该对象的结构：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">str<span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## tibble [3 x 4] (S3: tbl_df/tbl/data.frame)##  $ Name  : chr [1:3] "Ken" "Ashley" "Jennifer"##  $ Gender: chr [1:3] "Male" "Female" "Female"##  $ Age   : num [1:3] 24 25 23##  $ Major : chr [1:3] "Finance" "Statistics" "Computer Science"</code></pre><h4 id="summary"><code>summary()</code></h4><p>该函数作用在数据框上，将生成一个汇总表来显示每一列的情况：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">summary<span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>##      Name              Gender               Age          Major          ##  Length:3           Length:3           Min.   :23.0   Length:3          ##  Class :character   Class :character   1st Qu.:23.5   Class :character  ##  Mode  :character   Mode  :character   Median :24.0   Mode  :character  ##                                        Mean   :24.0                     ##                                        3rd Qu.:24.5                     ##                                        Max.   :25.0</code></pre><h4 id="rbind-和-cbind"><code>rbind()</code> 和 <code>cbind()</code></h4><p>经常需要将多个数据框（或矩阵）按行或按列进行合并 用函数 <code>rbind()</code>，增加行（样本数据），要求宽度（列数）相同； 用函数 <code>cbind()</code>，增加列（属性变量），要求高度（行数）相同。 例如，向数据框 persons 数据框中添加一个人的新记录：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">rbind<span class="token punctuation">(</span>persons<span class="token punctuation">,</span> tibble<span class="token punctuation">(</span>Name<span class="token operator">=</span><span class="token string">"John"</span><span class="token punctuation">,</span> Gender<span class="token operator">=</span><span class="token string">"Male"</span><span class="token punctuation">,</span>  Age<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span> Major<span class="token operator">=</span><span class="token string">"Statistics"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## # A tibble: 4 x 4##   Name     Gender   Age Major           ##   &lt;chr&gt;    &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;           ## 1 Ken      Male      24 Finance         ## 2 Ashley   Female    25 Statistics      ## 3 Jennifer Female    23 Computer Science## 4 John     Male      25 Statistics</code></pre><p>向 persons 数据框中添加两个新列表示每个人是否已注册和其手头的项目数量：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">cbind<span class="token punctuation">(</span>persons<span class="token punctuation">,</span> Registered<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  Projects<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>##       Name Gender Age            Major Registered Projects## 1      Ken   Male  24          Finance       TRUE        3## 2   Ashley Female  25       Statistics       TRUE        2## 3 Jennifer Female  23 Computer Science      FALSE        3</code></pre><p>注意： <code>rbind()</code> 和 <code>cbind()</code>不会修改原始数据，而是生成一个添加了行或列的新数据框。</p><blockquote><p>更建议用 <code>dplyr</code>包中的<code>bind_rows()</code>和<code>bind_cols()</code></p></blockquote><h4 id="expand.grid"><code>expand.grid()</code></h4><p>该函数可生成多个属性水平值所有组合（笛卡尔积）的数据框：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">expand.grid<span class="token punctuation">(</span>type<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> class<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"M"</span><span class="token punctuation">,</span> <span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token string">"XL"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>##   type class## 1    A     M## 2    B     M## 3    A     L## 4    B     L## 5    A    XL## 6    B    XL</code></pre><h2 id="因子factor">因子（factor）</h2><p>变量分为离散/分类型、连续/数值型（通常的数值变量，可带小数位）；分类型 变量又分为：名义型（无顺序好坏之分的分类变量，如性别）、有序型（有顺序 好坏之分的分类变量，如疗效）。</p><p>名义型和有序型的分类变量，在 R 语言中称为因子，因子本质上是一个带有水平 （level）属性的整数向量，其中“水平”是指事前确定可能取值的有限集合。</p><p>因子提供了一个简单且紧凑的形式来处理分类数据，因子用水平来表示所有可能 的取值，例如，性别有两个水平：男、女。</p><h3 id="创建因子">创建因子</h3><h4 id="用函数-factor-创建因子其基本格式为">用函数 factor() 创建因子，其基本格式为：</h4><pre><code>factor(x, levels, labels, exclude, ordered, nmax, ...)其中，x：为创建因子的数据向量；levels：指定因子的各水平值，默认为 x 中不重复的所有值；labels：设置各水平名称（前缀），与水平一一对应；exclude：指定有哪些水平是不需要的（设为NA）；ordered：设置是否对因子水平排序，默认 FALSE 为无序因子, TRUE 为有序因子；nmax：设定水平数的上限。</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">x <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span>sex <span class="token operator">&lt;-</span> factor<span class="token punctuation">(</span>x<span class="token punctuation">)</span>sex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>## [1] 男 女 男 男 女## Levels: 男 女</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">attributes<span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## $levels## [1] "男" "女"## ## $class## [1] "factor"</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">levels<span class="token punctuation">(</span>sex<span class="token punctuation">)</span> <span class="token comment"># 访问水平值属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## [1] "男" "女"</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">class<span class="token punctuation">(</span>sex<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## [1] "factor"</code></pre><h4 id="用-gl-生成有规律的水平值组合因子">用 gl() 生成有规律的水平值组合因子</h4><p>对于多因素试验设计，用该函数可以生成多个因素完全组合，基本格式为：</p><pre><code>gl(n, k, length=n*k, labels, ordered=FALSE)其中，n：为因子水平个数；k：为同一因子水平连续重复次数；length：为总的元素个数，默认为 n * k, 若不够则自动重复；labels：设置因子水平值；ordered：设置是否为有序。</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">data.frame<span class="token punctuation">(</span> Sex <span class="token operator">=</span> gl<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> length<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> labels<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Class <span class="token operator">=</span> gl<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> length<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> labels<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"甲"</span><span class="token punctuation">,</span> <span class="token string">"乙"</span><span class="token punctuation">,</span> <span class="token string">"丙"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Score <span class="token operator">=</span> gl<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> length<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> labels<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"优"</span><span class="token punctuation">,</span> <span class="token string">"良"</span><span class="token punctuation">,</span> <span class="token string">"中"</span><span class="token punctuation">,</span> <span class="token string">"及格"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>##    Sex Class Score## 1   男    甲    优## 2   男    甲    优## 3   男    乙    优## 4   女    乙    良## 5   女    丙    良## 6   女    丙    良## 7   男    甲    中## 8   男    甲    中## 9   男    乙    中## 10  女    乙  及格## 11  女    丙  及格## 12  女    丙  及格</code></pre><h3 id="使用因子">使用因子</h3><p>R中因子是以整数型向量存储的，每个因子水平对应一个整数型的数。对字符型 向量创建的因子，可以指定因子水平顺序，否则默认会按照字母顺序，再对应到 整数型向量。<br>&gt;注意： 不能直接将因子数据当字符型操作，需要用 as.character() 转化。</p><p>考虑用一个变量存储字符串型的月份：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">x1 <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">"Dec"</span><span class="token punctuation">,</span> <span class="token string">"Apr"</span><span class="token punctuation">,</span> <span class="token string">"Jan"</span><span class="token punctuation">,</span> <span class="token string">"Mar"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这有两个问题： - 实际只需要12个月份值，对拼写错误也无能为力； - 不会按照想要的方式排序：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">sort<span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## [1] "Apr" "Dec" "Jan" "Mar"</code></pre><p>若改用因子型就能避免上述问题。创建因子型，首先要创建一个有效的“水平值” 列表：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">month_levels <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">"Jan"</span><span class="token punctuation">,</span> <span class="token string">"Feb"</span><span class="token punctuation">,</span> <span class="token string">"Mar"</span><span class="token punctuation">,</span> <span class="token string">"Apr"</span><span class="token punctuation">,</span> <span class="token string">"May"</span><span class="token punctuation">,</span> <span class="token string">"Jun"</span><span class="token punctuation">,</span> <span class="token string">"Jul"</span><span class="token punctuation">,</span> <span class="token string">"Aug"</span><span class="token punctuation">,</span> <span class="token string">"Sep"</span><span class="token punctuation">,</span> <span class="token string">"Oct"</span><span class="token punctuation">,</span> <span class="token string">"Nov"</span><span class="token punctuation">,</span> <span class="token string">"Dec"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>再来创建因子：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">y1 <span class="token operator">&lt;-</span> factor<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> levels <span class="token operator">=</span> month_levels<span class="token punctuation">)</span>y1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## [1] Dec Apr Jan Mar## Levels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec</code></pre><pre class="line-numbers language-r" data-language="r"><code class="language-r">sort<span class="token punctuation">(</span>y1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## [1] Jan Mar Apr Dec## Levels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec</code></pre><p>并且任何不在水平集中的值都将转化为 NA：</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">x2 <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">"Dec"</span><span class="token punctuation">,</span> <span class="token string">"Apr"</span><span class="token punctuation">,</span> <span class="token string">"Jam"</span><span class="token punctuation">,</span> <span class="token string">"Mar"</span><span class="token punctuation">)</span>y2 <span class="token operator">&lt;-</span> factor<span class="token punctuation">(</span>x2<span class="token punctuation">,</span> levels <span class="token operator">=</span> month_levels<span class="token punctuation">)</span>y2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>## [1] Dec  Apr  &lt;NA&gt; Mar ## Levels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec</code></pre><p>有时候你可能更希望让水平的顺序与其在数据集中首次出现的次序相匹配，设置 <code>levels=unique(x)</code> 即可，或者用管道操作在其后增加 <code>fct_inorder()</code>:</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">f1 <span class="token operator">&lt;-</span> factor<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> levels <span class="token operator">=</span> unique<span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span class="token punctuation">)</span>f1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>## [1] Dec Apr Jan Mar## Levels: Dec Apr Jan Mar</code></pre><h3 id="有用函数">有用函数</h3><h4 id="table"><code>table()</code></h4><p>该函数可以统计因子各水平的出现次数（频数），也可以统计向量中每个不同元 素的出现次数，返回结果为命名向量。</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">table<span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>## sex## 男 女 ##  3  2</code></pre><h4 id="cut"><code>cut()</code></h4><p>该函数可以用来做连续变量离散化：将数值向量切分为若干区间段，返回因子。 基本格式为：</p><pre><code>cut(x, breaks, labels, ...)其中，x：为要切分的数值向量；breaks：切分的界限值构成的向量，或表示切分段数的整数</code></pre><blockquote><p>注： 该函数还有其它参数 <code>right</code> 设置区间段是否左开右闭, <code>include.lowest</code> 设置是否包含下界，<code>ordered_result</code> 设置是否对结果因子排序。</p></blockquote><pre class="line-numbers language-r" data-language="r"><code class="language-r">Age <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span>cut<span class="token punctuation">(</span>Age<span class="token punctuation">,</span> breaks<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  labels<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"Young"</span><span class="token punctuation">,</span> <span class="token string">"Middle"</span><span class="token punctuation">,</span> <span class="token string">"Old"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>## [1] Middle Young  Middle Old    Old    Old   ## Levels: Young Middle Old</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据科学 </category>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据科学 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GDP分析手册</title>
      <link href="posts/3709481002/"/>
      <url>posts/3709481002/</url>
      
        <content type="html"><![CDATA[<blockquote><p>GDP分析手册。<br>GDP，中文名叫国内生产总值，是目前衡量一国经济发展最重要的宏观 挃标，甚至没有之一。<br>在本篇报告中，我们从书本到实际，在向读者呈现出统计局是如何一步步核算出我们所熟知的GDP数据后，给出了一个GDP的具体分析框架。一是总量分析，二是结构分析，后者又包括生产法和支出法两个视角，通过这两个视角，可以大致把握中国绊济的产业结构和需求变化。最后结合这个分析框架，将改革开放以来的历史，分为1978年到2001年、2002年到2011年和2012年至今三个阶段，分阶段对中国GDP增长史做简要复盘。</p></blockquote><h2 id="书本上的-gdp">1.书本上的 GDP</h2><p>​ 让我们先来复习一下教科书对于GDP的经典定义：<font color="red"> 一国（地区）在一定旪期内生产的所有最终产品的市场价值。</font></p><p>关二这个定义，有几点需要把握：</p><p><font color="red"> 第一，GDP 只限于在本国内的生产。</font>比如小明是个中国人，他在美国长期工作，她创造的产出不计入中国 GDP。再比如中国企业 A，它的美国子公司创造的产出也不计入中国 GDP。而相反的，一个在中国长期工作的美国人，他的产出计入中国 GDP。</p><p>有一个和 GDP很像的概念：GNP（国民生产总值），它不考虑地域，只考虑国民身份。无论是小明的产出，还是企业 A 在美国的子公司产出，都计入中国 GNP。</p><p><font color="red"> 第二，“一定旪期内”反映了GD 是一个流量概念，而不是存量概念。</font>小明在2020年底有100万的总资产，这是存量概念，小明在2020年赚了100万，这才是流量概念。两类概念不能直接对比。</p><p><font color="red"> 第三，GDP 度量的是生产，而不是售出。</font>企业A假如生产了100万元产品，这一年只卖出了80万，最后计入这一年GDP的还是100万。一辆在2019年生产，但是在2020年才卖出的车，其实车的价值已绊计入了2019年GDP中。</p><p>从另一个角度理解，企业A卖给了消费者80万，又把剩余的20 万“卖”给了企业自己，而后者其实已经计入了存货投资，所以这一年的GDP有100 万。</p><p><font color="red"> 第四，GDP考虑的是最终产品的价值，或者说是每个产品环节的增值。最终产品是GDP概念中相对难理解的部分。我们用一个例子说明：</font></p><font color="red"><ul><li><p>1）小麦厂A种植小麦，把小麦以10元的售价卖给面粉厂B。</p></li><li><p>2）面粉厂B把小麦磨成面粉，并把面粉以20元的售价卖给面包厂C。</p></li><li><p>3）面包厂把面粉加工成面包，以30元的售价卖给小明。</p></li></ul><p>到了小明这，面包不再作为原材料，继续进入下一个生产环节，而是直接被消费掉了，这时面包就是最终产品，计入GDP的是30元。为什么不考虑小麦和面粉的价值呢？因为它们作为原材料，已经包含在面包的价值里了，如果把它们的价值也计入，GDP显然就重复计算了。</p><p>当然，我们也可以把GDP理解为“新创造的价值”的总和，从增加值的角度看。在小麦的环节，价值增值是10元（假如其种植成本可以忽略不计），面粉、面包的环节价值增值也都是10元。加起来合计30元，和利用最终产品价值计算出的GDP结果是一样的。</p><p>事实上，在实务中，我们很难去一个个辨别哪些是最终产品，哪些是中间产品。所以反而是用行业增加值的思路来核算GDP。</p><p><font color="blue">理论上来说，GDP有三种核算方法。分别是生产法、收入法、支出法。</font>三者在核算理念上有所区别：</p><p><font color="green"> 1）生产法：一国最终的产出成果，等于各生产环节的增加值加总。各个生产环节的增加值=总产出-中间投入。</font></p><p><font color="green"> 2）收入法：一国最终的产出成果，等于各类已投入生产要素应获得的回报。比如劳动力要素要得到工资回报，资本得到利息回报。</font></p><p><font color="green"> 3）支出法：一国最终的产出成果，等于最终使用。最终产品被使用的方式主要有三种，消费、投资和净出口。 </font></p><p>尽管三者的核算理念不同，但是最终的理论核算结果是一致的。我们可以用一个简化的经济运作模型来解释这一点。</p><p>假设一国只有企业部门和居民部门：</p><p>1）企业A生产出100元钢材，全部卖给企业B。企业B拿这些钢材继续生产出200元机械设备和100元五金用具。由于只考虑最终产品，那么GDP就是300元（生产法）。</p><p>2）如果居民部门买下了100元五金用具，形成了居民消费支出；企业A买下了200元机械设备，形成了固定资产投资，那么消费+投资构成的GDP也是300元（支出法）。</p><p>3）企业A在卖出钢材后，获得收入100元，假设生产成本低到可以忽略不计，那么在向居民支付50元工资后，还剩下利润50元。企业B的收入是300元，扣除100元钢材成本，再向居民支付100元工资后，还剩下企业B利润100元。居民部门工资收入+企业A、B利润合计300元（收入法）。</p><p><font color="red"> 换言之，生产法衡量的是创造了多少新产品价值，支出法衡量的是这些产品是怎么被使用的，收入法衡量的是产品带来的价值/利益是怎么分配的。三者是在说一件事的不同侧面。</font></p><p><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201110801161.png"></p><div data-align="center">一个简单的两部门经济运作模型</div><h2 id="现实中的gdp">2.现实中的GDP</h2><blockquote><p>那么，现实中的GDP究竟是怎么核算出来的，它和书本上的GDP有什么区别？了解这个问题很重要，毕竟我们只能基于现实中的GDP指标来做经济分析。</p></blockquote><p>GDP核算是一个浩大的工程。在这里，我们暂时忽略掉那些统计技术上的细节，只把一些主要的概念、方法和核算步骤展现出来，让读者对GDP这个非常“宏观”的概念，能够有更直观的理解。</p><h3 id="统计范围的界定">2.1统计范围的界定</h3><p>目前中国的GDP核算方法，主要是基于《中国国民经济核算体系2016》，而这一核算体系又主要参考了联合国制定的国民账户体系SNA（2008）。</p><p>根据《中国国民经济核算体系2016》，GDP的定义为：一个国家所有常住单位在一定时期内生产活动的最终成果。</p><p>其中，又主要在两个方面对GDP的统计进行了界定。</p><p><font color="red"> 统计哪些生产主体？</font>主要是我国的常住单位。它具体指的是在我国经济领土范围内“具有经济利益中心的经济单位”，是有门槛的：</p><ul><li><p>1）要在我国有一定的场所，比如住房、厂房或其他建筑物。</p></li><li><p>2）要从事一定规模的经济活动并超过一定时期（一般是1年）。</p><p><font color="red"> 统计哪些生产活动？</font>中国当前的核算体系，明确界定了纳入GDP考察的四类生产活动：</p></li></ul><p>1）生产者提供或准备提供给其他单位的货物/服务的生产。</p><p>2）生产者用于自身消费、投资的货物的自给性生产。</p><p>3）生产者（非住户部门）用于自身消费、投资而进行的知识载体产品的自给性生产。</p><p>4）自有住房提供的住房服务，以及雇佣有酬家庭服务人员提供的家庭和个人服务的自给性生产。</p><p>总的来说，这个界定涵盖了很多自给性生产活动（包括2、3、4），所以其实是比传统教科书上对GDP生产活动的界定（主要针对市场性活动），要更宽泛。</p><p>关于GDP生产范围的界定，历史上其实是在不断拓宽的。1993年SNA体系主要将自给性的货物生产纳入核算范围，2008年SNA体系则主要纳入了自给性的知识载体产品生产。我国这几次更新的核算体系也跟随调整，和SNA基本保持了一致。</p></font><p><font color="red">当前GDP核算不包含的生产活动，主要是居民自给性的服务生产，比如小明给自己家打扫卫生，这种活动的价值不计入GDP。一方面是因为这些纯粹的非市场活动很难合理估价，另一方面，如果把它们也纳入GDP统计范围，会降低GDP对于经济分析和政策制定的参考价值。<br></font>当然，统计范围只是划定了边界，受限于现实的统计能力，其实不是所有的经济主体、所有的生产活动都被仔细地考量和核算过，GDP没办法百分百地反映一个国家的生产状况。这一点，我们接下来看GDP的核算流程就会知道。</p><h3 id="怎么核算生产法gdp">2.2 怎么核算生产法GDP？</h3><p><font color="red"> 目前中国对外公布的GDP数据，以生产法GDP为主，更准确来说是生产法+收入法混合。</font>我们先来介绍这种方法。</p><p><font color="blue"> 生产法GDP，其实就是各行业的增加值加总。那么，第一步就是合理划分经济行业。</font></p><p>我国GDP统计，主要基于《国民经济行业分类标准》。目前该标准已经更新到了2017年版，2019年之后的GDP核算，已经采用了最新的行业划分标准。</p><p>根据该标准，可以将我国经济划分为20个门类行业、97个大类行业、473个中类行业以及1381个小类行业。</p><p>考虑到资料可获得性和工作复杂度，实际GDP核算涉及的行业细分程度是有限的。</p><p>其中，季度GDP核算能够拿到的基础资料不是很详细，所以主要基于19个门类行业（不含国际组织），部分门类行业会进一步细化为行业大类。</p><p>年度GDP核算则基本可以细分到所有大类行业来核算，不过也稍微做了一些调整，例如房地产业会继续拆分为5个中类行业来核算。</p><p>另一种分类方法，则是按照三次产业进行分类，即所谓的第一、第二、第三产业。这三大产业，基本上是对20个国民经济门类行业的再组合，不过根据最新的三次产业分类标准，一产、二产中一些辅助性的活动，被划入了三产。</p><p>具体的三次产业和国民经济行业组合方式如下图所示。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201110904889.png" alt=""><figcaption>三次产业划分和国民经济行业分类方法</figcaption></figure><p><font color="red"> 在有了行业划分后，第二步就是获得各个行业的基础统计资料。</font></p><p>季度GDP核算，统计局能拿到的资料主要包括：</p><ul><li><p>1）统计局搜集的调查资料，比如各种农林牧渔业、工业、建筑业统计调查资料。</p></li><li><p>2）其他部门的行政记录资料，比如央行的金融机构信贷收支数据、税务局的分行业税收数据等。</p></li></ul><p>年度GDP核算能拿到的资料更多一些，除了国家统计调查资料和行政记录资料外，还可以获得：</p><ul><li>3）部门年度财务统计资料，比如交通部汇总的交通行业年度财务统计数据等。 4）财政决算资料。</li></ul><p>不同行业有着相应的官方统计资料。但总的来说，常规年度GDP就是在上述4类原始资料的基础上加工、整理出来的。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111017963.png" alt=""><figcaption>一些主要行业的增加值核算基础资料来源<br>资料来源：《中国主要统计指标诠释（第二版）》</figcaption></figure><p><font color="blue"> 资料到手后，第三步就是分别计算各行业的增加值。</font>在实际核算过程中，有两点需要注意：</p><p>第一，根据我国目前的GDP核算方法，农业、林业、渔业、牧业等行业增加值采用生产法核算，其他行业则采用收入法核算。</p><ul><li>1）生产法核算方法：行业增加值=总产出-中间投入。</li></ul><p>以农林牧渔业为例，统计局要从农林牧渔业统计报表中，拿到农林牧渔业总产值数据，以及中间消耗数据，再用总产值-中间消耗，计算增加值。</p><ul><li>2）收入法核算方法：行业增加值=劳动者报酬＋生产税净额＋固定资产折旧＋营业盈余。</li></ul><p>这四个项目的定义以及计算方法示例，我们在下表中列示。由于各个项目在核算过程中，有很多细节问题需要处理，不同行业具体计算方式也不同，限于篇幅，这里就不展开谈了。</p><p>简单以建筑业为例，统计局要从建筑业企业财务状况表、生产经营情况表中，获得企业的各种财务数据，然后基于这些财务数据，分别计算出劳动者报酬、生产税净额、固定资产折旧和营业盈余四大项目，最后加总得到行业收入法增加值。</p><p>不过，上述说法仍然简化了核算过程，因为建筑业中有很多资质外建筑企业、个体经营户等，他们都缺乏官方的统计资料，最终需要通过推算，才能得到他们的增加值，我们下文会讲到。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111108908.png" alt=""><figcaption>四个收入法项目的概念范围和计算方法示例<br>资料来源：《中国国民经济核算体系 2016》、《中国非经济普查年度GDP核算方案（2010年修订版）》</figcaption></figure><p><font color="red"> 第二，部分资料丰富详实的行业，可以直接计算增加值数据。而资料不足的行业，需要进行推算。</font>特别是季度GDP核算，由于资料限制，很多行业都需要采用推算方法。</p><p>推算的方法主要有三种：比例推算法、增加值率推算法、相关指标推算法。</p><p>1）比例推算法。例如建筑业有很多资质外建筑企业，统计局缺乏他们的生产数据，那么只能先计算出今年资质内企业的增加值，再参考过去资质内企业的增加值占全行业比重（一般是基于经济普查数据来计算这个比重），反推出整个建筑业的增加值。</p><p>2）增加值率推算法：增加值＝总产出×增加值率。</p><p>例如租赁和商业服务业，在采用收入法核算的时候，四个构成项目没办法直接核算，那么只能参考过去四个项目占总产出的比例，再用今年的行业总产出×收入法各项目占比，得到各项目推算数据，再加总获得行业增加值。</p><p>3）相关指标推算法：增加值＝上年同期增加值×（1＋相关指标增长速度）。这里的增加值也可以换成总产出，或者收入法各项目。</p><p>例如仓储业，统计局可以获得仓储服务企业的营收增速，今年的仓储业总产出，可以用去年仓储业总产出×营收增速计算得到。然后再用增加值率推算法，进一步算出仓储业的收入法增加值。</p><p>因为间接计算是一种估算，一定程度上会影响GDP的核算精确度。大部分的行业其实是直接计算和间接计算混用。2013年数据显示，利用基础资料直接计算的行业增加值约为GDP的55%，采用间接计算的约为45%。随着这几年统计资料不断丰富和完善，现在直接计算的比例可能会更高一些。</p><p><font color="red"> 可以发现，GDP核算其实并不能做到绝对“精确”，它某种程度上还是一个估算值。</font></p><p>​ <img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111147094.png" alt="少数行业完全采用直接计算方法，大部分是直接和间接计算方法混用 资料来源：《中国现行国内生产总值核算方法》、许宪春（2014）"></p><p><font color="red"> 最后，在计算出了各个行业的增加值后，把它们全部加总起来，就可以得到最终的生产法 GDP。</font></p><h3 id="怎么核算支出法gdp">2.3怎么核算支出法GDP？</h3><p>另一种核算GDP的方法是支出法。支出法GDP尚未建立正式的季度核算制度，因此目前只披露年度数据。</p><p><font color="blue"> 在支出法下，GDP被分为最终消费支出、资本形成总额、货物和服务净出口三部分来进行核算。 </font></p><p><font color="red"> 最终消费支出主要包括居民消费支出和政府消费支出。 </font></p><p>居民消费支出总共包括10个类别：1）食品烟酒。2）衣着。3）居住。4）生活用品及服务。5）交通和通信。6）教育、文化和娱乐。7）医疗保健。8）金融中介服务。9）保险服务。10）其他商品及服务。</p><p>这些类别的数据，1-7和10主要基于住户调查中的居民消费支出资料来计算（住户调查是抽样调查），不过也参考了行政记录资料、行业协会数据等其他资料，比如“交通和通信”类别中的汽车消费支出，会参考汽车工业协会的轿车销量等数据进行推算。8和9则主要参考金融和保险业统计资料计算。</p><p>政府消费支出，与财政支出密切相关，但需要进行一些调整。</p><p>财政支出包括两部分，一部分是购买性支出，一部分是转移性支出。购买性支出又包括政府消费性支出（也称经常性支出）和政府投资性支出，两者最大的区别在于，前者是非生产性的，不形成任何资产。只有经常性支出算作政府消费支出。</p><p>具体地，GDP下的政府消费支出=财政支出中的经常性业务支出-经营性业务收入+固定资产折旧。其中经常性业务支出，主要是指工资福利性支出、商品和服务性支出等。相关数据主要来自于财政支出决算明细表。</p><p><font color="blue"> 资本形成总额主要包括固定资本形成总额、存货变动。</font></p><p>固定资本形成总额指的是常住单位在一定时期内获得的固定资产减处置的固定资产的价值总额，可分为有形和无形两部分。</p><p>在具体操作中，主要按照8个分项计算：1）住宅。2）非住宅建筑物。3）土地改良支出。4）机器和设备。5）矿藏勘探费。6）计算机软件支出。7）研究与开发支出。8）其他支出。</p><p>固定资本形成总额主要是基于全社会固定资产投资额计算出来的，但同时也做了一些调整，关于两者的差别我们将在下文中提到。</p><p>存货变动按照8个行业分别计算：1）农林牧渔业。2）工业。3）建筑业。4）批发和零售业。5）交通运输仓储及邮政业。6）住宿和餐饮业。7）房地产业。8）其他服务业。</p><p>每个行业的存货变动，都通过相应行业的统计调查或财务资料，获取期初、期末存货价值数据来进行核算。</p><p>计算存货变动时，剔除了价格变动所引起的存货持有收益/损失。因此存货变动=期末存货价值-价格调整后的期初存货价值。</p><p>货物和服务净出口，主要由货物与服务出口金额-进口金额计算得出。相关数据直接取自于国际收支平衡表。</p><p>最终消费支出、资本形成总额、货物和服务净出口三者加总，即得到支出法GDP。</p><p>理论上支出法GDP与生产法GDP最终的核算结果是相等的，但在实务中，由于在两者在统计资料、统计方法下的差异，核算结果会存在误差。因为我国以生产法GDP为准，所以这一统计误差项最终填列在支出法（使用方）栏目下。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111234624.png" alt=""><figcaption>支出法和生产法GDP之间的统计误差填列在支出法下<br>资料来源：《国民经济核算体系2016》</figcaption></figure><h3 id="名义gdp和实际gdp">2.4名义GDP和实际GDP</h3><p>统计局在核算GDP时，会同时核算现价GDP和不变价GDP，它们也被分别称作名义GDP和实际GDP。</p><p>它们有什么区别？我们用一个例子进行说明：</p><p>举个例子，假设A国只生产汽车：</p><p>2015年，一辆汽车的价格是10万元，到了2020年，一辆汽车的价格涨到了20万元。</p><p>如果2020年A国生产了100辆汽车，那么这一年的名义GDP就是2000万元（简单假设中间投入为0），即2020年价格×2020年数量。</p><p>而2020年的实际GDP（指定基期为2015年）则只有1000万元，即2015年价格×2020年数量。</p><p><font color="blue">换言之，名义/现价GDP是用现在的价格计算的GDP，实际/不变价GDP是用基期价格计算的GDP。 </font></p><p>注意，基期是可以随意变化的，如果选择了不同的基期，那么实际GDP的数值会存在差异。所以我们在说明实际GDP的绝对额时，一般要指明基期。</p><p>为什么我们还要使用实际GDP这个概念呢？因为实际GDP通过保持基期价格不变，进而剔除了价格因素，能够更纯粹地反映产出数量变动的影响。</p><p>在实际统计中，统计局核算不变价GDP也是采用生产法和支出法。</p><p>从生产法的角度看，不变价GDP由各行业的不变价增加值加总而得，它的核算是和现价GDP核算同步进行的。</p><p>计算各行业不变价增加值的方法有两种：价格指数缩减法、物量指数外推法。不同行业用的方法不同，相关的价格/物量指数也不同。</p><p><font color="blue"> 价格指数缩减法：行业不变价增加值=行业现价增加值÷价格指数。 </font></p><p>比如工业，用的是工业生产者出厂价格指数来缩减，建筑业，用的是建筑安装工程价格指数来缩减。</p><p><font color="blue">物量指数外推法：行业不变价增加值＝上年同期不变价增加值 ×（1＋物量指数增长速度）</font></p><p>有一些行业，更方便得到的指标是物量指标，比如铁路运输业，可以利用铁路客货运周转量指数，在上期增加值的基础上，直接外推出当期不变增加值（因为只考虑了“量”的变化，价格还是保持了基期价格）。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111325527.png" alt=""><figcaption>部分行业采用的丌变价增加值核算方法及相关的价格/物量指数<br>资料来源：《准确理解中国现行国内生产总值核算》、许宪春（2019）</figcaption></figure><p>不变价GDP的支出法核算方式，与生产法是一致的，也是主要采用价格指数缩减法、物量指数外推法。</p><p>目前只有少部分支出项目，采用的是物量指数外推法，比如“GDP-居民消费支出-居住项“中的自有住房住房服务价值，使用“居民自有住房面积发展速度”这一物量指数进行外推。其他绝大部分项目，采用的都是价格指数缩减法。</p><p>不过，支出法下的不变价GDP还处于试算阶段，部分项目的核算还有待完善，比如政府消费支出、存货变动、净出口等。因此目前并不对外公布不变价核算结果，而只是公布三大支出项目对GDP不变价同比的贡献率和拉动点数。</p><p>另外，在实际GDP的基期选择问题上，统计局也有相关规定。</p><p>目前计算不变价GDP需要每隔若干年调整一次基期。在1981年到2000年间，是每10年调整一次基期。<font color="blue"> 而自2001年至今，是每5年调整一次基期，例如2011-2015年的实际GDP，以2010年为基期计算，2016-2020年数据则按2015年价格计算。 </font></p><p>在核算了现价GDP和不变价GDP之后，为了衡量它们之间的关系，有一个专门的指标，叫做GDP平减指数。</p><p><font color="blue"> 统计局公布的GDP平减指数=当期现价GDP÷当期不变价GDP。这里的不变价GDP，采用的基期为上一期，即每一年（季）的GDP平减指数计算，都以上一年（季）价格作为不变价。</font></p><p>因为现价GDP未剔除价格因素，而实际GDP剔除了，所以两者相除得到的GDP平减指数，其实可以看作我国所有最终货物和服务的价格总指数。</p><p><font color="blue"> 该指数与我国常用的其他的CPI、PPI等价格指标不同。 </font></p><p><font color="red"> 一是核算思路有所不同。</font>CPI、PPI等指数是直接编制的价格指数，而是GDP平减指数是将现价GDP与不变价GDP相除得到的（不过在计算不变价GDP时，有些行业增加值的计算，可能利用CPI或者PPI数据进行价格缩减，这是它们的关联所在）。</p><p><font color="red"> 二是统计范围有所不同。</font>CPI只考虑居民消费相关的商品和服务，PPI则主要反映工业企业产品的价格，而GDP平减指数则涵盖了所有生产的货物和服务。</p><h3 id="gdp数据的修订">2.5GDP数据的修订</h3><p>季度GDP的初步核算数，一般是季后15天左右公布。年度GDP的初步核算数，一般是次年1月20日左右公布。</p><p>GDP在初步核算后，还需要进行最终核实。</p><p>而季度、年度GDP的最终核实数，则一般要到隔年1月份才会出来。</p><p><font color="blue"> 相比于初步核算，最终核实数参考的资料会更丰富，比如能拿到财政决算资料、行业财务资料，计算得到的GDP数据也会更准确。</font></p><p>上述属于常规修订，此外中国历史上还有几次GDP的全面修订。</p><p>如果GDP核算方法变化，或者行业分类标准发生变化，那么统计局就会对GDP历史数据进行全面修订。最典型的就是2017年中国国民经济核算体系重大调整，将研发支出纳入了GDP，随之更新了历史GDP数据。</p><p><font color="blue"> 另外，每次开展全国经济普查后，由于对第二、三产业开展了全面性调查，有了范围更大、内容更丰富准确的基础数据，往往也会对年度、季度GDP历史数据进行修订。</font></p><p>第一次经济普查在2004年，之后逢3和逢8年份为经济普查年。目前我国一共开展了四次经济普查，分别是2004、2008、2013、2018年。</p><p>普查年的次年12月左右会发布经济普查数据，并且对普查年及以前年份的GDP数据进行修订。</p><p>这四次经济普查，对普查年名义GDP的修订幅度分别为+16.8%、+4.4%、+3.4%、+2.1%，修订幅度基本上是越来越小，这也反映了中国GDP数据统计质量在不断改进。</p><p><font color="blue"> 经济普查对GDP的修订，可能会对经济预测造成一些影响，所以也比较受市场关注。</font></p><p>例如2020年是中国全面建成小康社会的关键之年，根据十八大目标，我国国内生产总值需要较2010 年翻一番。按照这一信息，可以推算出2020年需要达到的GDP增长目标。</p><p>在第四次经济普查对实际GDP同比增速的影响没有出来之前，预估2020年实际GDP增速需要达到6.1%左右，才能完成翻一番目标。但是在第四次经济普查修订结果出来后，历史GDP增速被调高，使得2020年GDP增速只需要达到5.5%，就能实现GDP翻番目标，这就使得当时市场对经济刺激政策的期待进一步降温。</p><p>最后我们可以观察一下，在经历了历史多轮修订后，当下最新的GDP同比增速和各年初步核算的GDP增速之间有什么差异。</p><p>首先，修订后各年的GDP同比增速基本都更高了。</p><p>其次，修订前后的GDP差异，在这几年越来越小。这可能是因为历史GDP核算与现在有很多细节方面的不同，从后往前回溯修订更困难，所以数据差异也越大，另一方面也可能和近年来参考资料的丰富、核算质量的提高有关。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111422083.png" alt=""><figcaption>多轮修订后的GDP 同比，比初次核算的 GDP 同比要更高</figcaption></figure><h3 id="地区gdp加总全国gdp">2.6地区GDP加总≠全国GDP？</h3><p>最后有一个常见问题：如果将各省份的GDP加总，按理来说应该等于全国GDP，但事实上两者并不一致。</p><p>21世纪初以来的各省市现价GDP合计值，一直高于全国GDP，并且两者始终存在不小的误差，这一差异在2013-2014年高达4万亿左右。不过2017-2019年两者间误差明显缩小，特别是2018-2019年，省份合计值开始低于全国值。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111455005.png" alt=""><figcaption>地区GDP合计值多年来高于全国 GDP，但 2018-2019 年差异显著缩小</figcaption></figure><p>该如何理解这两者之间的误差？</p><p><font color="blue"> 第一，差异存在的一个重要原因在于分级核算制度，即国家统计局核算全国GDP，各省统计局核算各省GDP。</font>这会带来几个问题：</p><p>1）在GDP核算过程中，每个省和全国能够掌握的基础资料可能有差异，有时采用的推算方法也不同，所以在统计上会有一些误差。</p><ol start="2" type="1"><li>地方核算GDP时，很难去仔细辨别跨地区的生产经营活动，例如某公司在A市设立母公司，B、C两市分别设立子公司，那么到了年末，B、C两地在核算地区GDP的时候，就有可能将子公司创造的增加值记在当地的GDP中，造成重复计算。</li></ol><p>3）基层的统计力量可能相对薄弱，统计人员可能配置不足、业务水平不高，这都会影响地方GDP的统计质量。</p><p><font color="blue"> 第二，有些地方政府为了彰显政绩，可能会给GDP数据注水，导致GDP虚高。</font>天津、辽宁、内蒙古等地都曾曝光过本省的经济数据造假行为。国家统计局也曾公开过多起统计违法案件，地方统计工作人员编造并代填代报企业统计数据，人为拉高地方GDP。</p><p>上述主客观原因，共同导致了地方GDP加总值高于常年高于全国GDP。 该如何理解这个误差在2017-2019年的缩小呢？</p><p>如果地区GDP加总持续与全国GDP存在较大差异，可能会让人质疑GDP核算的客观性，也很难基于GDP数据，来分析地区的经济结构。</p><p><font color="blue"> 2019年我国提出GDP统一核算改革，即不再是地方自行核算GDP，而是由国家统计局领导，各省统计局参与，统一进行核算。</font></p><p>借助于第四次经济普查，2018年GDP已经进行了统一核算，并有了修订结果。调整之后，地区GDP加总略小于全国GDP。这主要是因为有一些生产活动，比如驻外使领馆、军队武警，以及一些不宜划分地区的保密单位，它们的活动仅核算在全国，地区GDP是不核算的。</p><p>从调整后数据来看，各省GDP数据都或多或少有一些变动。其中，山东、天津、河北与东北三省等14个省（直辖市）下调；安徽、上海、福建、广东和浙江等17个省（直辖市）上调。总体来看，调高的省份以南方居多，调低的省份以北方居多。</p><p><font color="red"> 未来，随着GDP统一核算的改革调整，地方GDP合计值和全国GDP之间的差异将显著缩小，并且这个差异可能会保持一个相对稳定的负值。</font></p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111546722.png" alt=""><figcaption>2018年各地区GDP的初步核算值以及统一核算后的修订值对比<br>政府官网</figcaption></figure><h2 id="我们如何分析gdp">3.我们如何分析GDP？</h2><p>现在，假如有一仹刚公布的季度/年度GDP数据摆在我们面前，我们该如何解读？又该如何简单地预测GDP走势？</p><h3 id="总量分析">3.1总量分析</h3><p><font color="red"> GDP分析分为两步走，第一步看总量，第二步看结构。 </font></p><p><font color="blue"> 先来看看GDP绝对额。</font>季度GDP在公布时，一般会有两个值，累计值和当季值，在这里我们需要简单区分一下这两者。</p><p>累计值是指年内累计，比如2季度GDP累计值，是指1-2季度的GDP。而2季度GDP当季值则仅指2季度GDP。</p><p>在2015年3季度之前，GDP采用的是累计核算方法，公布的也是累计值，当季GDP数据需要推算。比如根据2019年1-3季累计GDP，再减去1-2季度累计GDP，得到3季度当季GDP。</p><p>因为累计值通常会包含对前面季度数据遗漏、重复及误报的调整，所以在2015年之前，用累计GDP推算当季GDP，将不可避免地造成一些统计误差，不能得出真正意义上的当季GDP。</p><p>假如我们用历史公布的季度GDP累计值（初步核算数），来推算历史当季GDP。可以发现在2015年以前，这个GDP当季推算数在1、2、3季度均被低估，而在4季度存在明显高估，整体波动性会更大。</p><p>到了2015年3季度后，才正式建立分季的GDP核算制度。这时，其实是先核算出当季的GDP，然后加总各个季度的当季数据，得到累计数据。</p><p>所以这时候用累计值反推出的当季值，其实和官方公布的当季值数据基本是一致的。只有每年的4季度数据除外，因为1-4季度累计GDP，其实就是年度GDP，这时会根据新资料再做一些调整，所以按照1-4季度累计值反推出的4季度GDP当季值，会与公布数据有一定差异（当然这里只是指初步核算值，之后的GDP修订工作会把差异都抹平）。</p><p><font color="blue"> 我们现在一般在分析季度GDP数据时，当季值和累计值都可以看，但一般分析的是官方公布的GDP当季值。</font></p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111632194.png" alt=""><figcaption>2015年之前，用GDP累计值推算的当季值存在较大误差</figcaption></figure><p><font color="blue"> 紧接着，如果观察我国GDP当季值变动趋势，可以发现，长期来看GDP一直处于扩张趋势。</font>每年的GDP一般都高于上年，各季度GDP一般都高于上年同期。</p><p><font color="red"> 另外我们也可以发现非常明显的季节性规律，每年的1季度到4季度，GDP绝对额是逐季增加的。</font>这可能是由于以下几个原因导致的：</p><p>1）节假日因素。比如一季度有春节，企业停工停产。</p><p>2）农作物生长周期。主要农作物的收成期一般是下半年。</p><p>3）消费、出口旺季在下半年。这可以从社会消费品零售额、出口金额年内波动趋势看出。</p><p><font color="blue"> 正是因为GDP数据存在明显的长期增长趋势和季节性波动，所以对比GDP绝对额意义并不大。</font></p><p><font color="blue"> 事实上，我们更关心的是变动率，即经济增长速度的快慢。另外，我们还需要一些办法，来剔除季节性波动，以便把握经济变化的主趋势。</font></p><p><font color="blue"> 一个传统的处理办法是计算GDP同比。</font>通过比较当季GDP与上年同一季度的GDP（具有相同季节性），就可以剔除季节性因素的影响。</p><p>这里需要注意的是，我们使用的往往是不变价GDP同比，即所谓的实际GDP同比。</p><p>因为实际GDP同比剔除了价格因素，能让我们更清晰地识别出，经济增长中哪些是物价上涨得来的，哪些是生产/需求扩张得来的，而后者是我们此时更关注的。</p><p>各类媒体报道、学术报告中所提到的GDP增速，如“2020年1季度GDP增速为-6.8%”，若不含特殊说明，一般也都是指实际GDP同比。</p><p><font color="blue"> 另一个方法是先对不变价GDP进行季节性调整，然后再计算环比指标。</font></p><p>相对于同比指标而言，环比指标的好处在于，能够更及时地反应当前的经济运转状况。同比增速对比的是当季GDP和上年同季GDP，理论上来说，同比包含了好几个环比增速的连乘（存在基数效应的干扰）。而环比指标只对比了当季GDP和上季GDP，包含的历史信息更少，也就更“新”，更“灵敏”。</p><p>问题在于，计算环比之前，怎么对当季GDP进行合理的季节性调整，以剔除季节性波动呢？</p><p>2011年1季度，国家统计局建立了季度GDP环比统计制度，此后会定期公布季调后的GDP环比。统计局主要基于季节调整软件（NBS-SA）对GDP进行季节调整，该软件涉及到一些相对复杂的计量处理方法，同时考虑了中国独特国情，比如对春节、端午、中秋等假日因素进行了剔除。</p><p>下图中可以看出，在季调之后，GDP环比增速没有了季节性波动，明显更具有参考价值了。</p><p><font color="blue"> 不过目前来看，统计局公布的季调后GDP环比数据，时间区间相对较短，运用的还不是很广泛。人们更喜欢用的还是GDP同比数据。</font> <img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111707034.png" alt="季调后的GDP环比增速，比季调前更具有意义 注：季调前GDP环比利用不发价GDP当季值迚行手动环 比计算，季调后GDP环比采用统计局公布数值"></p><p>对于海外发达经济体而言，GDP季调体系已经非常完善，所以会直接公布季调后的GDP绝对值，美国、日本、欧盟都是如此。</p><p>例如美国开发了自己的季调工具（X-13 ARIMA），季调因素包括假期因素、月工作天数，甚至还综合考虑了冬季天气、工厂生产计划等一系列因素。</p><p>而由于有了比较科学的季调数据，所以这些国家更关心的是GDP的环比指标，而不是同比指标。</p><p>关注海外经济的读者，应该会对“环比折年率”这个概念比较熟悉。这是海外发达经济体用于描述GDP增长的主要指标。</p><p><font color="blue"> 环比折年率=（1+环比增速）^4-1，近似等于环比增速×4。</font>这是假设经济可以连续4个季度，都保持同样的环比增长速度，进而将环比指标年化。思路有点像是我们用复利的方式，把月利率换算成年化利率。</p><p><font color="red"> 实际上，这个指标就是把季度GDP的环比变动幅度放大，以更清楚地展示短期经济的波动情况。</font>一般来说，GDP的环比折年率变动幅度，会大于同期的GDP同比变动幅度。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111743797.png" alt=""><figcaption>美国GDP环比折年率波动幅度大于折年数同比</figcaption></figure><p>简单总结一下。目前对我国GDP进行总量分析，最主要的指标还是不变价GDP同比。</p><p>第一，我们可以先拿它和机构预测值进行对比，看是超出预期还是低于预期。</p><p>第二，我们可以拿它和历史数据比，看是走高还是走低，变动斜率如何。</p><p>第三，我们可以拿它的变动情况和海外主要经济体的GDP数据变动进行对比，看看走势是否具有一致性，增速谁高谁低。但是在对比的时候，注意同环比指标的差异性。</p><h3 id="结构分析">3.2结构分析</h3><p><font color="blue"> 在对GDP数据进行了总量分析后，接下来我们需要深入分析GDP的结构。有两个基本视角，一个来自于生产法，另一个来自于支出法。 </font></p><p><font color="blue"> 生产法GDP是各行业增加值的加总，分析生产法GDP的构成，实际就是在分析产业结构和产业变化。</font></p><p><font color="blue"> 支出法GDP由消费、投资、出口构成，通过分析这几大项，可以摸清经济需求的变化情况。 </font></p><h4 id="生产法视角">3.2.1生产法视角</h4><p>先来看生产法视角。我们首先需要搞清楚的是，对于GDP而言，三次产业各自的重要性如何。</p><p>从历史数据来看，我国第一产业和第二产业增加值占GDP比重都在下降，而第三产业占比正不断上升，目前已经居于主导地位。截至2019年，第一、第二、第三产业按不变价计算的GDP占比分别为7.4%、39.6%、53.0%。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111818878.png" alt=""><figcaption>第三产业占GDP比重不断上升</figcaption></figure><p>不过，我们想知道的不仅仅是三大产业的GDP占比，因为从短期来看，三次产业结构一般不会发生大变动，只有长期来看，这个数据才会呈现出清晰的变动趋势，才具备分析价值。</p><p>我们更关注的是三大产业增加值（为便于说明，下文中都直接简称为某产业GDP）在短期的变动幅度，以及它们各自对于GDP增速的影响程度。</p><p>由于统计局没有公布各产业的季调GDP环比数据，所以三大产业GDP的变化幅度，只能由不变价同比来度量。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111846608.png" alt=""><figcaption>三次产业GDP同比变劢趋势</figcaption></figure><p><font color="blue"> 有了三大产业的GDP同比之后，可以分别计算出它们对GDP增速的拉动效果。</font></p><p>首先需要计算各产业的GDP增长贡献率。这个概念和各产业GDP占比有点像，不过是GDP增量的占比。</p><p>具体来说，第一产业GDP增长贡献率=第一产业GDP增量÷总GDP增量，均采用不变价计算。第二、第三产业也是同理。</p><p>统计局会公布每个季度各产业对GDP的贡献率。我们也可以手动计算得到，结果和官方公布值是相同的（但在手动计算的时候，一定要注意保持不变价GDP基期一致）。</p><p>有了贡献率之后，我们可以把它理解为各产业增长在GDP增长中的权重，用各产业贡献率×产业GDP同比，就可以得到各产业对GDP的拉动点数。</p><p>比如，2019年四季度第三产业GDP增长贡献率是55%，第三产业GDP同比增长率是6.6%。二者相乘，可以得到第三产业对GDP增长的拉动程度约为3.3%。统计局也会公布拉动点数这个指标。</p><p><font color="blue"> 第一、第二、第三产业对GDP增长的拉动点数之和，等于GDP同比。这样，我们就可以清晰地解构出各产业对GDP增长的影响程度。</font></p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111921799.png" alt=""><figcaption>三次产业对GDP增长的拉动点数和等于GDP同比</figcaption></figure><p><font color="red"> 在上述过程中，最关键的还是对各产业的GDP同比进行分析。</font>而无论是解读各产业GDP同比背后隐藏的信息，还是对产业GDP同比进行预测，只依靠GDP数据本身是不够的，我们需要一些相关指标进行辅助判断。</p><p><font color="red"> 首先是第一产业。</font>上文我们曾提到，第一产业（农林牧渔业）GDP，主要是通过总产出-中间消耗核算出来的。</p><p>因为中间消耗相对比较稳定，所以第一产业GDP的波动，主要源于农林牧渔总产值波动。农林牧渔总产值同比没有剔除价格因素，所它和第一产业的现价GDP同比走势基本上是相近的。</p><p>而第一产业现价GDP/总产值的波动，又主要源于价格波动，而非生产波动。</p><p>第一产业GDP平减指数累计同比（代表“价”）的走势，和现价GDP同比是一致的。而第一产业不变价GDP同比（代表“量”）变动则比较小。</p><p>总的来看，因为第一产业的GDP增长贡献率很低，一般都在5%左右，并且不变价GDP同比波动不大，所以我们对GDP的分析，往往也不涉及第一产业。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201111949493.png" alt=""><figcaption>现价GDP主要是受价格波劢影响，量的波动其实很小</figcaption></figure><p>不过关于第一产业，2020年1季度有一个有趣的现象。</p><p>因为新冠疫情下的物理隔离，农业生产和畜牧业养殖受到了比较大的冲击，导致第一产业不变价GDP同比，大幅走弱至-3.2%。但与此同时，第一产业GDP平减指数同比却在飙涨。说明量减，价升。</p><p>我们可以通过农产品生产价格指数同比来观察价格变动。它是统计局用价格缩减法，将农林牧渔业现价增加值转换为不变价的主要指标，所以它和第一产业GDP平减指数同比走势基本是一致的。</p><p>而在农产品生产价格指数中，畜牧业产品是1季度价格上涨的主要品种，特别是猪肉。很明显，2020年1季度，中国还处于由非洲猪瘟引起的超级猪周期中。</p><p>猪价上涨的影响，甚至全面盖过了疫情对生产的负面冲击，而把1季度现价GDP同比拉高到了16.2%。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112022055.png" alt=""><figcaption>农产品生产价格指数同比和第一产业GDP平减指数同比走势一致</figcaption></figure><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112046992.png" alt=""><figcaption>农产品生产价格指数同比中，2020年1季度最 主要是畜牧业产品生产价格指数同比在上涨</figcaption></figure><p>接下来是第二产业。工业GDP占第二产业GDP比重约为85%，建筑业GDP占15%。工业占大头，GDP分析的时候一般也主要讨论工业。</p><p>工业生产状况的好坏，对于我国经济而言非常重要。因此，统计局会在每个月中旬公布工业增加值的同环比数据，以增强数据的时效性。<br>工业增加值这个指标是我们分析的重点。我们目前经常用它来代替对工业GDP的分析。原因在于：</p><p>1）工业增加值是月频数据，能够帮助我们及时地跟踪工业生产的短期变化。</p><p>2）工业增加值除了公布总体增速外，还会同时公布41个子行业的增速，有利于我们深入把握各行各业的动态。</p><p>那这个独立的工业增加值指标，和GDP项目下的“工业增加值”（即我们所指的工业GDP）有什么差异呢？</p><p>最主要的差别在于统计范围。工业增加值只统计了规模以上的工业企业，即营收在2000万及以上的工业企业，而工业GDP则包含了所有工业企业。不过，规模以上企业本来就是工业企业主体，所以这一点影响也不大。</p><p>除此之外，两者都是增加值的概念，没什么差别。</p><p>工业增加值同比，本身已经剔除了价格因素，所以从历史走势来看，和工业不变价GDP同比是比较一致的。</p><p>关于工业增加值这个指标，这里不深讲，我们后续还有专门的文章对它进行介绍。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112111621.png" alt=""><figcaption>工业增加值同比增速和工业不变价GDP的增速走势一致</figcaption></figure><p><font color="red"> 最后是第三产业。随着第三产业占比不断增长，对GDP波动的影响力也就越来越大，我们不能忽视这种影响。</font></p><p>但是，第三产业所包含的行业范围比较广泛，目前又缺乏一个类似于工业增加值的月频综合性指标，能够跟踪服务业变化，这就增加了我们的分析难度。</p><p><font color="red"> 尽管国家统计局自2017年开始，发布了服务业生产指数同比（剔除了价格因素），这是一个能够反映服务业经济活动的月度运行情况的综合性指标。但这个指标目前的适用性还不是很好。</font>原因在于：</p><p>1）只覆盖了市场性活动。而服务业GDP则既包含市场性活动，也包含非市场性活动，比如科教文卫等行业中的非市场性活动。</p><p>2）不够准确。为了保证时效性，该指标能够参考的基础资料有限，并且对于部分行业采用了推算预估。服务业GDP的核算相对更完整、准确。</p><p>3）数据披露期限较短。目前该指标最早只到2016年12月。</p><p>从2017年以来的已有数据来看，服务业生产指数同比和第三产业GDP同比，在大方向上是一致的，但短期走势有所背离，服务业生产指数似乎领先了半年左右。</p><p>未来随着服务业生产指数的数据时间跨度不断拉长，核算方式不断改进，研究者可能会给予这个指标更多的关注。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112141700.png" alt=""><figcaption>服务业生产指数同比和GDP同比大方向一致，但短期走势有所背离</figcaption></figure><p><font color="red"> 另一个可用于替代分析的综合性指标是服务业PMI指数。</font></p><p>但它是用调查问卷的形式统计的，和第三产业GDP的核算思路完全不同。并且它本质上是一个环比指标，不适合直接拿来与第三产业GDP同比做比较（而第三产业GDP又没有季调后的环比指标）。</p><p>不过，考虑到它是月频数据，有时效性，我们还是可以参考这个指标来简单地判断服务业的短期变化。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112217503.png" alt=""><figcaption>服务业PMI可以粗略地用于判断服务业短期变劢情况</figcaption></figure><p><font color="blue"> 由于缺乏比较完善的综合性指标，我们有时候需要分行业来具体分析第三产业。 </font></p><p>目前，第三产业中，有8个行业会公布增加值的季度数据：1）批发和零售业 。2）交通运输、仓储和邮政业。3）住宿和餐饮业。4）信息传输、软件和信息技术服务业。5）金融业。6）房地产业。7）租赁和商务服务业。8）其他行业。</p><p>“其他行业”中又包含了7个子行业，比如卫生和社会工作、教育业等。但是这些行业的增加值只披露年度数据，并且数据相当滞后，目前最新数据只到了2017年。</p><p>从披露季度数据的8个行业来看，我们可以选择优先分析那些GDP占比较高、波动性又比较大的行业，比如金融业、房地产业等，它们对GDP增速变化的影响力更大。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112302912.png" alt=""><figcaption>8个服务行业的GDP占比和当季同比标准差对比</figcaption></figure><p>对于每个行业，我们都可以选择一些指标来拟合该行业GDP同比的变动情况，特别是那些统计局在GDP的核算过程中使用了的指标。但有两点需要注意：</p><p>1）这个指标最好是物量指标，不包含价格因素。</p><p>2）我们只能通过这些指标的变化，来分析GDP变化的具体原因，或是判断未来GDP可能存在的趋势和拐点，而很难直接测算出相应行业GDP增速的具体数值。</p><p>例如，金融业GDP同比和股票成交量月度同比，有比较明显的相关性，因为股票成交量与证券公司的经纪业务收入密切相关。这可能反过来也说明证券业的波动，可能是影响整个金融业GDP波动的重要因素。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112333576.png" alt=""><figcaption>金融业GDP同比和A股成交量同比走势相关</figcaption></figure><p>再例如，商品房销售面积同比的走势，和房地产业GDP同比是基本一致的。我们可以利用前者（月频数据）来判断房地产业GDP同比的拐点和变动方向。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112355494.png" alt=""><figcaption>房地产业GDP同比和商品房销售面积同比走势相关</figcaption></figure><h4 id="支出法视角">3.2.2支出法视角</h4><p><font color="red"> 接下来是支出法视角。我们一般在分析GDP时，它其实是更主要的视角。</font>因为消费、投资、净出口作为三大主要需求变量，在短期内的变动是比较灵敏的，并且有显著的经济意义。</p><p>三大需求哪个的影响力最大？从三大需求的GDP贡献率来看（和上文提到的GDP贡献率是同一概念），目前消费变动对经济增长的影响力最显著，其次是投资，最后是净出口。</p><p>2019年，消费、投资和净出口对GDP增长的贡献分别占到了6成、3成和1成。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112418828.png" alt=""><figcaption>消费和投资对GDP增长的贡献比例比较高</figcaption></figure><p>接下来我们需要对消费、投资、净出口分别进行分析，看看是哪个因素导致了GDP增速的升降。</p><p>比较遗憾的是，目前支出法GDP的季度数据所显示的信息量比较少，消费、投资、出口等没有更细节的数据。所以我们只能参考一些频率更高、细节更多的相关经济指标，来进行辅助判断。在使用时，须注意它们与GDP指标间的差异。</p><p>首先来看消费。目前我国反映消费的指标主要有三个，一是GDP-最终消费支出（年频），二是住户调查中的居民消费支出（季频），三是社会消费品零售总额（月频）。</p><p>住户调查中的居民消费支出，是GDP-最终消费支出的主要核算基础资料。但它没有涵盖政府消费支出，并且它披露的只有人均消费支出增速，参考意义有限。</p><p>目前，市场上常用社会消费品零售总额，来替代对GDP-最终消费支出的分析。</p><p>这个指标与最终消费支出在核算范围方面，存在一些差别：</p><p>1）社会消费品零售总额只包括了商品零售、餐饮服务，其他服务性消费支出比如教育医疗支出等，均未被包括在内。而GDP-最终消费支出涵盖了。</p><p>2）GDP-最终消费支出还包括了“虚拟消费支出”，比如居民的自有住房服务价值、一些自产自销的商品或服务（比如农产品）、隐含在利息中的金融中介服务等。这些都是社会消费品零售总额不包括的。</p><p>3）社会消费品零售总额中，有一些消费行为在GDP中其实是计为投资的，最典型的比如居民建房时买的建筑材料。</p><p>不过从历史走势来看，两个指标的增速拟合效果还不错。考虑到暂时还没有其他能够度量消费的更好的指标，现在不妨先用它来判断消费状况的大体变化。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112441075.png" alt=""><figcaption>GDP-最终消费支出同比不社会消费品零售额同比走势相关</figcaption></figure><p><font color="blue"> 再来看投资。</font>GDP-资本形成总额可以分为固定资本形成总额、存货增加两部分。</p><p>固定资本形成总额占绝对主体，一般占95%以上，而存货增加占比很小。我们一般也只分析固定资本形成总额。</p><p>有一个指标，与固定资本形成总额长得非常像：固定资产投资完成额。它反映了全社会建造和购买固定资产的工作量和相关费用。</p><p>固定资本形成总额、固定资产投资完成额，两者有区别，它们存在一些统计范围方面的差异：</p><p>1）固定资产投资完成额只统计500万元及以上的非农户项目（除房地产企业开发地产项目没有规模限制外）。而固定资本形成总额没有以500万元作为门槛，统计了所有规模的项目。这个是最主要的区别。</p><p>2）固定资产投资额包含土地购置费、旧建筑物购置费和旧设备购置费等，但固定资本形成总额将它们剔除了。</p><p>3）固定资本形成总额还包括了商品房销售增值，以及培育性生物资源、知识产权产品等无形固定资产的增加。固定资产投资额则不包括。</p><p>固定资产完成额是个非常重要的指标，市场关注度也很高。</p><p>一方面，它是GDP-固定资本形成总额核算时的重要基础资料, 我们在上文中曾提到这一点。另一方面，它是月频数据，时效性很强，而且资料详实、细节丰富。我们平时在分析投资数据的时候，也主要以固定资产完成额为主。</p><p>历史上两个指标的变动比较一致，但是在2017-2018年，GDP-固定资本形成总额增速出现大幅抬升，与固定资产投资完成额增速的趋势性下行明显背离。</p><p>我们猜测这个背离的形成，主要是因为2017年后GDP核算体系更新，固定资本形成总额将更多的知识产权产品纳入了核算范围，特别是纳入了研究与开发支出这一项，这可能对固定资本形成总额增速造成了扰动。而固定资产完成额并不统计这些，所以不受影响。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112503309.png" alt=""><figcaption>固定资本形成总额同比不固定资产投资完成额同比走势近年出现背离</figcaption></figure><p>固定资产投资额数据很全面，可以继续细分为三类主要项目：基建投资、房地产投资、制造业投资——而它们又分别对应着不同的下游需求。限于文章篇幅，我们不再逐个陈述。</p><p><font color="blue"> 最后是货物与服务净出口。目前市场主要分析的是海关统计的月度进出口贸易差额。它与GDP核算的货物与服务净出口有两点主要差异： </font></p><p>1）海关统计的贸易差额，只统计货物贸易，不统计服务贸易。而GDP-货物与服务净出口两者都包括。</p><p>2）海关统计的货物进口按到岸价计算，货物与服务净出口统计的货物进口按离岸价计算。两个价格的差异，主要在于国际运费、保险费等。</p><p>另外，2014年以后，外管局发布了国际货物和服务贸易进出口月度数据，这个数据和GDP-净出口统计口径更接近，同时包含了货物和服务贸易。我们也可以利用这个数据来拟合GDP-净出口。</p><p>不过这个数据一般在次月月末公布，时效性不如海关进出口数据（次月8-10日）。</p><p>净出口（或者说贸易差额）等于出口减出口。一般我们在分析的时候，会更关注出口数据一些，因为它直接反映了海外需求，是我国经济总需求分析中的重要部分。</p><p><font color="red"> 总的来说，支出法是比生产法更重要的GDP分析视角，无论是社会消费品零售额、固定资产投资还是海关进出口数据，都有很多需要进一步仔细甄别的数据细节。</font>我们会在以后的系列报告中，对这些重要指标展开更深入的分析。</p><h2 id="中国gdp历史数据复盘">4.中国GDP历史数据复盘</h2><p>最后，我们对中国改革开放以来的GDP增长进行一轮简单复盘。</p><p>首先可以关注几个比较重要的历史节点：一是1978年中国刚刚开始改革开放；二是2001年中国加入世贸组织；三是2008年全球金融危机；四是2020年新冠疫情。</p><p>因此，我们大致将改革开放后的中国经济增长，分为以下几个阶段来讨论：</p><ul><li><p>1）1978-2001年：GDP增速总体较快，但波动很大。</p></li><li><p>2）2002-2011年：GDP增速处于较高水平。</p></li><li><p>3）2012年至今：GDP增速趋于下行，2020年1季度大幅回落。</p></li></ul><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112539096.png" alt=""><figcaption>改革开放以来的中国GDP同比可以分为三个主要阶段</figcaption></figure><p>我们将每一个阶段（其中第一个阶段又可以分为几个小阶段）的GDP增长，以及各年的生产法、支出法项目对GDP的拉动点数，一并列示在下图中。这样可以比较清楚地显示出各年GDP增长的主要驱动因素。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112605121.png" alt=""><figcaption>各年度生产法、支出法下各项目对于GDP增速的拉劢效果</figcaption></figure><p><font color="blue"> 在一个完整的经济分析框架里，人口、城镇化、技术进步、制度变革等一系列长期因素的变动是非常重要的。另外，金融周期对经济周期的影响力也是巨大的。但这些议题太过宏大，我们接下来的分析，偏向于剖析GDP短期波动的触发因素。</font></p><h3 id="年">4.11978-2000年</h3><p>先看1978-2000年。这个阶段中国GDP年均复合增速约为9.7%，是历史上增速较快的阶段。最主要的原因即是改革开放后，体制束缚逐渐解除，中国经济增长活力被彻底激发。</p><p>但同时，这个阶段也出现了几次比较大的波动。波动的主要原因，在于中央经济政策的松紧。我们将这个阶段分为6个小阶段来看。</p><p><font color="red"> 第一，1978-1981年GDP增速下滑。 </font></p><p>主要是因为中央判断投资过热，物资缺口过大，所以决定在1979-1981年进行经济调整，通过项目限制、信贷管制等方式，压缩固定资产投资规模。该时期，投资对GDP的拉动点数下滑得非常快。</p><p><font color="red"> 第二，1982-1985年GDP增速高增。该时期无论是生产还是需求都在快速扩张。</font></p><p>生产端，政策逐步催化。</p><ul><li><p>1）1982年，中央提出20世纪末工农业产值“翻两番”计划，带动了生产热情。</p></li><li><p>2）家庭联产承包责任制全面铺开，这个制度极大地解放了农业生产力，第一产业GDP拉动点数，较上个阶段有所扩大。</p></li><li><p>3）一旦农村剩余劳动力增多，加上户籍制度松绑，人口便流向城市，为城市工业、服务业输血。所以第二产业、第三产业GDP拉动点数也在扩大。</p></li></ul><p>需求端，消费+投资双热。</p><ul><li><p>1）工资制度改革，职工工资和企业利润挂钩，很多企业大幅度提高工人的工资和奖金，可以看到下图中，平均实际工资指数快速上升，这带动了消费需求扩张，1984年消费对GDP拉动点数甚至冲高到10个点。</p></li><li><p>2）一些地方为了加快完成工业翻两番计划，大力扩建工业产能，另外价格双轨制下，企业为了获取计划外的利润，也有动力扩产，进而拉动投资走高。</p></li><li><p>3）这段时期进口增速远超出口增速，导致净出口对GDP拉动作用持续为负，1985年甚至降至负7个点，这也反映了内需增长较快。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112631701.png" alt=""><figcaption>1983-1984年平均实际工资指数突然提升</figcaption></figure><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112653860.png" alt=""><figcaption>1984年进口同比远超出口同比</figcaption></figure></li></ul><p><font color="red"> 第三，1986-1991年GDP增速向下调整，主要是因为政府在1985年下半年、1988年两度选择了收紧经济政策。</font></p><p>1985年，消费、投资需求都扩张得很厉害，经济过热导致通胀升温。1985年政府其实纠结了很久，是继续推经济，还是防通胀。最后在下半年得出了基本结论：防通胀。并采取了一些措施，比如控制货币供应量，收缩信贷，限制职工工资奖金等。</p><p>但因为1986年1季度的经济大滑坡，导致中央防通胀决心有所动摇，2季度重新放开信贷规模，投资需求又再度膨胀，带动1987-1988年GDP增速回升。同时，1988年中央又决定冒险实现价格闯关，改革价格双轨制。需求扩张+制度突然调整，结果导致通胀迅速升起。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112714510.png" alt=""><figcaption>1988年中国通货膨胀高企</figcaption></figure><p>最终，中央在1988年决定，用三年时间进行全面治理整顿，维护经济秩序，不惜通过经济硬着陆的方式实现。</p><p>在整顿期，中央紧缩财政信贷、压缩投资，虽然控制了通胀，但也付出了相当沉重的经济代价，GDP增速从两位数掉到了4%左右。到1991年底，经济秩序整顿基本完成，中央开始加大投资规模，重启经济，中国经济也逐渐走出了低谷。</p><p><font color="red"> 第四，1992-1993年GDP增速上行。</font> 主要是因为1992年邓小平南方谈话后，短期内全国又掀起了新一轮的改革高潮，发展市场经济的理念不再动摇，这也刺激了当时的投资和消费热情，两者对GDP的拉动作用在1992-1993年都非常高。</p><p>另外，南方谈话后，允许外资在中国投资兴办企业，上海浦东、沿江沿边内陆等进一步开放，外商直接投资规模迅速扩大。也成为了该时期经济增长的重要驱动力之一。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112736245.png" alt=""><figcaption>南方谈话后，外商直接投资规模快速扩张</figcaption></figure><p><font color="red"> 第五，1994-1997年GDP增速下行。</font></p><p>主要是因为南方谈话后，总需求又开始过热，货币发行和信贷扩张，进而明显加大了通货膨胀压力。因此1993年6月开始，中央加强了宏观调控，推动GDP增速软着陆。历史在重演，只是这次更有序一些。</p><p><font color="red"> 第六，1997-2001年GDP增速继续下行。主要受97年亚洲金融危机影响。</font></p><p>一方面，亚洲金融危机期间，中国承诺人民币不贬值，出口受较大影响。同时外资也在撤退，影响了投资增速，经济下行压力加大。</p><p>不过另一方面，我国也出台了一系列措施来拉动内需。比如发行长期建设国债，加大基础设施建设投资；通过减税、增加农业补贴等措施提高居民收入，进而增加消费。</p><p>有了逆周期政策的对冲，尽管遭遇了亚洲金融危机冲击，中国GDP增速没有出现大幅滑落。</p><p><font color="red"> 总体来看，1978-2000年这段时期，政策对经济运转节奏的影响非常大，几乎是“一松就热，一紧就死”。这主要是因为中国正处于迈向市场经济的转轨阶段，各种调控手段还不够完善。</font></p><p><font color="red"> 另外，这段时期频繁出现的经济过热现象、高通胀现象，其实也反映了当时的经济矛盾，主要是生产能力跟不上需求扩张。</font></p><p>不过到了90年代末期，各种制度改革已经取得了很大成效，生产力解放，供给约束基本被打开，供不应求的矛盾逐渐向供过于求过渡。这从两个方面可以看出：一是通胀的平均值下沉，很少再出现需求相对供给明显过热，导致通胀高企的情况。二是中国的贸易顺差越拉越大，说明溢出的生产能力被国外需求消耗了。</p><h3 id="年-1">4.22001-2011年</h3><p>接下来看2001-2012年，这一段时间，中国经济增长与全球的联系逐渐紧密。</p><p><font color="blue"> 第一，2001-2007年GDP增速持续上行。 </font></p><p>2001年末，中国顺利加入了世贸组织，这是中国经济在2001-2007年扭转下滑态势、进入新一轮上升期的核心动力。</p><p>这段时期，由于贸易条件双向开放，其实中国的进口和出口都在快速增长，所以最终的净出口对GDP的拉动效应其实并不明显。该阶段GDP增长的逻辑主要在于：</p><ul><li><p>1）出口增加和外需扩张，刺激了我国生产，特别是工业生产，使得中国成为世界工厂。可以看到第二产业对GDP拉动点数在2001-2007年，一直在持续提升。</p></li><li><p>2）企业产能扩张，因此投资维持在一个比较高的水平。此外，贸易顺差下带来的大量外汇储备，推动了基础货币投放，也给投资创造了比较好的流动性条件。</p></li><li><p>3）出口创收，增加了居民财富，也带动了消费扩张。</p></li><li><p>4）而消费扩张，又带动了许多不可贸易部门的生产，这些不可贸易部门很多集中在第三产业，因此第三产业的GDP拉动点数也在稳步提升。</p></li></ul><p><font color="blue"> 第二，2008-2012年GDP增速出现大幅波动，主要是受08年全球金融危机、以及后续的中国经济刺激政策影响。</font></p><p>2008年全球金融危机爆发，海外发达经济陷入深度衰退，外需收缩，出口减速，企业生产放缓，扩产投资意愿低迷，就业压力增大，消费萎缩。这一系列因素，明显增大了我国经济压力，因此2018年GDP增速放缓。</p><p>金融危机的影响逐步显现，我国出台了一系列政策来刺激经济，例如货币政策宽松，多次下调存款准备金率、存贷款基准利率等。而其中最著名的是“4万亿投资计划”，这些资金主要投向基础设施领域，目的是通过政府财政刺激拉动总需求，进而来保障经济增长。</p><p>可以看到，2009年投资对GDP的拉动点数大增至8个点，有效对冲了净出口下滑带来的负面影响，成为GDP增长最主要的支撑力量。</p><p>而在主要的投资类别中，基建又是最主要支撑。2009年房地产投资、制造业企业投资都在下滑，只有基建投资逆势抬升，这显然是政府财政刺激的结果。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112806049.png" alt=""><figcaption>2009年，财政刺激下的基建投资成为中国经济的主要支撑力量</figcaption></figure><p>政策刺激起到了显著效果。我国GDP在2008-2011年间依旧保持了9%以上的增长，成为了全球率先实现复苏的国家。</p><p>但是不考虑剂量的政策刺激，也给中国经济留下了许多后遗症：</p><ul><li><p>1）实体经济杠杆水平抬升。巨额的基建投资，带来了严重的地方政府隐性债务问题。另外在货币宽松环境下，企业的加杠杆行为也非常严重，债务率迅速走高。债务驱动经济增长，其实是在透支未来的发展空间。</p></li><li><p>2）房地产库存积压。货币极度宽松、信贷扩张、调控政策放松、以及而流动性泛滥下的房价快速上涨，都催化着房地产投资在2009年以来迅速升温，给之后的房地产库存积压埋下伏笔。</p></li><li><p>3）上游企业产能过剩。基建、地产投资扩张，带动钢铁、水泥等上游产能扩容，结果造成了后来严重的产能过剩问题。</p></li></ul><p>因此，表面上看，中国GDP还维持着较高增速，但2008年金融危机后，其实已经隐藏着许多结构性的问题，这也是为什么后来国家要推行去杠杆、去库存、去产能的重要原因。</p><h3 id="年至今">4.32012年至今</h3><p><font color="blue"> 最后来看2012年至今。这段时期，GDP增速持续放缓，经济增长进入新常态。 </font></p><p>2012年GDP跌破8%，基本已经告别两位数增长时代，而到了2019年，GDP已经下行至6.1%。</p><p>该时期GDP增速下台阶的原因是多方面的：</p><p>第一，海外经济体还处于08年金融危机的余震中，外部需求仍然比较疲软，全球化红利逐渐衰退。</p><p>第二，中国经济内部的一些结构性问题逐渐暴露，而我国也主动放缓经济增长步伐，更注重发展质量，开始积极地化解这些内在问题。</p><p>第三，许多支撑中国经济高增长的长期因素，正在悄然发生变化，比如人口结构的变迁。</p><p><font color="blue"> 具体来看，需求端方面，投资的弱化成为拖累GDP下行的主要因素。</font></p><p>一方面，在08年大规模的投资刺激之后，投资边际效率下滑，同时各部门债务率高企，追加投资的意愿和能力都比较有限。</p><p>另一方面，我国为了防范金融风险和债务风险，也不再像之前一样，总是依赖强刺激政策拉动经济增长，而是坚定不走大水漫灌的老路。 这些因素加在一起，带来了当前投资力量的弱化。</p><p>由于投资的低迷可能成为常态，外部需求又难言好转，甚至在中美贸易摩擦、逆全球化抬头的当下，有进一步恶化的趋势。所以拉动消费的重要性越来越凸显，这就需要保障就业，提高居民收入，并且稳住居民杠杆率。</p><p><font color="blue"> 而生产端方面，第二产业或者说工业生产，正面临瓶颈期。 </font></p><p>从长期因素来看，中国人口红利不再，取而代之的将是越来越严重的老龄化问题，这可能会带来劳动力要素的供给限制。另外，资源、环境的约束也在逐渐加强。因此像以前一样，用低成本扩张工业生产特别是劳动密集型、资源密集型工业生产的方式，很难继续。</p><p>从相对短期的因素来看，金融危机和一揽子刺激计划后，我国企业面临着比较严峻的产能过剩问题，尤其是一些上游企业。因此我国开启了去产能进程，关闭和停产了大量企业，这也对工业生产造成了较大影响。</p><p>不过，这段时期中国的服务业扩张的很快。2015年第三产业占GDP比重首次超过50%，并且还在不断扩张，从全球发达经济体的历史经验来看，这其实是一个必然趋势。</p><p>再跳出一二三产业的概念范畴来看，高科技产业和新经济的崛起，可能是未来中国GDP增长的主要驱动力。所以中国目前也在集中力量推动科技创新，推动经济新旧动能转换。用技术进步的力量，来对抗劳动力和资本要素的退场。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112828501.png" alt=""><figcaption>第二产业对GDP拉动点数下滑，第三产业成为主要支撑力量</figcaption></figure><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20201201112850643.png" alt=""><figcaption>投资对 GDP 拉劢点数下滑，消费成为主要支撑力量</figcaption></figure><p>2020年新冠疫情的爆发，给经济蒙上了一层新的阴影。1季度GDP增速大幅跌落至-6.8%。</p><p>为了控制新冠疫情，我国采取了物理隔离措施，企业停产停工，这就直接对生产端造成了非常大的冲击，其中工业生产受到的冲击尤为严重，第二产业GDP同比甚至降至-9.6%。</p><p>同时，新冠疫情对总需求也产生了较大影响。由于居民出行意愿下滑、就业形势恶化等原因，消费受到较大冲击。而经济前景不明朗、现金流压力较大，库存积压的情况下，企业也不愿意追加投资。1季度的最终消费支出和资本形成总额对GDP同比的拉动点数，分别下滑到-4.36和-1.46个百分点。</p>]]></content>
      
      
      <categories>
          
          <category> 宏观经济 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经济指标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工业数据分析手册</title>
      <link href="posts/3724259502/"/>
      <url>posts/3724259502/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本篇报告是经济数据分析手册系列的第二篇——工业数据篇。我们将先从工业增加值数据开始讲起。</p><p>工业增加值数据，反映的是工业生产的快与慢。而工业生产又与经济的冷热状况密切相关。通过分析工业增加值数据，我们可以对经济的供给端有更深的了解。本文对工业增加值数据的介绍包括三个方面：</p><p>第一，工业增加值数据的核算流程是什么？</p><p>第二，怎么解读工业增加值数据？</p><p>第三，可以通过哪些方式预判工业增加值数据的变动？</p></blockquote><h1 id="初识工业增加值数据">初识工业增加值数据</h1><h2 id="工业增加值是什么">工业增加值是什么？</h2><hr><p>我们曾介绍过GDP的具体核算流程。按照生产法，需要分别计算出国民经济各行业的增加值，然后加总得到最终的GDP。<a href="https://mp.weixin.qq.com/s?__biz=MzAwMzI0NTc3NQ==&amp;mid=100000773&amp;idx=1&amp;sn=2ef29e7345ee521723f84fd3d190c0f1&amp;scene=19#wechat_redirect">详见GDP分析手册</a>。</p><p>工业增加值，其实就是GDP核算中的工业部分。</p><p>什么是工业？“工业”概念在我国经济统计中有非常明确的范围界定，它包含三个国民经济门类行业：1）采矿业。2）制造业。3）电力、热力、燃气及水生产和供应业。其中制造业最重要，占比在85%左右。</p><p>统计局会在公布GDP数据时，同时公布分行业的增加值数据，当然其中也包括季度、年度的工业增加值。</p><p><strong>本篇报告讨论的重心主要在于月度工业增加值数据。</strong>它和年/季度的工业增加值，概念上没什么差异，但也有一些特殊性：</p><p>一是考虑到时效性，需要每月独立核算。并且由于基础资料不完整，只能采用推算方法。</p><p>二是统计范围更小，只统计了规模以上工业（年主营业务收入≥2000万的工业企业）的数据。</p><h2 id="月度工业增加值数据怎么核算">月度工业增加值数据怎么核算？</h2><p>月度工业增加值数据的生产过程并不算复杂，分为三步走。第一步是计算上年度工业增加值率，第二步是核算本月规模以上工业总产值，第三步是利用增加值率法来推算本月工业增加值。</p><p><strong>第一步。要得到上年度的工业增加值率，就要先计算各年度的工业总产值、工业增加值。核算基础数据来自于每年的工业企业成本费用调查。</strong></p><p>2009年起统计局正式实施这一调查。调查范围是全部大中型工业企业和部分规模以上小型工业企业，它们约占所有规模以上工业企业的1/3。被调查企业需要填写工业企业成本费用表。这个表格覆盖的企业数据内容是比较全面的，包括折旧、职工薪酬、税费等。基于这些数据，统计局可以直接计算出各企业的增加值（由收入法的四个项目加总而成）和总产值。</p><p>将各企业的工业增加值、总产值按照行业划分进行合并汇总，可以计算出国民经济中类行业、大类行业以及总的工业增加值和总产值。然后用行业增加值÷总产值，可以得到各行业的工业增加值率。</p><p><strong>第二步。本月度的规模以上工业总产值数据，主要来自于每月规模以上工业企业上报的“工业产销总值及主要产品产量表”。</strong></p><p>其中工业总产值又主要包括三部分：1）本期产成品价值。2）在制品、半成品本期的价值增值。3）对外加工费。</p><p>将各规模以上企业的数据按照行业进行汇总，即可得到行业的月度总产值数据。</p><p>值得一提的是，2012年之后，企业都是直接通过国家联网直报系统上报月度工业产销总值及主要产品产量数据，然后再由国家统计局进行汇总，避免了之前数据传报过程中可能发生的人为调整数据的情况，所以数据质量还是比较高的。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814230612937.png" alt=""><figcaption>工业产销总值及主要产品产量表示例部分表格</figcaption></figure><p><strong>第三步。各行业月度规模以上工业总产值×上年度各行业增加值率=各行业规模以上工业增加值。再将它们继续汇总，可以得到大类、门类行业以及总的工业增加值。</strong></p><p>为什么只能推算？主要还是受月频数据的时效性制约，统计局很难获得企业详细的财务费用数据，所以无法像年度数据一样，直接依据收入法计算增加值（年度数据也只有被调查企业才有详细数据）。只有产量、产值的数据是比较好摸清的，所以只能采用增加值率法间接推算。</p><p><strong>不过，考虑到与GDP数据的衔接问题，统计局在2006年11月之后，就已经不再公布月度工业增加值的绝对值数据了，而只发布增速数据，这一点需要注意。</strong></p><p>这里的增速指的主要是不变价增速。所以首先要将现价工业增加值转为不变价工业增加值，方法是价格指数缩减法，我们在GDP核算中曾提到过。</p><p>PPI是工业所采用的价格缩减指数。不同中类行业用对应的PPI缩减，然后再将行业不变价增加值加总，得到行业大类和总的不变价工业增加值。</p><p>在有了不变价工业增加值后，就可以计算增速。目前统计局既会发布同比增速，也会发布季调后的环比增速。环比增速自2011年2月份后发布，季调方法和GDP一样，也是采用统计局研制的季节调整软件（NBS-SA）。不过在增速计算方面，有一点处理上的细节，我们在此按下不表，下文会再提到。</p><p><strong>总结上文，针对目前统计局发布的月度工业增加值数据，我们认为有四点需要把握：</strong></p><p>1）月度工业增加值是一个利用上年度增加值率间接推算出来的数据。</p><p>2）目前只公布工业增加值的增速，不公布绝对值。</p><p>3）度量的是规模以上工业企业，不是所有工业企业。</p><p>4）是用不变价工业增加值来计算增速，而不是现价，即剔除了价格因素。</p><h2 id="规模以上工业统计口径的变化">“规模以上工业”统计口径的变化</h2><p>上文中我们提到了“规模以上”这个概念。将工业分为“规模以上”和“规模以下”，主要还是考虑到现实中的统计局限性。一方面是规模以下工业企业数量繁多，统计起来有难度。另一方面是因为很多小企业缺乏完整清晰的财务核算流程和财务报表，又很难严格落实统计数据填报的准确性，所以如果纳入了小企业，可能会让数据质量打折扣。</p><p>虽然目前规模以上工业企业数量有限，但是它们的增加值占所有工业企业的比例，大约在80%以上，还是具有较强的代表性。</p><p><strong>统计局每年都会按照企业前一年的营收规模，来评定是否将其纳入规模以上工业企业名录（由企业向统计局审报）。</strong>符合这个标准的企业每年是有变化的，比如有新建的、营收扩张的、也有破产倒闭的、营收下降的。所以这个名录内的企业范围一直在变动。</p><p>比如企业A的2018年营收规模超过2000万，则会在2019年纳入该名录（简称为“升规”），若该企业2019年经营不善，营收又回到2000万以下，则会在2020年被划出该名录（简称为“退规”）。</p><p>读者在这里可能会有疑问：如果名录内的企业进进出出，那么不同时期的工业增加值，可能会面临统计口径不可比的问题。比如去年可能统计了企业A的增加值，今年A变为了规模以下企业，就没有被统计。那么统计局发布的工业增加值的月度同比增速数据，对此是如何处理的呢？</p><p><strong>一个基本原则是：以本期的企业范围为基准。</strong>比如去年有100家规模以上工业企业，企业A升规之后，今年规模以上企业变成了101家，企业A会同时填报本期和上年同期的工业数据。这时在计算增速时，无论是分子（本期工业增加值）还是分母（上年同期工业增加值），都以这 101家工业企业为准来计算。</p><p>这也意味着，如果我们试图用以前的名义工业增加值绝对值，再结合同比增速数据、PPI数据，倒推出当前各月规模以上工业增加值的绝对值，会产生比较大的估算误差，因为增速的口径一直在动态调整，而口径的变动细节是我们所不掌握的。</p><p><strong>另外，“规模以上工业”的标准，本身也经历了多次调整：</strong></p><p>1）1998-2006年，指全部国有和年主营业务收入≥500万元的非国有工业法人单位。</p><p>2）2007-2010年，指年主营业务收入≥500万元的工业法人单位;</p><p>3）2011年至今，指年主营业务收入≥2000万元的工业法人单位。</p><p>从标准的变化来看，一是所有制色彩在淡化，这反映了民营经济的壮大。二是营收门槛在抬高，说明我国工业企业规模正在不断扩张。</p><p>21世纪以来，规模以上工业企业单位数迅速增长。2011年门槛调高后，规上工业企业数量减少，而后缓慢增加，截至2020年5月，共有37.5万家规模以上工业企业。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814231245326.png" alt=""><figcaption>规模以上工业企业数在稳步提升，2011 年的断档主要受标准上移影响</figcaption></figure><h1 id="如何解读工业增加值">如何解读工业增加值？</h1><h2 id="从总量上观察工业增加值">从总量上观察工业增加值</h2><p>目前可以获取的月度工业增加值数据，有当月同比、累计同比、季调环比。目前市场和研究者采用的比较多的还是同比增速。</p><p>在中国，1月和2月存在春节错位因素。如果上一年春节假期在1月，企业停工，而今年春节今年在2月，那么今年1月工业增加值增速将大幅冲高，2月数据则陡然下行，进而会导致工业增加值当月同比时间序列图中出现一些明显的“尖刺”。</p><p><strong>一个简单的处理办法是，不考虑1月和2月的当月增速，而将它们直接合并起来，用1-2月累计增速代替，这样就可以消除春节影响，使得整体数据走势更为平滑。</strong>事实上，自2013年起统计局就开始合并发布1-2月份工业数据了。</p><p>工业增加值同比增速，反映的是工业生产的快与慢。而工业生产又与经济的冷热状况密切相关。</p><p>如果工业增加值增速上升，说明工业企业开工生产的积极性提高，背后可能反映了更旺盛的社会需求，或者至少说明企业对短期经济前景是更加看好的。当然，影响因素可能来自多方面，但工业生产的变化，或多或少反映了一些值得关注的经济信号。</p><p>相较于其他经济部门，工业生产对于经济景气度会更敏感。因为企业可以根据销售情况比较灵活地调整生产计划，不会有太强的时滞。跟踪工业增加值能够比较有效地捕捉到经济短期变化。</p><p>有一个问题在于，目前我国产业结构正逐渐偏向服务业，那么工业增加值还能在多大程度上反映我国经济形势？</p><p><strong>的确，工业增加值占GDP比重一直在降低，但是目前仍然有30%左右，还是有一定的代表性。</strong></p><p><strong>更重要的是，工业生产与其他产业之间有很紧密的联系。</strong>例如其他产业所需要的原材料、机械设备，大多来自于工业部门，这意味其他产业的需求好转，也将体现为工业生产的加快。而工业生产加快，又会带动其他产业特别是生产性服务业的发展，如物流运输、研发设计、商务服务等。所以说工业生产的加快，同时反映了其他产业的情况。</p><p>从数据层面来看，工业增加值增速与GDP增速走势也基本是保持一致的。不过2012年以来，工业增加值增速走弱，GDP却保持了较强的韧性（主要是服务业起了支撑作用），这也的确说明了工业增加值的信号意义有所削弱。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814232032766.png" alt=""><figcaption>工业增加值同比和 GDP 同比还是具有较高的同步性</figcaption></figure><p><strong>工业生产很大程度上受消费、投资、出口等下游需求影响。</strong>其中，房地产和工业生产的相关性很强，主要是因为房地产施工所涉及的工业面很广泛，包括建材、钢铁、化工，各种机械设备等。另外，地产竣工也可能会带动家电、家具等行业的生产活动加快。</p><p>数据方面，房地产投资增速和工业增加值同比之间，确实保持着较高的同步性。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814232312341.png" alt=""><figcaption>房地产投资和工业增加值同比走势契合度较高</figcaption></figure><p><strong>但工业生产有时候也会与需求出现错位。供需关系间的动态互动过程，被人们总结为库存周期。</strong>这个周期包含四个阶段：</p><p>1）被动去库存：需求已经复苏，但企业还未即时反应，生产不足，因此库存减少。</p><p>2）主动补库存：企业主动加快生产，补充存货，以应对未来需求的增长。</p><p>3）被动补库存：需求开始疲软，销量下降，企业未及时调整生产，导致库存积压。</p><p>4）主动去库存：企业已经预见到了经济的不景气，主动减少生产，带动库存下行。</p><p>四个阶段分别对应经济的复苏期、繁荣期、衰退期、萧条期。</p><p>工业增加值和工业企业产成品存货，分别描述了生产和库存状况。不过产成品存货是名义值，所以我们也简单以“工业增加值同比+PPI同比”来指代名义工业增加值增速。基于这两个指标，可以简单地对库存周期进行刻画。比如名义工业增加值增速上行，产成品存货增速下行，意味着经济进入了被动去库存的阶段。</p><p>可以看到自2003年以来，我国已经经历了5轮相对完整的库存周期。在下一篇工业数据分析报告中，我们将花更多的篇幅来分析库存周期。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814232536782.png" alt=""><figcaption>用工业增加值和产成品存货数据刻画的中国库存周期</figcaption></figure><p><strong>工业生产除了会受需求因素影响外，还可能受价格因素影响，特别是上中游原材料行业。</strong>因为价格上涨，会从价的角度会提高企业盈利水平（需求好转则是影响“量“）。盈利增厚了之后，将使得企业有更充裕的现金流，对未来的预期可能也会更好，进而加快工业生产。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814232717139.png" alt=""><figcaption>PPI 同比提升会增厚企业盈利，进而带动工业生产</figcaption></figure><p><strong>此外，工业生产还和流动性环境有关。</strong>当流动性宽松的时候，一方面，企业更容易融资，有利于加大生产。另一方面，也容易刺激社会需求，进而带动生产。</p><p>社融增速与工业增加值累计同比增速有较好的相关性，在部分时期有一定的领先性。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814232825719.png" alt=""><figcaption>社融增速不工业增加值同比有一定相关性</figcaption></figure><h2 id="从结构上观察工业增加值">从结构上观察工业增加值</h2><p>有时，影响工业生产的因素是全局性的，几乎所有行业的增加值同比都向同一个方向调整，这种因素比较显著，往往更容易识别。但有时，不同行业间也存在分化，这些信息会被整体工业增加值数据的升或降所掩藏，所以除了观察总量数据以外，还需要观察结构。</p><p><strong>首先我们需要了解各工业行业的增加值占比。</strong></p><p>目前统计局会同时披露41个工业细分行业的月度数据。但由于统计局并没有披露绝对值，年度数据的细分程度目前也只到采矿业、制造业、电力热力燃气及水生产和供应业三个门类行业，因此要通过其他途径来计算占比。</p><p><strong>我们此处主要基于投入产出表进行计算。</strong>投入产出表属于国民经济核算的一部分，它把生产法、收入法、支出法的GDP核算数据全部整合在了一张表内，有比较详细的国民经济各行业增加值数据。但由于工程量比较大，5年才编制一次，最新的一次是在2017年。</p><p>用投入产出表计算的问题在于，一是时间可能稍微有点旧，只有2017年数据。二是它统计的是全部工业，而月度工业增加值只针对规模以上工业。三是投入产出表是按照产品分类进行统计的，而工业增加值是按照部门分类进行统计。不过总的来说，这些误差都在可接受范围内。</p><p>2017年投入产出表中，一共有95个行业属于工业，可以通过合并，将他们与工业大类行业逐一对应起来。最终计算出的各行业增加值在工业增加值中的占比如下表所示。</p><p>可以看到，建材、化工、能源、汽车、计算机通信、钢铁煤炭等行业在我国工业结构中居于主要地位。前十大工业增加值占比合计超过50%，对整体工业增加值增速有较大的影响力，我们往往在分析时也会更重视这些产业。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814233039497.png" alt=""><figcaption>各工业大类行业增加值占总工业增加值比例</figcaption></figure><p>由于有40个左右的工业行业，单个分析无异于管中窥豹。所以，除了关注一些重要行业（比如钢铁、化工）或者是月度异常值（比如个别行业增速突然大幅提升）以外。我们还可以按照不同的行业属性，将它们按照各种维度进行合并分析。下面我们提示几个基本的视角。</p><h3 id="视角一出口依赖">视角一：出口依赖</h3><p>我国工业生产主要受内需形势影响，但有些行业受海外需求的影响也较大。<strong>我们可以将所有行业分为两组进行对照分析，一组是高出口依赖型，另一组是低出口依赖型，以此区分需求冲击的类别。</strong></p><p><strong>工业交货值占营业收入比重，可以用来判断某行业的出口依赖度。</strong>我们将该比例在10%以上的行业定义为高出口依赖型行业，其它为低出口依赖型。根据2019年数据推算，共有15个高出口依赖型行业。这15个行业的增加值合计占工业比例大约为30%左右，其中计算机通信、电气机械等行业规模较大。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814233205438.png" alt=""><figcaption>出口依赖度排名前 15 的行业</figcaption></figure><p>结合各行业增加值在组内的占比数据（同样基于2017年投入产出表，并假设该比例保持稳定），我们可以分别估算出高、低出口依赖组的工业增加值加权增速。</p><p>2012-2015年，两组增速均出现趋势性下行，但值得注意的是，2016年-2018年上半年，两组增速突然出现了非常明显的分化：其中高出口依赖组的增速出现了一轮上涨，低出口依赖组则变化较小，甚至有所下行。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814233318003.png" alt=""><figcaption>2016-2018 年上半年高出口依赖度行业增加值增速明显抬升</figcaption></figure><p>这轮分化似乎揭示了这样一个问题：2016-2018年上半年，工业生产更多的由外需回暖支撑，内需表现平平，所以那些出口依赖度高的行业，享受到的利益也就更多。</p><p>出口交货值同比和海关出口同比均显示出，2016-2018年上半年的出口情况在好转。这一定程度上是由全球经济回暖推动的，无论是OECD综合领先指标，还是摩根大通全球综合PMI指数，均在同期出现了明显回升。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814233431068.png" alt=""><figcaption>2016-2017 年出口出现明显好转</figcaption></figure><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814233454907.png" alt=""><figcaption>2016-2017 年全球经济景气度处于上行期</figcaption></figure><h3 id="维度二上中下游">维度二：上中下游</h3><p><strong>另一个常见的行业划分视角是上游、中游、下游。不同的研究者的具体划分结果有所差别，但划分思路是一致的，即根据各个行业在产业链中的位置来进行划分：</strong></p><p>1）上游行业：主要从事初级资源开采，获得最原始的工业原料。</p><p>2）中游行业：继续进行产品加工，但是这些产品往往继续用于下一阶段的生产。这其中既包括对初级资源进行加工后所形成的工业原材料，也包括未来继续用于生产活动的各种机械设备。</p><p>3）下游行业：产品往往直接面向消费，离终端需求更接近。</p><p>如下图所示，我们按照各个工业行业的特性，对其进行了上中下游划分。其中，又进一步将中游分为原材料（绿色方框）、机器设备（蓝色方框），前者离上游行业更近，后者离下游行业更近。</p><p>这四类行业增加值占比分别如下：上游为10%，中游原材料为32.1%，中游机械设备为20.5%，下游为27.4%，还有约10%的工业类别规模比较小且所处产业链位置不明确，因此我们没有纳入考量。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814233629871.png" alt=""><figcaption>工业行业的上中下游划分示意图</figcaption></figure><p>接下来，按照与上文类似的方法，可以计算出上中下游各自的工业增加值的加权增速。</p><p><strong>理论上来说，上中下游的增速走势应当基本保持一致，因为需求是沿着产业链条进行传导的。</strong>首先从最靠近终端需求的下游行业开始，基于社会需求变动调整生产计划，并很快会随之带动中游、上游加快或放慢生产。</p><p><strong>不过，上游有时受价格的影响也很大。</strong>比如原油价格上升，可能会明显增厚石油公司的利润，这就会诱导其加快工业生产。这种冲击属于供给端的冲击，它对于整个工业产业链的影响是比较复杂的。</p><p>虽然2016年至今，整体工业增加值增速的走势波动较小，但是内部结构却出现了很大差异。2016到2018上半年间，上中下游工业分化。其中上游工业和中游原材料生产明显走弱，而中游机械设备、下游则出现了工业增加值增速的抬升。</p><p>这段时期的分化，如果只从数据面板来推测，大概率是因为上中下游受到的冲击各不相同。</p><p>首先，上游行业、中游原材料行业面临的冲击，可能主要来自于供给侧改革。由于环保限产、企业停工倒闭等一系列因素，工业增加值增速持续下行。（但下文中我们会结合高频数据，对这一推断进行修正）</p><p>中游机械设备和下游行业的上升，很大程度上是受外需提振。上文中提到的高出口依赖型行业，大多属于中游机械设备或下游行业。2018年下半年，中游机械设备和下游行业的工业增加值增速也出现了明显分化，后者迅速下跌，但是前者保持了韧性。</p><p>这反映了外需承压后，国内消费与投资间的差异。下游行业离消费更近，但消费持续低迷；中游机械设备离投资更近，而在2018年，制造业投资增速在强势回升。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814233722738.png" alt=""><figcaption>2016 年后上中下游行业走势严重分化</figcaption></figure><h3 id="维度三新旧动能">维度三：新旧动能</h3><p>此外，目前中国正处于新旧动能转换期，我们应当更关注与新动能相关的科技产业。</p><p><strong>统计局近年来开始公布高技术产业、战略性新兴产业的增加值同比数据，这两类产业很大程度上代表了工业中的技术进步力量，也是我们经常能够听到的概念。</strong></p><p><strong>先来厘清一下它们各自的概念范畴：</strong>1）高技术产业/高技术制造业，是指R&amp;D投入强度相对高的制造业行业。2）战略性新兴产业，则主要指对经济社会全局和长远发展具有重大引领带动作用的产业。</p><p>从对应的国民经济行业范围来看，战略性新兴产业所涉及的领域，要比高技术产业更广泛（但是战略性新兴产业对应行业中，往往只有行业内的部分高端活动属于战略性新兴产业）。这在统计数据上也可以反映出来，2018年末全国从事战略性新兴产业生产的规模以上工业企业数为66214个，规模以上高技术产业企业数则只有33573个。</p><p><strong>总体而言，高技术产业则更适合用于描述研发强度较高、发展已较为成熟的工业类科技产业。战略性新兴产业则涉及产业面更广，也更尖端。总体而言，后者能更全面、准确地反映中国科技创新的力量。</strong></p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814234031962.png" alt=""><figcaption>高技术产业、战略性新兴产业各自的概念范畴以及涉及领域</figcaption></figure><p>但是这两类产业的工业增加值数据发布时间都比较短。从已发布的数据来看，高技术产业和战略性新兴产业的增加值同比增速，持续高于总体工业增加值同比，说明新动能表现确实优于旧动能。</p><p>不过，2019年以来两类产业的增速已经快速回落，与整体工业数据差距有所收窄，这主要是受中美贸易摩擦影响。计算机通信制造业和高技术产业的增加值同比走势很接近，在2019年，计算机通信制造业的出口出现了断崖式下落，进而带动其增加值增速下行，其他高技术产业、战略性新兴产业也面临类似的问题。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814234234705.png" alt=""><figcaption>高技术产业、战略性新兴产业增加值增速持续高于总体工业</figcaption></figure><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814234248866.png" alt=""><figcaption>2019 年后计算机通信因为出口下行带动其生产放缓</figcaption></figure><h1 id="如何预判工业增加值数据">如何预判工业增加值数据？</h1><p>工业增加值为月频数据，公布时间为下个月的12-18号，其实是相对滞后的。</p><p>在实际中，我们可以借助一些其他指标，对短期工业生产状况进行辅助判断和预测，包括各种微观的高频指标（日频、周频、旬频等）。</p><h2 id="pmi生产指数">PMI生产指数</h2><p><strong>目前反映工业生产面的月度宏观数据，主要就两个，一个是工业增加值，一个是制造业PMI生产指数。</strong>PMI数据在每个月最后一天发布，及时性很高，相对于工业增加值数据要早了半个月左右。</p><p>PMI生产指数是13个PMI分项指数中的一个。它反映的是制造业的产品生产量变化，而制造业是工业的主要部分。如果PMI生产指数大于50，说明工业生产活动在扩张，小于50则说明在收缩。</p><p>由于制造业PMI生产指数本质上是一个环比指标，因此可以和PMI直接进行对比的是工业增加值季调环比，两者走势具有一定的同步性。（也可以将PMI指数转化为虚拟同比，然后再与工业增加值同比进行对比）</p><p>这意味着，如果本月末发布的PMI数据上升，那么我们可以简单预判本月的工业增加值数据（在下个月发布）也会上升。</p><p><strong>但是PMI生产指数采用的统计方法是问卷调查法。它的取值只能反映趋势，而不能反映真实的工业生产活动变化率，这一点是它和工业增加值数据的最大不同，也是导致它们之间出现走势背离的重要原因。</strong></p><p>PMI数据备受市场关注，我们未来也有专门的报告对它进行解读。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814234521689.png" alt=""><figcaption>工业增加值环比数据和 PMI 指数走势相关</figcaption></figure><h2 id="相关高频指标">相关高频指标</h2><p><strong>一些频率更高的微观数据也可以显示出工业生产状况。与工业增加值数据相关的、值得挑选的高频指标，主要来自于三个方向：</strong></p><p><strong>1）能够相对全面反映工业生产状况的指标，比如发电耗煤、货运量等。</strong></p><p><strong>2）能够揭示重点行业生产状况的指标，比如钢铁、化工、汽车等工业生产数据等。</strong></p><p><strong>3）能够反映上游价格和下游需求的指标。</strong></p><p>第三类指标尽管不直接反映生产面，但会释放与工业生产有关的重要信号。上游原材料方面，市场一般比较关注动力煤、原油、螺纹钢、水泥等价格变动。下游需求主要关注房地产、建筑业相关数据。考虑到本篇报告主要针对工业生产，所以这些数据我们在本文中暂不进行具体分析。</p><p>接下来我们将对第一类和第二类中，那些市场经常引用的高频数据进行介绍。</p><p><strong>另外需要说明的是，在展开分析之前，往往需要对这些指标做一些基本的数据整理，将高频数据转化为低频。例如将日频数据累加/平均为月频，然后再计算同比增速，与工业增加值同比进行比较。</strong></p><h3 id="类型一发电耗煤量和铁路货运量"><strong>类型一：发电耗煤量和铁路货运量</strong></h3><p>在介绍具体的高频指标之前，我们首先来看看一个前几年很火的概念——克强指数，它可以为我们寻找高频指标提供一些思路。</p><p>克强指数于2010年推出，这是一个由英国《经济学人》杂志创造的用于评估中国GDP增长的指标，很大程度上其实反映的是工业生产的景气度。</p><p><strong>它混合了三种指标，计算公式如下：工业用电量增速×40% + 中长期贷款余额增速×35% + 铁路货运量增速×25%</strong>，三个指标的权重是通过简单回归计算出来的。</p><p>克强指数和工业增加值同比的走势，在2016年之前的相关性还是很高的，但是2016年后却发生了明显背离，克强指数大幅提升，但是工业增加值却变动不大。这似乎与我们上文中提到的2016年后的行业分化隐约有一些联系。</p><p>这种背离，在我们下文介绍其他高频指标时还会经常看到。目前暂且保留这些疑问，我们会在最后一章探讨这个奇怪的现象。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814234710347.png" alt=""><figcaption>工业增加值和克强指数走势高度相关，但在 2016 年后相关性削弱</figcaption></figure><p>克强指数中的工业用电量、铁路货运量，都从侧面反映了真实的工业生产状况，我们也可以从这两个方向着手寻找高频指标。</p><p><strong>第一，工业生产需要大量耗电。因此，工业用电量的变化率某种程度上可以作为工业生产的替代指标。</strong></p><p>国家能源局每月会发布全国电力统计数据，其中就有工业用电量的当月同比。它和工业增加值同比之间有较强的相关性。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814234815769.png" alt=""><figcaption>工业增加值和工业用电量同比走势相关</figcaption></figure><p>不过，工业用电量数据也是月频数据，且发布时间和工业增加值差不多，不具备前瞻性。</p><p><strong>市场更常用于观察工业生产的指标是6大发电集团耗煤量（甚至可以说是最常用的高频观测指标了），它是日频数据，连续性好，便于跟踪。</strong>6大发电集团分别是浙电、上电、粤电、大唐、华能、国电，2020年3月后由华电数据代替国电数据。具体数据通过取样这6大集团旗下位于沿海火电厂的煤炭日耗数据而得。</p><p>首先需要说明的是，6大集团的耗煤量数据自2020年7月以来已经陆续停止更新了，暂时还不清楚是短期停更还是长期停更。考虑到这个指标以前的使用频率比较高，我们这里还是重点介绍一下。</p><p>使用这一指标的逻辑在于，目前我国发电量80%来自于火电，因此可以通过大型发电集团的耗煤量，粗略地代替发电数据，进而观察社会用电情况（发电量和用电量数据很接近）。</p><p>可以将发电耗煤量的日频数据加总成月度数据，然后计算同比。如果本月6大发电集团耗煤量同比提升，一般预测本月工业增加值同比也将提升。</p><p>但是两者出现背离的时候也很多。以2011年-2019年为观察区间，6大发电集团耗煤量同比预测的成功率大概在64%左右。具体来看，在各年1-2月、3月、4月份的预测成功率较高，而在5月和10月的预测成功率则非常低。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814234915053.png" alt=""><figcaption>工业增加值和发电耗煤量同比有一定相关性</figcaption></figure><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814234926640.png" alt=""><figcaption>6 大发电集团耗煤量预测成功率大约为 64%</figcaption></figure><p>发电耗煤量和工业增加值数据出现背离的原因，可能包含以下几点：</p><p>1）工业用电数据本身就与工业生产存在背离，进而导致发电耗煤数据与工业数据背离。</p><p>2）6大发电集团耗煤量反映的是社会总用电量，即除了工业用电以外，还会反映第三产业用电、居民用电，它们也存在自身的波动规律。工业用电目前占比为6-7成。</p><p>3）6大发电集团耗煤量更多反映的是东部沿海地区的用电情况。而中西部地区和东部沿海地区的产业结构、气候特征不一样，电力需求可能存在地域差距。</p><p>4）发电耗煤量只反映了国内火电发电情况，外来电、水电、风电、核电等都不在考虑范围内。</p><p>但总的来说，6大发电集团数据来源很清晰，时效性很好，尽管存在一些微观数据难以避免的弊病，也不失为一个可供参考的指标，所以此前在市场分析的使用频率也比较高。</p><p><strong>第二，工业生产与货物运输关联密切，尤其是铁路货运量。所以通过铁路货运量的变化，也可以间接判断工业生产形势。</strong></p><p>但同样地，国家统计局披露铁路货运量数据的时间，要晚于工业增加值。</p><p><strong>市场常用大秦铁路货运量数据来替代。</strong>该数据为月度数据，由大秦铁路上市公司于每月10日前公布，在时间上领先工业增加值。</p><p>大秦铁路是连接山西大同与河北秦皇岛的国铁Ⅰ级货运专线，从历史数据来看，大秦铁路货运量大体上能反映整体铁路货运量的趋势变化。与此同时，大秦线承担着"西煤东运"、"北煤南调"的国家战略任务，其货运量中70%以上为煤炭，所以它其实也间接地反映了发电耗煤情况。</p><p>2016年之前，铁路货运量同比与工业增加值同比的同步性还不错，但是2016年之后也出现了相当严重的背离。大秦铁路货运量数据是在2014年之后才披露的，受2016年后特殊情况影响，它用来判断工业生产的准确率其实并不高。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814235102846.png" alt=""><figcaption>铁路货运量和工业增加值数据之的同步性在2016年之前尚可</figcaption></figure><h3 id="类型二重点行业生产状况指标">类型二：重点行业生产状况指标</h3><p>此外，我们可以挑选出一些重点行业进行监测，寻找与这些行业生产相关的高频指标。</p><p>结合上文中提到的各行业增加值占比，目前可以重点关注的工业类别包括黑色金属冶炼及压延加工业、化学原料及化学制品制造业/化学纤维制造业、汽车制造业，即钢铁、汽车、化工行业，这些行业都有一些可供参考的高频数据。</p><p><strong>首先看钢铁行业。目前市场上分析钢铁行业生产情况的高频指标，一般有高炉开工率、粗钢产量。</strong></p><p>1）高炉开工率 = 开工高炉数÷总高炉数，该指标为周频数据，由Mysteel网站披露。高炉开工情况来自对全国163家钢厂样本的调研。</p><p>自有2015年下半年有数据以来，高炉开工率其实是在不断走低的，然后在2018至今，基本维持在60%-70%的区间内波动。从唐山钢厂的情况来看，2015年-2017年总高炉数变化不大，主要是开工高炉数在减少，反映的是供给侧改革和环保限产政策的影响。</p><p>另外，高炉开工率还有比较明显的季节波动特征，一般是二三季度较高，一四季度偏低。我们在分析这一数据时，一般会从环比的视角来看开工率是上升还是下降，直观地感受下近期钢铁工业生产是加快还是放缓。但为了剔除季节性影响，也会对比上年同期的开工率。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814235248503.png" alt=""><figcaption>高炉开工率波动带有明显季节性，夏季开工率更高</figcaption></figure><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814235259717.png" alt=""><figcaption>高炉开工率同比变动百分点和钢铁行业增加值同比在部分时间段内存在相关性</figcaption></figure><p>2）重点企业粗钢日均产量为旬度数据，由中国钢铁工业协会披露，大约每旬结束的3-5天内会披露该旬数据。统计对象为参与旬报统计的会员钢企。</p><p>但是这个数据的质量不是很高，因为有时监测企业会有不上报数据的情况，这时钢铁协会只能用这些企业的历史数据带入估算。另外，钢铁协会每年统计的会员钢铁企业不一致，可能有口径不可比的问题。</p><p>将重点企业粗钢日均产量（钢铁协会口径）转换为月度同比之后，基本上可以替代发布更滞后的粗钢产量当月同比（统计局口径）。除去2016年，它们与黑色金属冶炼及压延加工业增加值也有较好的相关性。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814235412797.png" alt=""><figcaption>粗钢产量同比和钢铁行业增加值同比有较好相关性</figcaption></figure><p><strong>其次看汽车制造业。汽车行业的常用跟踪指标主要包括：汽车半/全钢胎开工率、汽车产量。</strong></p><p>1）汽车半/全钢胎开工率，由中国橡胶信息贸易网披露，二者均为周频数据，一般在每周五更新。</p><p>这两个开工率数据都和汽车轮胎生产有关，两者在细节上略微有点不一样，半钢胎主要用于轿车和大部分轻卡，全钢胎主要用于卡车和小部分轻卡，历史走势来看两者没有太大的区别。</p><p>汽车半/全钢胎开工率，主要反映了轮胎厂商的生产情况，但是因为轮胎和下游汽车的联系比较紧密，所以也间接反映了汽车生产情况。</p><p>这两个指标的分析方法和高炉开工率差不多。如果把它们处理成月度同比变动，可以发现和汽车制造业同比也存在一定的关联度。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814235502392.png" alt=""><figcaption>汽车半/全钢胎开工率变动百分点和工业增加值同比有一定关联度</figcaption></figure><p>2）汽车产量。目前统计局、中汽协、乘联会都会发布相关的月度数据，这三个口径的汽车产量，官方程度依次下降，但是披露时间依次提前。乘联会数据的披露时间一般在下个月上旬，汽车工业协会数据一般在下月10号左右，均略微领先于工业增加值。</p><p>另外，中汽车披露的汽车数据包括乘用车和商用车，乘联会只披露乘用车数据，不过近年来乘用车占比约在80%-90%左右。从历史走势来看，三个不同口径下的汽车产量增速差异不是很大。</p><p>汽车产量同比与汽车制造业增加值同比基本上是高度相关的。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814235620156.png" alt=""><figcaption>汽车产量同比不汽车制造业增加值同比保持高度一致</figcaption></figure><p><strong>最后是化工行业。化工行业的跟踪指标可以采用PTA产业链负荷率。</strong></p><p>我们可以简单地将PTA（精对苯二甲酸）理解为一种重要的化工产品，它的下游延伸产品主要是涤纶（即聚酯纤维），涤纶又属于化纤的一种。所以PTA产业链负荷率可以大致反映化学原料及化学制品制造业、化学纤维制造业的生产情况。</p><p>PTA产业链负荷率为日频数据。有一点类似于汽车半/全钢胎开工率，我们可以对PTA产业链负荷率采用同样的数据处理和分析方法。</p><p>但这个数据的质量似乎不是很高。我们对PTA产业链负荷率做当月同比处理，然后对化学原料及化学制品制造业、化纤制造业的增加值同比进行简单平均，以反映化工行业整体情况，两个指标只有在部分时间是同步的。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814235719956.png" alt=""><figcaption>化工行业增加值同比和 PTA 产业链负荷率同比变动百分点的同步性丌算高</figcaption></figure><h2 id="工业增加值数据缘何与高频指标背离">工业增加值数据缘何与高频指标背离？</h2><p><strong>根据上文的高频数据，可以看到一个比较奇怪的现象：过去那些与工业增加值有着密切联系的高频指标，近年来似乎统统出现了背离。</strong></p><p>2016-2017年，工业用电量、发电耗煤、铁路货运量、高炉开工率同比数据均已大幅回升，这反映了工业生产在明显加快。但工业增加值同比却一直趴在6%附近，维持着一种超预期的稳态（见图表20、21、23）。</p><p>这使人感到困惑。市场上也出现了一些关于工业增加值“失真”的讨论。</p><p>可以从行业结构上来解释这一点吗？上文中曾提到，2016年以来的上游和中游原材料行业、中游机械设备和下游行业，各行业的工业增加值数据，在这段时期也出现了一些明显的趋势性分化。</p><p><strong>有一种解释是这段时期的产业升级。</strong>上游和中游原材料往往是高能耗行业，铁路货运量也比较大，假如由于产业升级等原因，它们对工业生产的影响力下降。那么它们的生产加快，可能对整体工业增加值数据的影响比较弱。这有助于解释“发电量强、工业增加值弱”之类的情况。</p><p><strong>事实恰恰相反。实际上2016年正是上游和中游原材料在趋势性下行，直到2017年才陆续见底回升</strong>（然而2017年下半年高频数据显示工业生产其实已经开始回落），反倒是中游机械设备和下游行业的生产加快，起了对冲作用，在支撑着工业增加值。（见图表14）</p><p><strong>不过这也说明，问题可能正是出在上游和中游原材料行业。</strong></p><p>那么是高频数据错了，或者说高频数据受到了特殊因素干扰吗？可能性也很低。首先，几个不同类别的高频数据都共同印证了2016年后上游、中游原材料工业生产在加快。其次，统计局公布的各种工业品产量数据，也显示出生产加快的痕迹，例如煤炭、钢铁、有色、水泥等产量，在2015年下半年-2016年初就已经开启了新一轮扩张。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200814235916667.png" alt=""><figcaption>煤炭、钢铁、有色、水泥的产量同比都在 2016 年出现了明显提升</figcaption></figure><p><strong>理论上来说，工业增加值剔除了价格因素，应该与产量的变动是保持一致的。</strong>中游机械设备和下游行业这一点就表现的很好，比如上文曾提到的汽车产业（见图表28）、还有下图中的通用设备制造业等。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200815000013472.png" alt=""><figcaption>通用设备制造业增加值同比，不金属切削机床的产量同比走势基本一致</figcaption></figure><p><strong>产量数据还顺便说明了统计口径也不是关键问题。</strong></p><p>部分观点提到，工业增加值同比只囊括了规模以上的企业，而高频数据比如发电量背后反映的是所有工业企业的信息。如果是规模以下的小企业生产加快，那么用电量等高频数据会走强，但反映不到工业增加值增速之中。的确有这种可能存在。但是：</p><p>1）大企业仍然是主导高频数据（比如用电量）的主要力量，所以小企业因素对用电量与工业增加值背离的解释力比较弱。</p><p>2）小企业和大企业的生产驱动逻辑不存在本质区别，要么是价格上涨，要么是需求启动，所以很难看到小企业加快生产、大企业不动的情况。除非去产能的政策限制松动，导致更多小企业出现，但是2016年也没有出现明显的政策松动。</p><p>3）统计局提到的产量数据是关键。它其实也是针对规模以上工业企业调查的，和工业增加值是同一个口径。它的增长应该说明了规模以上工业生产的确在加快。</p><p><strong>我们提供一种可能的解释，问题也许出在工业增加值增速的核算方法：</strong></p><p>根据现行规则，首先得用本月工业总产值×上年增加值率推算出本月现价工业增加值，然后再用PPI缩减为不变价工业增加值，最后计算增速。理论上来说，工业总产值=产量×价格，在用PPI缩减后，确实消除了价格因素。</p><p>但是我们上文也谈到了，在实际中，工业总产值是企业通过联网直报系统直接报送数据，然后由统计局汇总而成的，而PPI的核算则是另一套程序。这可能导致价格剔除没办法做到理论上那么完美。</p><p>而在2016年，上游和中游原材料行业的PPI出现了一轮历史罕见的飙涨，使得这个核算差异可能被放大了，具体表现在企业报送工业总产值数据时，可能考虑的价格上涨因素没那么多，而PPI核算出来的价格上涨更剧烈。这就导致用PPI缩减时，把最终的不变价增加值缩减得更少了，进而降低了工业增加值的增速。</p><figure><img src="https://gitee.com/shao818/Figure/raw/master/null/image-20200815000110036.png" alt=""><figcaption>上游和中游原材料行业的 PPI 在 2016 年出现了一轮暴涨</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> 宏观经济 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经济指标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四三篇博客</title>
      <link href="posts/3927316218/"/>
      <url>posts/3927316218/</url>
      
        <content type="html"><![CDATA[<h1 id="行内公示">行内公示</h1><ul><li>这里一个行内公示<span class="math inline">\(\Delta_{i,t}=x^{2}+y_{i}\)</span></li></ul><h2 id="独立公示">独立公示</h2><p><span class="math display">\[y^{t}=x_{2}+\sum_{i=1}^{t=10}X_{i} \tag{1}\]</span></p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公式 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
